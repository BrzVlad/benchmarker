// Implementation file for parser generated by fsyacc
module internal Microsoft.FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
# 3 "../pars.fsy"


#nowarn "1182"  // generated code has lots of unused "parseState"

open Internal.Utilities

open Microsoft.FSharp.Compiler.AbstractIL
open Microsoft.FSharp.Compiler.AbstractIL.Internal
open Microsoft.FSharp.Compiler.AbstractIL.Internal.Library
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Parsing

open System
open Microsoft.FSharp.Compiler.Range
open Microsoft.FSharp.Compiler.Ast
open Microsoft.FSharp.Compiler.Lib
open Microsoft.FSharp.Compiler.PrettyNaming
open Microsoft.FSharp.Compiler.ErrorLogger

#if DEBUG
let debugPrint(s) =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint(s) = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError(e,e.Range)
let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

let mkSynOptionalExpr m xopt = 
    match xopt with 
    | None -> mkSynLidGet m Ast.FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, false, mkSynLidGet m Ast.FSharpLib.CorePath "Some",x,m)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep)::acc)
        | (f, m)::xs -> run f xs ((name, value, m)::acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false
let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis,strict,expr,m) = 
    if isSome vis then errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations(),m));
    Binding (None,
             (if strict then DoBinding else StandaloneExpression),
             false,false,[],PreXmlDoc.Empty,SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             None,expr,m,NoSequencePointAtDoBinding)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then NoSequencePointAtDoBinding else SequencePointAtBinding e.Range in
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p,attrs,p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s,m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_,m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_,_,m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_,_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_,_,m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_,_,m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

//                BindingSetPreAttrs(letRange, isRec, isUse, builderFunction, wholeRange)
type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic,initialRangeOpt,attrs,vis,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,bindingSetRange)) = 
   let ignoredFreeAttrs,decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(),wholeRange));
   SynMemberDefn.LetBindings (decls,isStatic,isRec,wholeRange)

let mkLocalBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_),body) = 
   let ignoredFreeAttrs,decls = declsPreAttrs [] None 
   if nonNil ignoredFreeAttrs then warning(Error(FSComp.SR.parsAttributesIgnored(),mWhole));
   SynExpr.LetOrUse (isRec,isUse,decls,body,mWhole) 

let mkDefnBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_bindingSetRange),attrs,vis,attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(),mWhole));
    let freeAttrs,decls = declsPreAttrs attrs vis 
    let letDecls = [ SynModuleDecl.Let (isRec,decls,mWhole) ] 
    let attrDecls = if nonNil freeAttrs then [ SynModuleDecl.Attributes (freeAttrs,attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat m p = 
    match p with 
    | SynPat.Named (SynPat.Wild _,id,false,_,_) -> id 
    | SynPat.LongIdent(LongIdentWithDots([id],_),_,_,_,_,_) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if nonNil a1 && nonNil a2 then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed());
    a1 @ a2

let grabXmlDoc(parseState:IParseState,elemIdx) = 
    LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer,rhs parseState elemIdx)

let unionRangeWithListBy projectRangeFromThing m listOfThing = 
    (m, listOfThing) ||> List.fold (fun m thing -> unionRanges m (projectRangeFromThing thing))

let rangeOfNonNilAttrs(attrs:SynAttributes) =
    (attrs.Head.Range,attrs.Tail) ||> unionRangeWithListBy (fun a -> a.Range)

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange,lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 158 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ELSE of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ENDIF of (range * string * Ast.LexerWhitespaceContinuation)
  | COMMENT of (Ast.LexerWhitespaceContinuation)
  | WHITESPACE of (Ast.LexerWhitespaceContinuation)
  | HASH_LINE of (Ast.LexerWhitespaceContinuation)
  | HASH_LIGHT of (Ast.LexerWhitespaceContinuation)
  | INACTIVECODE of (Ast.LexerWhitespaceContinuation)
  | LINE_COMMENT of (Ast.LexerWhitespaceContinuation)
  | STRING_TEXT of (Ast.LexerWhitespaceContinuation)
  | EOF of (Ast.LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM_interaction
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_interactiveSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_hashDirective
    | NONTERM_hashDirectiveArgs
    | NONTERM_hashDirectiveArg
    | NONTERM_signatureFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileModuleSpec
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_optLiteralValueSpfn
    | NONTERM_moduleSpecBlock
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_classMemberSpfn
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_memberSpecFlags
    | NONTERM_exconSpfn
    | NONTERM_opt_classSpfn
    | NONTERM_implementationFile
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_memberFlags
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_inlineAssemblyTyconRepr
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_typarDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionTypeRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseReprElements
    | NONTERM_unionCaseReprElement
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_openDecl
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_namePatPairs
    | NONTERM_namePatPair
    | NONTERM_constrPattern
    | NONTERM_atomicPatsOrNamePatPairs
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRangeSeqExpr
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_arrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_inlineAssemblyExpr
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_opt_inlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_forLoopDirection
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_activePatternCaseName
    | NONTERM_activePatternCaseNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_stringOrKeywordString
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_typeKeyword
    | NONTERM_moduleKeyword
    | NONTERM_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | OINTERFACE_MEMBER  -> 13 
  | OBLOCKEND  -> 14 
  | OBLOCKEND_COMING_SOON  -> 15 
  | OBLOCKEND_IS_HERE  -> 16 
  | ORIGHT_BLOCK_END  -> 17 
  | ODECLEND  -> 18 
  | OEND  -> 19 
  | OBLOCKSEP  -> 20 
  | OBLOCKBEGIN  -> 21 
  | ORESET  -> 22 
  | OFUN  -> 23 
  | OFUNCTION  -> 24 
  | OWITH  -> 25 
  | OELSE  -> 26 
  | OTHEN  -> 27 
  | ODO_BANG  -> 28 
  | ODO  -> 29 
  | OBINDER _ -> 30 
  | OLET _ -> 31 
  | HIGH_PRECEDENCE_TYAPP  -> 32 
  | HIGH_PRECEDENCE_PAREN_APP  -> 33 
  | HIGH_PRECEDENCE_BRACK_APP  -> 34 
  | TYPE_COMING_SOON  -> 35 
  | TYPE_IS_HERE  -> 36 
  | MODULE_COMING_SOON  -> 37 
  | MODULE_IS_HERE  -> 38 
  | EXTERN  -> 39 
  | VOID  -> 40 
  | PUBLIC  -> 41 
  | PRIVATE  -> 42 
  | INTERNAL  -> 43 
  | GLOBAL  -> 44 
  | STATIC  -> 45 
  | MEMBER  -> 46 
  | CLASS  -> 47 
  | ABSTRACT  -> 48 
  | OVERRIDE  -> 49 
  | DEFAULT  -> 50 
  | CONSTRUCTOR  -> 51 
  | INHERIT  -> 52 
  | GREATER_RBRACK  -> 53 
  | STRUCT  -> 54 
  | SIG  -> 55 
  | BAR  -> 56 
  | RBRACK  -> 57 
  | RBRACE  -> 58 
  | RBRACE_COMING_SOON  -> 59 
  | RBRACE_IS_HERE  -> 60 
  | MINUS  -> 61 
  | DOLLAR  -> 62 
  | LBRACE_LESS  -> 63 
  | BAR_RBRACK  -> 64 
  | GREATER_RBRACE  -> 65 
  | UNDERSCORE  -> 66 
  | SEMICOLON_SEMICOLON  -> 67 
  | LARROW  -> 68 
  | EQUALS  -> 69 
  | LBRACK  -> 70 
  | LBRACK_BAR  -> 71 
  | LBRACK_LESS  -> 72 
  | LBRACE  -> 73 
  | QMARK  -> 74 
  | QMARK_QMARK  -> 75 
  | DOT  -> 76 
  | COLON  -> 77 
  | COLON_COLON  -> 78 
  | COLON_GREATER  -> 79 
  | COLON_QMARK_GREATER  -> 80 
  | COLON_QMARK  -> 81 
  | COLON_EQUALS  -> 82 
  | SEMICOLON  -> 83 
  | WHEN  -> 84 
  | WHILE  -> 85 
  | WITH  -> 86 
  | HASH  -> 87 
  | AMP  -> 88 
  | AMP_AMP  -> 89 
  | QUOTE  -> 90 
  | LPAREN  -> 91 
  | RPAREN  -> 92 
  | RPAREN_COMING_SOON  -> 93 
  | RPAREN_IS_HERE  -> 94 
  | STAR  -> 95 
  | COMMA  -> 96 
  | RARROW  -> 97 
  | GREATER_BAR_RBRACK  -> 98 
  | LPAREN_STAR_RPAREN  -> 99 
  | OPEN  -> 100 
  | OR  -> 101 
  | REC  -> 102 
  | THEN  -> 103 
  | TO  -> 104 
  | TRUE  -> 105 
  | TRY  -> 106 
  | TYPE  -> 107 
  | VAL  -> 108 
  | INLINE  -> 109 
  | INTERFACE  -> 110 
  | INSTANCE  -> 111 
  | CONST  -> 112 
  | LAZY  -> 113 
  | OLAZY  -> 114 
  | MATCH  -> 115 
  | MUTABLE  -> 116 
  | NEW  -> 117 
  | OF  -> 118 
  | EXCEPTION  -> 119 
  | FALSE  -> 120 
  | FOR  -> 121 
  | FUN  -> 122 
  | FUNCTION  -> 123 
  | IF  -> 124 
  | IN  -> 125 
  | JOIN_IN  -> 126 
  | FINALLY  -> 127 
  | DO_BANG  -> 128 
  | AND  -> 129 
  | AS  -> 130 
  | ASSERT  -> 131 
  | OASSERT  -> 132 
  | ASR  -> 133 
  | BEGIN  -> 134 
  | DO  -> 135 
  | DONE  -> 136 
  | DOWNTO  -> 137 
  | ELSE  -> 138 
  | ELIF  -> 139 
  | END  -> 140 
  | DOT_DOT  -> 141 
  | BAR_BAR  -> 142 
  | UPCAST  -> 143 
  | DOWNCAST  -> 144 
  | NULL  -> 145 
  | RESERVED  -> 146 
  | MODULE  -> 147 
  | NAMESPACE  -> 148 
  | DELEGATE  -> 149 
  | CONSTRAINT  -> 150 
  | BASE  -> 151 
  | LQUOTE _ -> 152 
  | RQUOTE _ -> 153 
  | RQUOTE_DOT _ -> 154 
  | PERCENT_OP _ -> 155 
  | BINDER _ -> 156 
  | LESS _ -> 157 
  | GREATER _ -> 158 
  | LET _ -> 159 
  | YIELD _ -> 160 
  | YIELD_BANG _ -> 161 
  | BIGNUM _ -> 162 
  | DECIMAL _ -> 163 
  | CHAR _ -> 164 
  | IEEE64 _ -> 165 
  | IEEE32 _ -> 166 
  | NATIVEINT _ -> 167 
  | UNATIVEINT _ -> 168 
  | UINT64 _ -> 169 
  | UINT32 _ -> 170 
  | UINT16 _ -> 171 
  | UINT8 _ -> 172 
  | INT64 _ -> 173 
  | INT32 _ -> 174 
  | INT32_DOT_DOT _ -> 175 
  | INT16 _ -> 176 
  | INT8 _ -> 177 
  | FUNKY_OPERATOR_NAME _ -> 178 
  | ADJACENT_PREFIX_OP _ -> 179 
  | PLUS_MINUS_OP _ -> 180 
  | INFIX_AMP_OP _ -> 181 
  | INFIX_STAR_DIV_MOD_OP _ -> 182 
  | PREFIX_OP _ -> 183 
  | INFIX_BAR_OP _ -> 184 
  | INFIX_AT_HAT_OP _ -> 185 
  | INFIX_COMPARE_OP _ -> 186 
  | INFIX_STAR_STAR_OP _ -> 187 
  | IDENT _ -> 188 
  | KEYWORD_STRING _ -> 189 
  | STRING _ -> 190 
  | BYTEARRAY _ -> 191 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_OINTERFACE_MEMBER 
  | 14 -> TOKEN_OBLOCKEND 
  | 15 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 16 -> TOKEN_OBLOCKEND_IS_HERE 
  | 17 -> TOKEN_ORIGHT_BLOCK_END 
  | 18 -> TOKEN_ODECLEND 
  | 19 -> TOKEN_OEND 
  | 20 -> TOKEN_OBLOCKSEP 
  | 21 -> TOKEN_OBLOCKBEGIN 
  | 22 -> TOKEN_ORESET 
  | 23 -> TOKEN_OFUN 
  | 24 -> TOKEN_OFUNCTION 
  | 25 -> TOKEN_OWITH 
  | 26 -> TOKEN_OELSE 
  | 27 -> TOKEN_OTHEN 
  | 28 -> TOKEN_ODO_BANG 
  | 29 -> TOKEN_ODO 
  | 30 -> TOKEN_OBINDER 
  | 31 -> TOKEN_OLET 
  | 32 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 33 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 34 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 35 -> TOKEN_TYPE_COMING_SOON 
  | 36 -> TOKEN_TYPE_IS_HERE 
  | 37 -> TOKEN_MODULE_COMING_SOON 
  | 38 -> TOKEN_MODULE_IS_HERE 
  | 39 -> TOKEN_EXTERN 
  | 40 -> TOKEN_VOID 
  | 41 -> TOKEN_PUBLIC 
  | 42 -> TOKEN_PRIVATE 
  | 43 -> TOKEN_INTERNAL 
  | 44 -> TOKEN_GLOBAL 
  | 45 -> TOKEN_STATIC 
  | 46 -> TOKEN_MEMBER 
  | 47 -> TOKEN_CLASS 
  | 48 -> TOKEN_ABSTRACT 
  | 49 -> TOKEN_OVERRIDE 
  | 50 -> TOKEN_DEFAULT 
  | 51 -> TOKEN_CONSTRUCTOR 
  | 52 -> TOKEN_INHERIT 
  | 53 -> TOKEN_GREATER_RBRACK 
  | 54 -> TOKEN_STRUCT 
  | 55 -> TOKEN_SIG 
  | 56 -> TOKEN_BAR 
  | 57 -> TOKEN_RBRACK 
  | 58 -> TOKEN_RBRACE 
  | 59 -> TOKEN_RBRACE_COMING_SOON 
  | 60 -> TOKEN_RBRACE_IS_HERE 
  | 61 -> TOKEN_MINUS 
  | 62 -> TOKEN_DOLLAR 
  | 63 -> TOKEN_LBRACE_LESS 
  | 64 -> TOKEN_BAR_RBRACK 
  | 65 -> TOKEN_GREATER_RBRACE 
  | 66 -> TOKEN_UNDERSCORE 
  | 67 -> TOKEN_SEMICOLON_SEMICOLON 
  | 68 -> TOKEN_LARROW 
  | 69 -> TOKEN_EQUALS 
  | 70 -> TOKEN_LBRACK 
  | 71 -> TOKEN_LBRACK_BAR 
  | 72 -> TOKEN_LBRACK_LESS 
  | 73 -> TOKEN_LBRACE 
  | 74 -> TOKEN_QMARK 
  | 75 -> TOKEN_QMARK_QMARK 
  | 76 -> TOKEN_DOT 
  | 77 -> TOKEN_COLON 
  | 78 -> TOKEN_COLON_COLON 
  | 79 -> TOKEN_COLON_GREATER 
  | 80 -> TOKEN_COLON_QMARK_GREATER 
  | 81 -> TOKEN_COLON_QMARK 
  | 82 -> TOKEN_COLON_EQUALS 
  | 83 -> TOKEN_SEMICOLON 
  | 84 -> TOKEN_WHEN 
  | 85 -> TOKEN_WHILE 
  | 86 -> TOKEN_WITH 
  | 87 -> TOKEN_HASH 
  | 88 -> TOKEN_AMP 
  | 89 -> TOKEN_AMP_AMP 
  | 90 -> TOKEN_QUOTE 
  | 91 -> TOKEN_LPAREN 
  | 92 -> TOKEN_RPAREN 
  | 93 -> TOKEN_RPAREN_COMING_SOON 
  | 94 -> TOKEN_RPAREN_IS_HERE 
  | 95 -> TOKEN_STAR 
  | 96 -> TOKEN_COMMA 
  | 97 -> TOKEN_RARROW 
  | 98 -> TOKEN_GREATER_BAR_RBRACK 
  | 99 -> TOKEN_LPAREN_STAR_RPAREN 
  | 100 -> TOKEN_OPEN 
  | 101 -> TOKEN_OR 
  | 102 -> TOKEN_REC 
  | 103 -> TOKEN_THEN 
  | 104 -> TOKEN_TO 
  | 105 -> TOKEN_TRUE 
  | 106 -> TOKEN_TRY 
  | 107 -> TOKEN_TYPE 
  | 108 -> TOKEN_VAL 
  | 109 -> TOKEN_INLINE 
  | 110 -> TOKEN_INTERFACE 
  | 111 -> TOKEN_INSTANCE 
  | 112 -> TOKEN_CONST 
  | 113 -> TOKEN_LAZY 
  | 114 -> TOKEN_OLAZY 
  | 115 -> TOKEN_MATCH 
  | 116 -> TOKEN_MUTABLE 
  | 117 -> TOKEN_NEW 
  | 118 -> TOKEN_OF 
  | 119 -> TOKEN_EXCEPTION 
  | 120 -> TOKEN_FALSE 
  | 121 -> TOKEN_FOR 
  | 122 -> TOKEN_FUN 
  | 123 -> TOKEN_FUNCTION 
  | 124 -> TOKEN_IF 
  | 125 -> TOKEN_IN 
  | 126 -> TOKEN_JOIN_IN 
  | 127 -> TOKEN_FINALLY 
  | 128 -> TOKEN_DO_BANG 
  | 129 -> TOKEN_AND 
  | 130 -> TOKEN_AS 
  | 131 -> TOKEN_ASSERT 
  | 132 -> TOKEN_OASSERT 
  | 133 -> TOKEN_ASR 
  | 134 -> TOKEN_BEGIN 
  | 135 -> TOKEN_DO 
  | 136 -> TOKEN_DONE 
  | 137 -> TOKEN_DOWNTO 
  | 138 -> TOKEN_ELSE 
  | 139 -> TOKEN_ELIF 
  | 140 -> TOKEN_END 
  | 141 -> TOKEN_DOT_DOT 
  | 142 -> TOKEN_BAR_BAR 
  | 143 -> TOKEN_UPCAST 
  | 144 -> TOKEN_DOWNCAST 
  | 145 -> TOKEN_NULL 
  | 146 -> TOKEN_RESERVED 
  | 147 -> TOKEN_MODULE 
  | 148 -> TOKEN_NAMESPACE 
  | 149 -> TOKEN_DELEGATE 
  | 150 -> TOKEN_CONSTRAINT 
  | 151 -> TOKEN_BASE 
  | 152 -> TOKEN_LQUOTE 
  | 153 -> TOKEN_RQUOTE 
  | 154 -> TOKEN_RQUOTE_DOT 
  | 155 -> TOKEN_PERCENT_OP 
  | 156 -> TOKEN_BINDER 
  | 157 -> TOKEN_LESS 
  | 158 -> TOKEN_GREATER 
  | 159 -> TOKEN_LET 
  | 160 -> TOKEN_YIELD 
  | 161 -> TOKEN_YIELD_BANG 
  | 162 -> TOKEN_BIGNUM 
  | 163 -> TOKEN_DECIMAL 
  | 164 -> TOKEN_CHAR 
  | 165 -> TOKEN_IEEE64 
  | 166 -> TOKEN_IEEE32 
  | 167 -> TOKEN_NATIVEINT 
  | 168 -> TOKEN_UNATIVEINT 
  | 169 -> TOKEN_UINT64 
  | 170 -> TOKEN_UINT32 
  | 171 -> TOKEN_UINT16 
  | 172 -> TOKEN_UINT8 
  | 173 -> TOKEN_INT64 
  | 174 -> TOKEN_INT32 
  | 175 -> TOKEN_INT32_DOT_DOT 
  | 176 -> TOKEN_INT16 
  | 177 -> TOKEN_INT8 
  | 178 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 179 -> TOKEN_ADJACENT_PREFIX_OP 
  | 180 -> TOKEN_PLUS_MINUS_OP 
  | 181 -> TOKEN_INFIX_AMP_OP 
  | 182 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 183 -> TOKEN_PREFIX_OP 
  | 184 -> TOKEN_INFIX_BAR_OP 
  | 185 -> TOKEN_INFIX_AT_HAT_OP 
  | 186 -> TOKEN_INFIX_COMPARE_OP 
  | 187 -> TOKEN_INFIX_STAR_STAR_OP 
  | 188 -> TOKEN_IDENT 
  | 189 -> TOKEN_KEYWORD_STRING 
  | 190 -> TOKEN_STRING 
  | 191 -> TOKEN_BYTEARRAY 
  | 194 -> TOKEN_end_of_input
  | 192 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM_interaction 
    | 4 -> NONTERM_interaction 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_interactiveTerminator 
    | 7 -> NONTERM_interactiveTerminator 
    | 8 -> NONTERM_interactiveItemsTerminator 
    | 9 -> NONTERM_interactiveItemsTerminator 
    | 10 -> NONTERM_interactiveItemsTerminator 
    | 11 -> NONTERM_interactiveItemsTerminator 
    | 12 -> NONTERM_interactiveItemsTerminator 
    | 13 -> NONTERM_interactiveItemsTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveDefns 
    | 16 -> NONTERM_interactiveDefns 
    | 17 -> NONTERM_interactiveExpr 
    | 18 -> NONTERM_interactiveHash 
    | 19 -> NONTERM_interactiveSeparators 
    | 20 -> NONTERM_interactiveSeparators 
    | 21 -> NONTERM_interactiveSeparator 
    | 22 -> NONTERM_interactiveSeparator 
    | 23 -> NONTERM_hashDirective 
    | 24 -> NONTERM_hashDirectiveArgs 
    | 25 -> NONTERM_hashDirectiveArgs 
    | 26 -> NONTERM_hashDirectiveArg 
    | 27 -> NONTERM_signatureFile 
    | 28 -> NONTERM_signatureFile 
    | 29 -> NONTERM_signatureFile 
    | 30 -> NONTERM_moduleIntro 
    | 31 -> NONTERM_namespaceIntro 
    | 32 -> NONTERM_fileNamespaceSpecs 
    | 33 -> NONTERM_fileNamespaceSpecs 
    | 34 -> NONTERM_fileNamespaceSpecList 
    | 35 -> NONTERM_fileNamespaceSpecList 
    | 36 -> NONTERM_fileNamespaceSpec 
    | 37 -> NONTERM_fileModuleSpec 
    | 38 -> NONTERM_fileModuleSpec 
    | 39 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 40 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 41 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 42 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 43 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 44 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 45 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 46 -> NONTERM_moduleSpfns 
    | 47 -> NONTERM_moduleSpfns 
    | 48 -> NONTERM_moduleSpfns 
    | 49 -> NONTERM_moduleSpfn 
    | 50 -> NONTERM_moduleSpfn 
    | 51 -> NONTERM_moduleSpfn 
    | 52 -> NONTERM_moduleSpfn 
    | 53 -> NONTERM_moduleSpfn 
    | 54 -> NONTERM_moduleSpfn 
    | 55 -> NONTERM_moduleSpfn 
    | 56 -> NONTERM_valSpfn 
    | 57 -> NONTERM_optLiteralValueSpfn 
    | 58 -> NONTERM_optLiteralValueSpfn 
    | 59 -> NONTERM_optLiteralValueSpfn 
    | 60 -> NONTERM_moduleSpecBlock 
    | 61 -> NONTERM_moduleSpecBlock 
    | 62 -> NONTERM_moduleSpecBlock 
    | 63 -> NONTERM_tyconSpfns 
    | 64 -> NONTERM_tyconSpfnList 
    | 65 -> NONTERM_tyconSpfnList 
    | 66 -> NONTERM_tyconSpfn 
    | 67 -> NONTERM_tyconSpfn 
    | 68 -> NONTERM_tyconSpfnRhsBlock 
    | 69 -> NONTERM_tyconSpfnRhsBlock 
    | 70 -> NONTERM_tyconSpfnRhs 
    | 71 -> NONTERM_tyconSpfnRhs 
    | 72 -> NONTERM_tyconSpfnRhs 
    | 73 -> NONTERM_tyconClassSpfn 
    | 74 -> NONTERM_tyconClassSpfn 
    | 75 -> NONTERM_tyconClassSpfn 
    | 76 -> NONTERM_tyconClassSpfn 
    | 77 -> NONTERM_classSpfnBlockKindUnspecified 
    | 78 -> NONTERM_classSpfnBlockKindUnspecified 
    | 79 -> NONTERM_classSpfnBlockKindUnspecified 
    | 80 -> NONTERM_classSpfnBlockKindUnspecified 
    | 81 -> NONTERM_classSpfnBlock 
    | 82 -> NONTERM_classSpfnBlock 
    | 83 -> NONTERM_classSpfnBlock 
    | 84 -> NONTERM_classSpfnMembers 
    | 85 -> NONTERM_classSpfnMembers 
    | 86 -> NONTERM_classSpfnMembersAtLeastOne 
    | 87 -> NONTERM_classMemberSpfn 
    | 88 -> NONTERM_classMemberSpfn 
    | 89 -> NONTERM_classMemberSpfn 
    | 90 -> NONTERM_classMemberSpfn 
    | 91 -> NONTERM_classMemberSpfn 
    | 92 -> NONTERM_classMemberSpfn 
    | 93 -> NONTERM_classMemberSpfn 
    | 94 -> NONTERM_classMemberSpfnGetSet 
    | 95 -> NONTERM_classMemberSpfnGetSet 
    | 96 -> NONTERM_classMemberSpfnGetSet 
    | 97 -> NONTERM_classMemberSpfnGetSet 
    | 98 -> NONTERM_classMemberSpfnGetSetElements 
    | 99 -> NONTERM_classMemberSpfnGetSetElements 
    | 100 -> NONTERM_memberSpecFlags 
    | 101 -> NONTERM_memberSpecFlags 
    | 102 -> NONTERM_memberSpecFlags 
    | 103 -> NONTERM_exconSpfn 
    | 104 -> NONTERM_opt_classSpfn 
    | 105 -> NONTERM_opt_classSpfn 
    | 106 -> NONTERM_implementationFile 
    | 107 -> NONTERM_implementationFile 
    | 108 -> NONTERM_implementationFile 
    | 109 -> NONTERM_fileNamespaceImpls 
    | 110 -> NONTERM_fileNamespaceImpls 
    | 111 -> NONTERM_fileNamespaceImplList 
    | 112 -> NONTERM_fileNamespaceImplList 
    | 113 -> NONTERM_fileNamespaceImpl 
    | 114 -> NONTERM_fileModuleImpl 
    | 115 -> NONTERM_fileModuleImpl 
    | 116 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 117 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 118 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 119 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 120 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 121 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 122 -> NONTERM_moduleDefnsOrExpr 
    | 123 -> NONTERM_moduleDefnsOrExpr 
    | 124 -> NONTERM_moduleDefnsOrExpr 
    | 125 -> NONTERM_moduleDefnsOrExpr 
    | 126 -> NONTERM_moduleDefnsOrExpr 
    | 127 -> NONTERM_moduleDefns 
    | 128 -> NONTERM_moduleDefns 
    | 129 -> NONTERM_moduleDefns 
    | 130 -> NONTERM_moduleDefns 
    | 131 -> NONTERM_moduleDefns 
    | 132 -> NONTERM_moduleDefnOrDirective 
    | 133 -> NONTERM_moduleDefnOrDirective 
    | 134 -> NONTERM_moduleDefn 
    | 135 -> NONTERM_moduleDefn 
    | 136 -> NONTERM_moduleDefn 
    | 137 -> NONTERM_moduleDefn 
    | 138 -> NONTERM_moduleDefn 
    | 139 -> NONTERM_moduleDefn 
    | 140 -> NONTERM_moduleDefn 
    | 141 -> NONTERM_moduleDefn 
    | 142 -> NONTERM_namedModuleAbbrevBlock 
    | 143 -> NONTERM_namedModuleAbbrevBlock 
    | 144 -> NONTERM_namedModuleDefnBlock 
    | 145 -> NONTERM_namedModuleDefnBlock 
    | 146 -> NONTERM_namedModuleDefnBlock 
    | 147 -> NONTERM_namedModuleDefnBlock 
    | 148 -> NONTERM_namedModuleDefnBlock 
    | 149 -> NONTERM_namedModuleDefnBlock 
    | 150 -> NONTERM_namedModuleDefnBlock 
    | 151 -> NONTERM_wrappedNamedModuleDefn 
    | 152 -> NONTERM_wrappedNamedModuleDefn 
    | 153 -> NONTERM_wrappedNamedModuleDefn 
    | 154 -> NONTERM_tyconDefnAugmentation 
    | 155 -> NONTERM_opt_attributes 
    | 156 -> NONTERM_opt_attributes 
    | 157 -> NONTERM_attributes 
    | 158 -> NONTERM_attributes 
    | 159 -> NONTERM_attributeList 
    | 160 -> NONTERM_attributeList 
    | 161 -> NONTERM_attributeList 
    | 162 -> NONTERM_attributeList 
    | 163 -> NONTERM_attributeListElements 
    | 164 -> NONTERM_attributeListElements 
    | 165 -> NONTERM_attribute 
    | 166 -> NONTERM_attribute 
    | 167 -> NONTERM_attribute 
    | 168 -> NONTERM_attributeTarget 
    | 169 -> NONTERM_attributeTarget 
    | 170 -> NONTERM_attributeTarget 
    | 171 -> NONTERM_attributeTarget 
    | 172 -> NONTERM_memberFlags 
    | 173 -> NONTERM_memberFlags 
    | 174 -> NONTERM_memberFlags 
    | 175 -> NONTERM_memberFlags 
    | 176 -> NONTERM_typeNameInfo 
    | 177 -> NONTERM_tyconDefnList 
    | 178 -> NONTERM_tyconDefnList 
    | 179 -> NONTERM_tyconDefn 
    | 180 -> NONTERM_tyconDefn 
    | 181 -> NONTERM_tyconDefn 
    | 182 -> NONTERM_tyconDefn 
    | 183 -> NONTERM_tyconDefnRhsBlock 
    | 184 -> NONTERM_tyconDefnRhsBlock 
    | 185 -> NONTERM_tyconDefnRhsBlock 
    | 186 -> NONTERM_tyconDefnRhs 
    | 187 -> NONTERM_tyconDefnRhs 
    | 188 -> NONTERM_tyconDefnRhs 
    | 189 -> NONTERM_tyconClassDefn 
    | 190 -> NONTERM_tyconClassDefn 
    | 191 -> NONTERM_tyconClassDefn 
    | 192 -> NONTERM_tyconClassDefn 
    | 193 -> NONTERM_classDefnBlockKindUnspecified 
    | 194 -> NONTERM_classDefnBlockKindUnspecified 
    | 195 -> NONTERM_classDefnBlock 
    | 196 -> NONTERM_classDefnBlock 
    | 197 -> NONTERM_classDefnBlock 
    | 198 -> NONTERM_classDefnMembers 
    | 199 -> NONTERM_classDefnMembers 
    | 200 -> NONTERM_classDefnMembers 
    | 201 -> NONTERM_classDefnMembersAtLeastOne 
    | 202 -> NONTERM_classDefnMemberGetSet 
    | 203 -> NONTERM_classDefnMemberGetSet 
    | 204 -> NONTERM_classDefnMemberGetSet 
    | 205 -> NONTERM_classDefnMemberGetSetElements 
    | 206 -> NONTERM_classDefnMemberGetSetElements 
    | 207 -> NONTERM_classDefnMemberGetSetElement 
    | 208 -> NONTERM_memberCore 
    | 209 -> NONTERM_memberCore 
    | 210 -> NONTERM_abstractMemberFlags 
    | 211 -> NONTERM_abstractMemberFlags 
    | 212 -> NONTERM_classDefnMember 
    | 213 -> NONTERM_classDefnMember 
    | 214 -> NONTERM_classDefnMember 
    | 215 -> NONTERM_classDefnMember 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_classDefnMember 
    | 220 -> NONTERM_classDefnMember 
    | 221 -> NONTERM_classDefnMember 
    | 222 -> NONTERM_classDefnMember 
    | 223 -> NONTERM_valDefnDecl 
    | 224 -> NONTERM_autoPropsDefnDecl 
    | 225 -> NONTERM_opt_typ 
    | 226 -> NONTERM_opt_typ 
    | 227 -> NONTERM_atomicPatternLongIdent 
    | 228 -> NONTERM_atomicPatternLongIdent 
    | 229 -> NONTERM_atomicPatternLongIdent 
    | 230 -> NONTERM_opt_access 
    | 231 -> NONTERM_opt_access 
    | 232 -> NONTERM_access 
    | 233 -> NONTERM_access 
    | 234 -> NONTERM_access 
    | 235 -> NONTERM_opt_declVisibility 
    | 236 -> NONTERM_opt_declVisibility 
    | 237 -> NONTERM_opt_interfaceImplDefn 
    | 238 -> NONTERM_opt_interfaceImplDefn 
    | 239 -> NONTERM_opt_classDefn 
    | 240 -> NONTERM_opt_classDefn 
    | 241 -> NONTERM_inheritsDefn 
    | 242 -> NONTERM_inheritsDefn 
    | 243 -> NONTERM_inheritsDefn 
    | 244 -> NONTERM_optAsSpec 
    | 245 -> NONTERM_optAsSpec 
    | 246 -> NONTERM_asSpec 
    | 247 -> NONTERM_optBaseSpec 
    | 248 -> NONTERM_optBaseSpec 
    | 249 -> NONTERM_baseSpec 
    | 250 -> NONTERM_baseSpec 
    | 251 -> NONTERM_objectImplementationBlock 
    | 252 -> NONTERM_objectImplementationBlock 
    | 253 -> NONTERM_objectImplementationBlock 
    | 254 -> NONTERM_objectImplementationMembers 
    | 255 -> NONTERM_objectImplementationMembers 
    | 256 -> NONTERM_objectImplementationMember 
    | 257 -> NONTERM_objectImplementationMember 
    | 258 -> NONTERM_objectImplementationMember 
    | 259 -> NONTERM_objectImplementationMember 
    | 260 -> NONTERM_memberOrOverride 
    | 261 -> NONTERM_memberOrOverride 
    | 262 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 263 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 264 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 265 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 266 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 267 -> NONTERM_braceFieldDeclList 
    | 268 -> NONTERM_braceFieldDeclList 
    | 269 -> NONTERM_braceFieldDeclList 
    | 270 -> NONTERM_inlineAssemblyTyconRepr 
    | 271 -> NONTERM_classOrInterfaceOrStruct 
    | 272 -> NONTERM_classOrInterfaceOrStruct 
    | 273 -> NONTERM_classOrInterfaceOrStruct 
    | 274 -> NONTERM_interfaceMember 
    | 275 -> NONTERM_interfaceMember 
    | 276 -> NONTERM_tyconNameAndTyparDecls 
    | 277 -> NONTERM_tyconNameAndTyparDecls 
    | 278 -> NONTERM_tyconNameAndTyparDecls 
    | 279 -> NONTERM_prefixTyparDecls 
    | 280 -> NONTERM_prefixTyparDecls 
    | 281 -> NONTERM_typarDeclList 
    | 282 -> NONTERM_typarDeclList 
    | 283 -> NONTERM_typarDecl 
    | 284 -> NONTERM_postfixTyparDecls 
    | 285 -> NONTERM_explicitValTyparDeclsCore 
    | 286 -> NONTERM_explicitValTyparDeclsCore 
    | 287 -> NONTERM_explicitValTyparDeclsCore 
    | 288 -> NONTERM_explicitValTyparDecls 
    | 289 -> NONTERM_opt_explicitValTyparDecls 
    | 290 -> NONTERM_opt_explicitValTyparDecls 
    | 291 -> NONTERM_opt_explicitValTyparDecls2 
    | 292 -> NONTERM_opt_explicitValTyparDecls2 
    | 293 -> NONTERM_opt_typeConstraints 
    | 294 -> NONTERM_opt_typeConstraints 
    | 295 -> NONTERM_typeConstraints 
    | 296 -> NONTERM_typeConstraints 
    | 297 -> NONTERM_typeConstraint 
    | 298 -> NONTERM_typeConstraint 
    | 299 -> NONTERM_typeConstraint 
    | 300 -> NONTERM_typeConstraint 
    | 301 -> NONTERM_typeConstraint 
    | 302 -> NONTERM_typeConstraint 
    | 303 -> NONTERM_typeConstraint 
    | 304 -> NONTERM_typeConstraint 
    | 305 -> NONTERM_typeConstraint 
    | 306 -> NONTERM_typeConstraint 
    | 307 -> NONTERM_typarAlts 
    | 308 -> NONTERM_typarAlts 
    | 309 -> NONTERM_unionTypeRepr 
    | 310 -> NONTERM_unionTypeRepr 
    | 311 -> NONTERM_unionTypeRepr 
    | 312 -> NONTERM_barAndgrabXmlDoc 
    | 313 -> NONTERM_attrUnionCaseDecls 
    | 314 -> NONTERM_attrUnionCaseDecls 
    | 315 -> NONTERM_attrUnionCaseDecl 
    | 316 -> NONTERM_attrUnionCaseDecl 
    | 317 -> NONTERM_attrUnionCaseDecl 
    | 318 -> NONTERM_attrUnionCaseDecl 
    | 319 -> NONTERM_unionCaseName 
    | 320 -> NONTERM_unionCaseName 
    | 321 -> NONTERM_unionCaseName 
    | 322 -> NONTERM_firstUnionCaseDeclOfMany 
    | 323 -> NONTERM_firstUnionCaseDeclOfMany 
    | 324 -> NONTERM_firstUnionCaseDeclOfMany 
    | 325 -> NONTERM_firstUnionCaseDecl 
    | 326 -> NONTERM_firstUnionCaseDecl 
    | 327 -> NONTERM_unionCaseReprElements 
    | 328 -> NONTERM_unionCaseReprElements 
    | 329 -> NONTERM_unionCaseReprElement 
    | 330 -> NONTERM_unionCaseReprElement 
    | 331 -> NONTERM_unionCaseRepr 
    | 332 -> NONTERM_unionCaseRepr 
    | 333 -> NONTERM_recdFieldDeclList 
    | 334 -> NONTERM_recdFieldDeclList 
    | 335 -> NONTERM_recdFieldDecl 
    | 336 -> NONTERM_fieldDecl 
    | 337 -> NONTERM_exconDefn 
    | 338 -> NONTERM_exceptionAndGrabDoc 
    | 339 -> NONTERM_exconCore 
    | 340 -> NONTERM_exconIntro 
    | 341 -> NONTERM_exconIntro 
    | 342 -> NONTERM_exconRepr 
    | 343 -> NONTERM_exconRepr 
    | 344 -> NONTERM_openDecl 
    | 345 -> NONTERM_defnBindings 
    | 346 -> NONTERM_defnBindings 
    | 347 -> NONTERM_doBinding 
    | 348 -> NONTERM_hardwhiteLetBindings 
    | 349 -> NONTERM_hardwhiteDoBinding 
    | 350 -> NONTERM_classDefnBindings 
    | 351 -> NONTERM_classDefnBindings 
    | 352 -> NONTERM_classDefnBindings 
    | 353 -> NONTERM_classDefnBindings 
    | 354 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 355 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 356 -> NONTERM_cPrototype 
    | 357 -> NONTERM_cArgs 
    | 358 -> NONTERM_cArgs 
    | 359 -> NONTERM_cArgs 
    | 360 -> NONTERM_cMoreArgs 
    | 361 -> NONTERM_cMoreArgs 
    | 362 -> NONTERM_cArg 
    | 363 -> NONTERM_cArg 
    | 364 -> NONTERM_cType 
    | 365 -> NONTERM_cType 
    | 366 -> NONTERM_cType 
    | 367 -> NONTERM_cType 
    | 368 -> NONTERM_cType 
    | 369 -> NONTERM_cRetType 
    | 370 -> NONTERM_cRetType 
    | 371 -> NONTERM_localBindings 
    | 372 -> NONTERM_moreLocalBindings 
    | 373 -> NONTERM_moreLocalBindings 
    | 374 -> NONTERM_attr_localBinding 
    | 375 -> NONTERM_attr_localBinding 
    | 376 -> NONTERM_localBinding 
    | 377 -> NONTERM_localBinding 
    | 378 -> NONTERM_localBinding 
    | 379 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 380 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 381 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 382 -> NONTERM_typedExprWithStaticOptimizations 
    | 383 -> NONTERM_opt_staticOptimizations 
    | 384 -> NONTERM_opt_staticOptimizations 
    | 385 -> NONTERM_staticOptimization 
    | 386 -> NONTERM_staticOptimizationConditions 
    | 387 -> NONTERM_staticOptimizationConditions 
    | 388 -> NONTERM_staticOptimizationCondition 
    | 389 -> NONTERM_staticOptimizationCondition 
    | 390 -> NONTERM_rawConstant 
    | 391 -> NONTERM_rawConstant 
    | 392 -> NONTERM_rawConstant 
    | 393 -> NONTERM_rawConstant 
    | 394 -> NONTERM_rawConstant 
    | 395 -> NONTERM_rawConstant 
    | 396 -> NONTERM_rawConstant 
    | 397 -> NONTERM_rawConstant 
    | 398 -> NONTERM_rawConstant 
    | 399 -> NONTERM_rawConstant 
    | 400 -> NONTERM_rawConstant 
    | 401 -> NONTERM_rawConstant 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_rawConstant 
    | 404 -> NONTERM_rawConstant 
    | 405 -> NONTERM_rawConstant 
    | 406 -> NONTERM_rawConstant 
    | 407 -> NONTERM_constant 
    | 408 -> NONTERM_constant 
    | 409 -> NONTERM_bindingPattern 
    | 410 -> NONTERM_simplePattern 
    | 411 -> NONTERM_simplePattern 
    | 412 -> NONTERM_simplePattern 
    | 413 -> NONTERM_simplePattern 
    | 414 -> NONTERM_simplePatternCommaList 
    | 415 -> NONTERM_simplePatternCommaList 
    | 416 -> NONTERM_simplePatterns 
    | 417 -> NONTERM_simplePatterns 
    | 418 -> NONTERM_simplePatterns 
    | 419 -> NONTERM_simplePatterns 
    | 420 -> NONTERM_simplePatterns 
    | 421 -> NONTERM_headBindingPattern 
    | 422 -> NONTERM_headBindingPattern 
    | 423 -> NONTERM_headBindingPattern 
    | 424 -> NONTERM_headBindingPattern 
    | 425 -> NONTERM_headBindingPattern 
    | 426 -> NONTERM_headBindingPattern 
    | 427 -> NONTERM_tuplePatternElements 
    | 428 -> NONTERM_tuplePatternElements 
    | 429 -> NONTERM_conjPatternElements 
    | 430 -> NONTERM_conjPatternElements 
    | 431 -> NONTERM_namePatPairs 
    | 432 -> NONTERM_namePatPairs 
    | 433 -> NONTERM_namePatPair 
    | 434 -> NONTERM_constrPattern 
    | 435 -> NONTERM_constrPattern 
    | 436 -> NONTERM_constrPattern 
    | 437 -> NONTERM_constrPattern 
    | 438 -> NONTERM_constrPattern 
    | 439 -> NONTERM_constrPattern 
    | 440 -> NONTERM_atomicPatsOrNamePatPairs 
    | 441 -> NONTERM_atomicPatsOrNamePatPairs 
    | 442 -> NONTERM_atomicPatterns 
    | 443 -> NONTERM_atomicPatterns 
    | 444 -> NONTERM_atomicPatterns 
    | 445 -> NONTERM_atomicPatterns 
    | 446 -> NONTERM_atomicPattern 
    | 447 -> NONTERM_atomicPattern 
    | 448 -> NONTERM_atomicPattern 
    | 449 -> NONTERM_atomicPattern 
    | 450 -> NONTERM_atomicPattern 
    | 451 -> NONTERM_atomicPattern 
    | 452 -> NONTERM_atomicPattern 
    | 453 -> NONTERM_atomicPattern 
    | 454 -> NONTERM_atomicPattern 
    | 455 -> NONTERM_atomicPattern 
    | 456 -> NONTERM_atomicPattern 
    | 457 -> NONTERM_atomicPattern 
    | 458 -> NONTERM_atomicPattern 
    | 459 -> NONTERM_atomicPattern 
    | 460 -> NONTERM_atomicPattern 
    | 461 -> NONTERM_atomicPattern 
    | 462 -> NONTERM_parenPatternBody 
    | 463 -> NONTERM_parenPatternBody 
    | 464 -> NONTERM_parenPattern 
    | 465 -> NONTERM_parenPattern 
    | 466 -> NONTERM_parenPattern 
    | 467 -> NONTERM_parenPattern 
    | 468 -> NONTERM_parenPattern 
    | 469 -> NONTERM_parenPattern 
    | 470 -> NONTERM_parenPattern 
    | 471 -> NONTERM_parenPattern 
    | 472 -> NONTERM_tupleParenPatternElements 
    | 473 -> NONTERM_tupleParenPatternElements 
    | 474 -> NONTERM_conjParenPatternElements 
    | 475 -> NONTERM_conjParenPatternElements 
    | 476 -> NONTERM_recordPatternElements 
    | 477 -> NONTERM_recordPatternElementsAux 
    | 478 -> NONTERM_recordPatternElementsAux 
    | 479 -> NONTERM_recordPatternElement 
    | 480 -> NONTERM_listPatternElements 
    | 481 -> NONTERM_listPatternElements 
    | 482 -> NONTERM_listPatternElements 
    | 483 -> NONTERM_typedSeqExprBlock 
    | 484 -> NONTERM_typedSeqExprBlock 
    | 485 -> NONTERM_typedSeqExprBlock 
    | 486 -> NONTERM_declExprBlock 
    | 487 -> NONTERM_declExprBlock 
    | 488 -> NONTERM_typedSeqExprBlockR 
    | 489 -> NONTERM_typedSeqExprBlockR 
    | 490 -> NONTERM_typedSeqExpr 
    | 491 -> NONTERM_typedSeqExpr 
    | 492 -> NONTERM_seqExpr 
    | 493 -> NONTERM_seqExpr 
    | 494 -> NONTERM_seqExpr 
    | 495 -> NONTERM_seqExpr 
    | 496 -> NONTERM_seqExpr 
    | 497 -> NONTERM_seqExpr 
    | 498 -> NONTERM_recover 
    | 499 -> NONTERM_recover 
    | 500 -> NONTERM_declExpr 
    | 501 -> NONTERM_declExpr 
    | 502 -> NONTERM_declExpr 
    | 503 -> NONTERM_declExpr 
    | 504 -> NONTERM_declExpr 
    | 505 -> NONTERM_declExpr 
    | 506 -> NONTERM_declExpr 
    | 507 -> NONTERM_declExpr 
    | 508 -> NONTERM_declExpr 
    | 509 -> NONTERM_declExpr 
    | 510 -> NONTERM_declExpr 
    | 511 -> NONTERM_declExpr 
    | 512 -> NONTERM_declExpr 
    | 513 -> NONTERM_declExpr 
    | 514 -> NONTERM_declExpr 
    | 515 -> NONTERM_declExpr 
    | 516 -> NONTERM_declExpr 
    | 517 -> NONTERM_declExpr 
    | 518 -> NONTERM_declExpr 
    | 519 -> NONTERM_declExpr 
    | 520 -> NONTERM_declExpr 
    | 521 -> NONTERM_declExpr 
    | 522 -> NONTERM_declExpr 
    | 523 -> NONTERM_declExpr 
    | 524 -> NONTERM_declExpr 
    | 525 -> NONTERM_declExpr 
    | 526 -> NONTERM_declExpr 
    | 527 -> NONTERM_declExpr 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_declExpr 
    | 591 -> NONTERM_declExpr 
    | 592 -> NONTERM_declExpr 
    | 593 -> NONTERM_declExpr 
    | 594 -> NONTERM_declExpr 
    | 595 -> NONTERM_declExpr 
    | 596 -> NONTERM_declExpr 
    | 597 -> NONTERM_declExpr 
    | 598 -> NONTERM_declExpr 
    | 599 -> NONTERM_dynamicArg 
    | 600 -> NONTERM_dynamicArg 
    | 601 -> NONTERM_withClauses 
    | 602 -> NONTERM_withClauses 
    | 603 -> NONTERM_withClauses 
    | 604 -> NONTERM_withPatternClauses 
    | 605 -> NONTERM_withPatternClauses 
    | 606 -> NONTERM_withPatternClauses 
    | 607 -> NONTERM_withPatternClauses 
    | 608 -> NONTERM_patternAndGuard 
    | 609 -> NONTERM_patternClauses 
    | 610 -> NONTERM_patternClauses 
    | 611 -> NONTERM_patternClauses 
    | 612 -> NONTERM_patternClauses 
    | 613 -> NONTERM_patternClauses 
    | 614 -> NONTERM_patternGuard 
    | 615 -> NONTERM_patternGuard 
    | 616 -> NONTERM_patternResult 
    | 617 -> NONTERM_ifExprCases 
    | 618 -> NONTERM_ifExprThen 
    | 619 -> NONTERM_ifExprThen 
    | 620 -> NONTERM_ifExprThen 
    | 621 -> NONTERM_ifExprElifs 
    | 622 -> NONTERM_ifExprElifs 
    | 623 -> NONTERM_ifExprElifs 
    | 624 -> NONTERM_ifExprElifs 
    | 625 -> NONTERM_ifExprElifs 
    | 626 -> NONTERM_ifExprElifs 
    | 627 -> NONTERM_tupleExpr 
    | 628 -> NONTERM_tupleExpr 
    | 629 -> NONTERM_tupleExpr 
    | 630 -> NONTERM_tupleExpr 
    | 631 -> NONTERM_minusExpr 
    | 632 -> NONTERM_minusExpr 
    | 633 -> NONTERM_minusExpr 
    | 634 -> NONTERM_minusExpr 
    | 635 -> NONTERM_minusExpr 
    | 636 -> NONTERM_minusExpr 
    | 637 -> NONTERM_minusExpr 
    | 638 -> NONTERM_minusExpr 
    | 639 -> NONTERM_minusExpr 
    | 640 -> NONTERM_minusExpr 
    | 641 -> NONTERM_minusExpr 
    | 642 -> NONTERM_minusExpr 
    | 643 -> NONTERM_appExpr 
    | 644 -> NONTERM_appExpr 
    | 645 -> NONTERM_argExpr 
    | 646 -> NONTERM_argExpr 
    | 647 -> NONTERM_atomicExpr 
    | 648 -> NONTERM_atomicExpr 
    | 649 -> NONTERM_atomicExpr 
    | 650 -> NONTERM_atomicExpr 
    | 651 -> NONTERM_atomicExpr 
    | 652 -> NONTERM_atomicExpr 
    | 653 -> NONTERM_atomicExpr 
    | 654 -> NONTERM_atomicExpr 
    | 655 -> NONTERM_atomicExpr 
    | 656 -> NONTERM_atomicExpr 
    | 657 -> NONTERM_atomicExpr 
    | 658 -> NONTERM_atomicExpr 
    | 659 -> NONTERM_atomicExpr 
    | 660 -> NONTERM_atomicExpr 
    | 661 -> NONTERM_atomicExpr 
    | 662 -> NONTERM_atomicExprQualification 
    | 663 -> NONTERM_atomicExprQualification 
    | 664 -> NONTERM_atomicExprQualification 
    | 665 -> NONTERM_atomicExprQualification 
    | 666 -> NONTERM_atomicExprQualification 
    | 667 -> NONTERM_atomicExprQualification 
    | 668 -> NONTERM_atomicExprQualification 
    | 669 -> NONTERM_atomicExprQualification 
    | 670 -> NONTERM_atomicExprQualification 
    | 671 -> NONTERM_atomicExprQualification 
    | 672 -> NONTERM_atomicExprQualification 
    | 673 -> NONTERM_optRangeSeqExpr 
    | 674 -> NONTERM_optRangeSeqExpr 
    | 675 -> NONTERM_optRange 
    | 676 -> NONTERM_optRange 
    | 677 -> NONTERM_optRange 
    | 678 -> NONTERM_optRange 
    | 679 -> NONTERM_optRange 
    | 680 -> NONTERM_atomicExprAfterType 
    | 681 -> NONTERM_atomicExprAfterType 
    | 682 -> NONTERM_atomicExprAfterType 
    | 683 -> NONTERM_atomicExprAfterType 
    | 684 -> NONTERM_atomicExprAfterType 
    | 685 -> NONTERM_atomicExprAfterType 
    | 686 -> NONTERM_atomicExprAfterType 
    | 687 -> NONTERM_atomicExprAfterType 
    | 688 -> NONTERM_atomicExprAfterType 
    | 689 -> NONTERM_beginEndExpr 
    | 690 -> NONTERM_beginEndExpr 
    | 691 -> NONTERM_beginEndExpr 
    | 692 -> NONTERM_beginEndExpr 
    | 693 -> NONTERM_quoteExpr 
    | 694 -> NONTERM_quoteExpr 
    | 695 -> NONTERM_quoteExpr 
    | 696 -> NONTERM_quoteExpr 
    | 697 -> NONTERM_arrayExpr 
    | 698 -> NONTERM_arrayExpr 
    | 699 -> NONTERM_arrayExpr 
    | 700 -> NONTERM_arrayExpr 
    | 701 -> NONTERM_parenExpr 
    | 702 -> NONTERM_parenExpr 
    | 703 -> NONTERM_parenExpr 
    | 704 -> NONTERM_parenExpr 
    | 705 -> NONTERM_parenExpr 
    | 706 -> NONTERM_parenExpr 
    | 707 -> NONTERM_parenExpr 
    | 708 -> NONTERM_parenExpr 
    | 709 -> NONTERM_parenExpr 
    | 710 -> NONTERM_parenExprBody 
    | 711 -> NONTERM_parenExprBody 
    | 712 -> NONTERM_parenExprBody 
    | 713 -> NONTERM_staticallyKnownHeadTypars 
    | 714 -> NONTERM_staticallyKnownHeadTypars 
    | 715 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 716 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 717 -> NONTERM_braceExpr 
    | 718 -> NONTERM_braceExpr 
    | 719 -> NONTERM_braceExpr 
    | 720 -> NONTERM_braceExpr 
    | 721 -> NONTERM_braceExpr 
    | 722 -> NONTERM_braceExprBody 
    | 723 -> NONTERM_braceExprBody 
    | 724 -> NONTERM_braceExprBody 
    | 725 -> NONTERM_listExprElements 
    | 726 -> NONTERM_listExprElements 
    | 727 -> NONTERM_monadicExprInitial 
    | 728 -> NONTERM_monadicExprInitial 
    | 729 -> NONTERM_rangeSequenceExpr 
    | 730 -> NONTERM_rangeSequenceExpr 
    | 731 -> NONTERM_rangeSequenceExpr 
    | 732 -> NONTERM_arrowThenExprR 
    | 733 -> NONTERM_forLoopBinder 
    | 734 -> NONTERM_forLoopBinder 
    | 735 -> NONTERM_forLoopBinder 
    | 736 -> NONTERM_forLoopBinder 
    | 737 -> NONTERM_forLoopRange 
    | 738 -> NONTERM_inlineAssemblyExpr 
    | 739 -> NONTERM_opt_curriedArgExprs 
    | 740 -> NONTERM_opt_curriedArgExprs 
    | 741 -> NONTERM_opt_atomicExprAfterType 
    | 742 -> NONTERM_opt_atomicExprAfterType 
    | 743 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 744 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 745 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 746 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 747 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 748 -> NONTERM_recdExpr 
    | 749 -> NONTERM_recdExpr 
    | 750 -> NONTERM_recdExpr 
    | 751 -> NONTERM_recdExpr 
    | 752 -> NONTERM_recdExpr 
    | 753 -> NONTERM_recdExpr 
    | 754 -> NONTERM_recdExpr 
    | 755 -> NONTERM_recdExpr 
    | 756 -> NONTERM_opt_seps_recd 
    | 757 -> NONTERM_opt_seps_recd 
    | 758 -> NONTERM_seps_recd 
    | 759 -> NONTERM_seps_recd 
    | 760 -> NONTERM_seps_recd 
    | 761 -> NONTERM_seps_recd 
    | 762 -> NONTERM_pathOrUnderscore 
    | 763 -> NONTERM_pathOrUnderscore 
    | 764 -> NONTERM_recdExprBindings 
    | 765 -> NONTERM_recdExprBindings 
    | 766 -> NONTERM_recdBinding 
    | 767 -> NONTERM_recdBinding 
    | 768 -> NONTERM_recdBinding 
    | 769 -> NONTERM_recdBinding 
    | 770 -> NONTERM_recdBinding 
    | 771 -> NONTERM_objExpr 
    | 772 -> NONTERM_objExpr 
    | 773 -> NONTERM_objExpr 
    | 774 -> NONTERM_objExprBaseCall 
    | 775 -> NONTERM_objExprBaseCall 
    | 776 -> NONTERM_objExprBaseCall 
    | 777 -> NONTERM_opt_objExprBindings 
    | 778 -> NONTERM_opt_objExprBindings 
    | 779 -> NONTERM_objExprBindings 
    | 780 -> NONTERM_objExprBindings 
    | 781 -> NONTERM_objExprBindings 
    | 782 -> NONTERM_objExprInterfaces 
    | 783 -> NONTERM_opt_objExprInterfaces 
    | 784 -> NONTERM_opt_objExprInterfaces 
    | 785 -> NONTERM_opt_objExprInterfaces 
    | 786 -> NONTERM_objExprInterface 
    | 787 -> NONTERM_forLoopDirection 
    | 788 -> NONTERM_forLoopDirection 
    | 789 -> NONTERM_anonLambdaExpr 
    | 790 -> NONTERM_anonLambdaExpr 
    | 791 -> NONTERM_anonLambdaExpr 
    | 792 -> NONTERM_anonLambdaExpr 
    | 793 -> NONTERM_anonLambdaExpr 
    | 794 -> NONTERM_anonLambdaExpr 
    | 795 -> NONTERM_anonLambdaExpr 
    | 796 -> NONTERM_anonLambdaExpr 
    | 797 -> NONTERM_anonMatchingExpr 
    | 798 -> NONTERM_anonMatchingExpr 
    | 799 -> NONTERM_typeWithTypeConstraints 
    | 800 -> NONTERM_typeWithTypeConstraints 
    | 801 -> NONTERM_topTypeWithTypeConstraints 
    | 802 -> NONTERM_topTypeWithTypeConstraints 
    | 803 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 804 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 805 -> NONTERM_topType 
    | 806 -> NONTERM_topType 
    | 807 -> NONTERM_topTupleType 
    | 808 -> NONTERM_topTupleType 
    | 809 -> NONTERM_topTupleTypeElements 
    | 810 -> NONTERM_topTupleTypeElements 
    | 811 -> NONTERM_topAppType 
    | 812 -> NONTERM_topAppType 
    | 813 -> NONTERM_topAppType 
    | 814 -> NONTERM_topAppType 
    | 815 -> NONTERM_topAppType 
    | 816 -> NONTERM_topAppType 
    | 817 -> NONTERM_typ 
    | 818 -> NONTERM_typ 
    | 819 -> NONTERM_tupleType 
    | 820 -> NONTERM_tupleType 
    | 821 -> NONTERM_tupleType 
    | 822 -> NONTERM_tupleType 
    | 823 -> NONTERM_tupleOrQuotTypeElements 
    | 824 -> NONTERM_tupleOrQuotTypeElements 
    | 825 -> NONTERM_tupleOrQuotTypeElements 
    | 826 -> NONTERM_tupleTypeElements 
    | 827 -> NONTERM_tupleTypeElements 
    | 828 -> NONTERM_appTypeCon 
    | 829 -> NONTERM_appTypeCon 
    | 830 -> NONTERM_appTypeConPower 
    | 831 -> NONTERM_appTypeConPower 
    | 832 -> NONTERM_appType 
    | 833 -> NONTERM_appType 
    | 834 -> NONTERM_appType 
    | 835 -> NONTERM_appType 
    | 836 -> NONTERM_appType 
    | 837 -> NONTERM_appType 
    | 838 -> NONTERM_appType 
    | 839 -> NONTERM_arrayTypeSuffix 
    | 840 -> NONTERM_arrayTypeSuffix 
    | 841 -> NONTERM_arrayTypeSuffix 
    | 842 -> NONTERM_arrayTypeSuffix 
    | 843 -> NONTERM_appTypePrefixArguments 
    | 844 -> NONTERM_typeArgListElements 
    | 845 -> NONTERM_typeArgListElements 
    | 846 -> NONTERM_typeArgListElements 
    | 847 -> NONTERM_powerType 
    | 848 -> NONTERM_powerType 
    | 849 -> NONTERM_powerType 
    | 850 -> NONTERM_appTypeNonAtomicDeprecated 
    | 851 -> NONTERM_appTypeNonAtomicDeprecated 
    | 852 -> NONTERM_appTypeNonAtomicDeprecated 
    | 853 -> NONTERM_appTypeNonAtomicDeprecated 
    | 854 -> NONTERM_appTypeNonAtomicDeprecated 
    | 855 -> NONTERM_appTypeNonAtomicDeprecated 
    | 856 -> NONTERM_appTypeNonAtomicDeprecated 
    | 857 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 858 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 859 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 860 -> NONTERM_atomType 
    | 861 -> NONTERM_atomType 
    | 862 -> NONTERM_atomType 
    | 863 -> NONTERM_atomType 
    | 864 -> NONTERM_atomType 
    | 865 -> NONTERM_atomType 
    | 866 -> NONTERM_atomType 
    | 867 -> NONTERM_atomType 
    | 868 -> NONTERM_atomType 
    | 869 -> NONTERM_atomType 
    | 870 -> NONTERM_atomType 
    | 871 -> NONTERM_atomType 
    | 872 -> NONTERM_atomType 
    | 873 -> NONTERM_atomType 
    | 874 -> NONTERM_atomType 
    | 875 -> NONTERM_typeArgsNoHpaDeprecated 
    | 876 -> NONTERM_typeArgsNoHpaDeprecated 
    | 877 -> NONTERM_typeArgsActual 
    | 878 -> NONTERM_typeArgsActual 
    | 879 -> NONTERM_typeArgsActual 
    | 880 -> NONTERM_typeArgsActual 
    | 881 -> NONTERM_typeArgsActual 
    | 882 -> NONTERM_typeArgsActual 
    | 883 -> NONTERM_typeArgsActual 
    | 884 -> NONTERM_typeArgActual 
    | 885 -> NONTERM_typeArgActual 
    | 886 -> NONTERM_typeArgActual 
    | 887 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 888 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 889 -> NONTERM_dummyTypeArg 
    | 890 -> NONTERM_measureTypeArg 
    | 891 -> NONTERM_measureTypeArg 
    | 892 -> NONTERM_measureTypeAtom 
    | 893 -> NONTERM_measureTypeAtom 
    | 894 -> NONTERM_measureTypeAtom 
    | 895 -> NONTERM_measureTypePower 
    | 896 -> NONTERM_measureTypePower 
    | 897 -> NONTERM_measureTypePower 
    | 898 -> NONTERM_measureTypePower 
    | 899 -> NONTERM_measureTypeSeq 
    | 900 -> NONTERM_measureTypeSeq 
    | 901 -> NONTERM_measureTypeExpr 
    | 902 -> NONTERM_measureTypeExpr 
    | 903 -> NONTERM_measureTypeExpr 
    | 904 -> NONTERM_measureTypeExpr 
    | 905 -> NONTERM_typar 
    | 906 -> NONTERM_typar 
    | 907 -> NONTERM_staticallyKnownHeadTypar 
    | 908 -> NONTERM_ident 
    | 909 -> NONTERM_path 
    | 910 -> NONTERM_path 
    | 911 -> NONTERM_path 
    | 912 -> NONTERM_path 
    | 913 -> NONTERM_opName 
    | 914 -> NONTERM_opName 
    | 915 -> NONTERM_opName 
    | 916 -> NONTERM_opName 
    | 917 -> NONTERM_opName 
    | 918 -> NONTERM_operatorName 
    | 919 -> NONTERM_operatorName 
    | 920 -> NONTERM_operatorName 
    | 921 -> NONTERM_operatorName 
    | 922 -> NONTERM_operatorName 
    | 923 -> NONTERM_operatorName 
    | 924 -> NONTERM_operatorName 
    | 925 -> NONTERM_operatorName 
    | 926 -> NONTERM_operatorName 
    | 927 -> NONTERM_operatorName 
    | 928 -> NONTERM_operatorName 
    | 929 -> NONTERM_operatorName 
    | 930 -> NONTERM_operatorName 
    | 931 -> NONTERM_operatorName 
    | 932 -> NONTERM_operatorName 
    | 933 -> NONTERM_operatorName 
    | 934 -> NONTERM_operatorName 
    | 935 -> NONTERM_operatorName 
    | 936 -> NONTERM_operatorName 
    | 937 -> NONTERM_operatorName 
    | 938 -> NONTERM_operatorName 
    | 939 -> NONTERM_operatorName 
    | 940 -> NONTERM_operatorName 
    | 941 -> NONTERM_operatorName 
    | 942 -> NONTERM_operatorName 
    | 943 -> NONTERM_operatorName 
    | 944 -> NONTERM_activePatternCaseName 
    | 945 -> NONTERM_activePatternCaseNames 
    | 946 -> NONTERM_activePatternCaseNames 
    | 947 -> NONTERM_identOrOp 
    | 948 -> NONTERM_identOrOp 
    | 949 -> NONTERM_pathOp 
    | 950 -> NONTERM_pathOp 
    | 951 -> NONTERM_pathOp 
    | 952 -> NONTERM_pathOp 
    | 953 -> NONTERM_nameop 
    | 954 -> NONTERM_topSeparator 
    | 955 -> NONTERM_topSeparator 
    | 956 -> NONTERM_topSeparator 
    | 957 -> NONTERM_topSeparators 
    | 958 -> NONTERM_topSeparators 
    | 959 -> NONTERM_opt_topSeparators 
    | 960 -> NONTERM_opt_topSeparators 
    | 961 -> NONTERM_seps 
    | 962 -> NONTERM_seps 
    | 963 -> NONTERM_seps 
    | 964 -> NONTERM_seps 
    | 965 -> NONTERM_declEnd 
    | 966 -> NONTERM_declEnd 
    | 967 -> NONTERM_declEnd 
    | 968 -> NONTERM_opt_declEnd 
    | 969 -> NONTERM_opt_declEnd 
    | 970 -> NONTERM_opt_declEnd 
    | 971 -> NONTERM_opt_declEnd 
    | 972 -> NONTERM_opt_ODECLEND 
    | 973 -> NONTERM_opt_ODECLEND 
    | 974 -> NONTERM_deprecated_opt_equals 
    | 975 -> NONTERM_deprecated_opt_equals 
    | 976 -> NONTERM_opt_OBLOCKSEP 
    | 977 -> NONTERM_opt_OBLOCKSEP 
    | 978 -> NONTERM_opt_seps 
    | 979 -> NONTERM_opt_seps 
    | 980 -> NONTERM_opt_rec 
    | 981 -> NONTERM_opt_rec 
    | 982 -> NONTERM_opt_bar 
    | 983 -> NONTERM_opt_bar 
    | 984 -> NONTERM_opt_inline 
    | 985 -> NONTERM_opt_inline 
    | 986 -> NONTERM_opt_mutable 
    | 987 -> NONTERM_opt_mutable 
    | 988 -> NONTERM_doToken 
    | 989 -> NONTERM_doToken 
    | 990 -> NONTERM_doneDeclEnd 
    | 991 -> NONTERM_doneDeclEnd 
    | 992 -> NONTERM_structOrBegin 
    | 993 -> NONTERM_structOrBegin 
    | 994 -> NONTERM_sigOrBegin 
    | 995 -> NONTERM_sigOrBegin 
    | 996 -> NONTERM_colonOrEquals 
    | 997 -> NONTERM_colonOrEquals 
    | 998 -> NONTERM_stringOrKeywordString 
    | 999 -> NONTERM_stringOrKeywordString 
    | 1000 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1001 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1002 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1003 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1004 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1005 -> NONTERM_typeKeyword 
    | 1006 -> NONTERM_typeKeyword 
    | 1007 -> NONTERM_typeKeyword 
    | 1008 -> NONTERM_moduleKeyword 
    | 1009 -> NONTERM_moduleKeyword 
    | 1010 -> NONTERM_moduleKeyword 
    | 1011 -> NONTERM_rbrace 
    | 1012 -> NONTERM_rbrace 
    | 1013 -> NONTERM_rbrace 
    | 1014 -> NONTERM_rparen 
    | 1015 -> NONTERM_rparen 
    | 1016 -> NONTERM_rparen 
    | 1017 -> NONTERM_oblockend 
    | 1018 -> NONTERM_oblockend 
    | 1019 -> NONTERM_oblockend 
    | 1020 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1021 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1022 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1023 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1024 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1025 -> NONTERM_ends_coming_soon_or_recover 
    | 1026 -> NONTERM_ends_coming_soon_or_recover 
    | 1027 -> NONTERM_ends_coming_soon_or_recover 
    | 1028 -> NONTERM_ends_coming_soon_or_recover 
    | 1029 -> NONTERM_ends_coming_soon_or_recover 
    | 1030 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 194 
let _fsyacc_tagOfErrorTerminal = 192

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 7us; 65535us; 4us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 11us; 20us; 11us; 22us; 11us; 4us; 65535us; 4us; 6us; 18us; 19us; 20us; 21us; 22us; 23us; 5us; 65535us; 4us; 12us; 18us; 12us; 20us; 12us; 22us; 12us; 24us; 25us; 4us; 65535us; 4us; 14us; 18us; 14us; 20us; 14us; 22us; 14us; 4us; 65535us; 4us; 16us; 18us; 16us; 20us; 16us; 22us; 16us; 4us; 65535us; 12us; 18us; 14us; 20us; 16us; 22us; 30us; 31us; 4us; 65535us; 12us; 30us; 14us; 30us; 16us; 30us; 30us; 30us; 23us; 65535us; 0us; 78us; 2us; 250us; 4us; 29us; 18us; 29us; 20us; 29us; 22us; 29us; 55us; 78us; 59us; 78us; 63us; 78us; 73us; 78us; 76us; 78us; 105us; 78us; 108us; 78us; 112us; 78us; 217us; 250us; 221us; 250us; 224us; 250us; 236us; 250us; 240us; 250us; 242us; 250us; 247us; 250us; 271us; 250us; 281us; 250us; 1us; 65535us; 35us; 36us; 1us; 65535us; 36us; 37us; 1us; 65535us; 0us; 1us; 6us; 65535us; 27us; 262us; 58us; 59us; 81us; 82us; 220us; 221us; 234us; 262us; 252us; 262us; 4us; 65535us; 50us; 54us; 52us; 54us; 212us; 216us; 214us; 216us; 1us; 65535us; 0us; 39us; 2us; 65535us; 50us; 51us; 52us; 53us; 2us; 65535us; 50us; 52us; 52us; 52us; 2us; 65535us; 0us; 50us; 55us; 56us; 3us; 65535us; 0us; 61us; 55us; 61us; 59us; 60us; 6us; 65535us; 0us; 62us; 55us; 62us; 59us; 62us; 63us; 64us; 108us; 109us; 112us; 113us; 9us; 65535us; 0us; 70us; 55us; 70us; 59us; 70us; 63us; 70us; 73us; 74us; 76us; 77us; 105us; 106us; 108us; 70us; 112us; 70us; 9us; 65535us; 0us; 72us; 55us; 72us; 59us; 72us; 63us; 72us; 73us; 72us; 76us; 72us; 105us; 72us; 108us; 72us; 112us; 72us; 9us; 65535us; 0us; 79us; 55us; 79us; 59us; 79us; 63us; 79us; 73us; 79us; 76us; 79us; 105us; 79us; 108us; 79us; 112us; 79us; 2us; 65535us; 98us; 99us; 173us; 174us; 1us; 65535us; 83us; 85us; 2us; 65535us; 58us; 86us; 81us; 86us; 2us; 65535us; 115us; 116us; 118us; 119us; 3us; 65535us; 115us; 117us; 118us; 117us; 184us; 185us; 1us; 65535us; 121us; 122us; 2us; 65535us; 121us; 131us; 124us; 125us; 2us; 65535us; 121us; 134us; 124us; 134us; 2us; 65535us; 121us; 138us; 124us; 138us; 3us; 65535us; 139us; 140us; 149us; 150us; 203us; 204us; 8us; 65535us; 124us; 146us; 126us; 127us; 139us; 157us; 145us; 146us; 149us; 157us; 153us; 154us; 160us; 161us; 203us; 157us; 8us; 65535us; 124us; 158us; 126us; 158us; 139us; 158us; 145us; 158us; 149us; 158us; 153us; 158us; 160us; 158us; 203us; 158us; 11us; 65535us; 124us; 159us; 126us; 159us; 139us; 159us; 145us; 159us; 149us; 159us; 153us; 159us; 160us; 159us; 203us; 159us; 584us; 585us; 591us; 592us; 1315us; 1316us; 3us; 65535us; 172us; 173us; 424us; 425us; 454us; 455us; 2us; 65535us; 189us; 190us; 191us; 192us; 2us; 65535us; 164us; 166us; 165us; 166us; 2us; 65535us; 58us; 87us; 81us; 87us; 5us; 65535us; 120us; 123us; 127us; 128us; 129us; 130us; 131us; 132us; 201us; 202us; 1us; 65535us; 2us; 3us; 1us; 65535us; 2us; 206us; 2us; 65535us; 212us; 213us; 214us; 215us; 2us; 65535us; 212us; 214us; 214us; 214us; 2us; 65535us; 2us; 212us; 217us; 218us; 3us; 65535us; 2us; 223us; 217us; 223us; 221us; 222us; 5us; 65535us; 2us; 231us; 217us; 231us; 221us; 231us; 224us; 225us; 281us; 282us; 9us; 65535us; 2us; 232us; 217us; 232us; 221us; 232us; 224us; 232us; 236us; 237us; 242us; 243us; 247us; 248us; 271us; 275us; 281us; 232us; 10us; 65535us; 2us; 238us; 217us; 238us; 221us; 238us; 224us; 238us; 236us; 238us; 240us; 241us; 242us; 238us; 247us; 238us; 271us; 238us; 281us; 238us; 10us; 65535us; 2us; 240us; 217us; 240us; 221us; 240us; 224us; 240us; 236us; 240us; 240us; 240us; 242us; 240us; 247us; 240us; 271us; 240us; 281us; 240us; 15us; 65535us; 2us; 249us; 4us; 24us; 18us; 24us; 20us; 24us; 22us; 24us; 24us; 24us; 217us; 249us; 221us; 249us; 224us; 249us; 236us; 249us; 240us; 249us; 242us; 249us; 247us; 249us; 271us; 249us; 281us; 249us; 1us; 65535us; 83us; 84us; 1us; 65535us; 263us; 264us; 2us; 65535us; 263us; 279us; 271us; 272us; 1us; 65535us; 336us; 339us; 80us; 65535us; 0us; 57us; 2us; 219us; 4us; 26us; 18us; 26us; 20us; 26us; 22us; 26us; 24us; 251us; 55us; 57us; 59us; 80us; 63us; 80us; 73us; 80us; 76us; 80us; 90us; 91us; 105us; 80us; 108us; 80us; 112us; 80us; 115us; 330us; 118us; 330us; 121us; 510us; 124us; 163us; 126us; 162us; 139us; 162us; 145us; 162us; 149us; 162us; 153us; 162us; 160us; 162us; 184us; 330us; 203us; 162us; 217us; 219us; 221us; 233us; 224us; 233us; 236us; 233us; 240us; 251us; 242us; 233us; 247us; 233us; 258us; 330us; 271us; 233us; 281us; 233us; 286us; 407us; 333us; 330us; 336us; 340us; 337us; 510us; 345us; 510us; 347us; 408us; 349us; 407us; 363us; 407us; 367us; 407us; 369us; 407us; 373us; 407us; 379us; 407us; 382us; 407us; 393us; 394us; 440us; 330us; 469us; 497us; 472us; 407us; 489us; 497us; 495us; 497us; 522us; 651us; 542us; 551us; 547us; 551us; 548us; 551us; 554us; 551us; 559us; 551us; 584us; 162us; 591us; 162us; 600us; 610us; 603us; 610us; 608us; 610us; 648us; 651us; 661us; 662us; 674us; 725us; 680us; 725us; 692us; 719us; 697us; 706us; 702us; 706us; 704us; 706us; 722us; 725us; 1315us; 162us; 1415us; 498us; 1417us; 725us; 116us; 65535us; 0us; 289us; 2us; 265us; 4us; 265us; 18us; 265us; 20us; 265us; 22us; 265us; 24us; 265us; 55us; 289us; 59us; 289us; 63us; 289us; 73us; 289us; 76us; 289us; 90us; 289us; 97us; 1473us; 105us; 289us; 108us; 289us; 112us; 289us; 115us; 289us; 118us; 289us; 121us; 289us; 124us; 289us; 126us; 289us; 136us; 1473us; 139us; 289us; 145us; 289us; 149us; 289us; 153us; 289us; 160us; 289us; 171us; 1473us; 184us; 289us; 187us; 1473us; 203us; 289us; 217us; 265us; 221us; 265us; 224us; 265us; 236us; 265us; 240us; 265us; 242us; 265us; 247us; 265us; 258us; 289us; 271us; 265us; 281us; 265us; 286us; 289us; 290us; 291us; 333us; 289us; 336us; 289us; 337us; 289us; 345us; 289us; 347us; 289us; 349us; 289us; 360us; 1473us; 363us; 289us; 367us; 289us; 369us; 289us; 373us; 289us; 379us; 289us; 382us; 289us; 393us; 289us; 423us; 1473us; 440us; 289us; 469us; 289us; 472us; 289us; 489us; 289us; 495us; 289us; 522us; 289us; 542us; 289us; 547us; 289us; 548us; 289us; 554us; 289us; 559us; 289us; 584us; 289us; 591us; 289us; 600us; 289us; 603us; 289us; 608us; 289us; 617us; 1473us; 648us; 289us; 661us; 289us; 674us; 289us; 680us; 289us; 692us; 289us; 697us; 289us; 702us; 289us; 704us; 289us; 722us; 289us; 784us; 784us; 785us; 784us; 787us; 784us; 820us; 889us; 832us; 889us; 848us; 889us; 851us; 889us; 863us; 889us; 884us; 889us; 889us; 889us; 890us; 889us; 892us; 889us; 893us; 889us; 894us; 889us; 895us; 889us; 902us; 889us; 904us; 889us; 993us; 889us; 1135us; 889us; 1137us; 889us; 1142us; 889us; 1149us; 889us; 1315us; 289us; 1415us; 289us; 1417us; 289us; 1453us; 889us; 1455us; 889us; 1462us; 1473us; 1465us; 1473us; 1468us; 1473us; 1471us; 1473us; 116us; 65535us; 0us; 290us; 2us; 290us; 4us; 290us; 18us; 290us; 20us; 290us; 22us; 290us; 24us; 290us; 55us; 290us; 59us; 290us; 63us; 290us; 73us; 290us; 76us; 290us; 90us; 290us; 97us; 290us; 105us; 290us; 108us; 290us; 112us; 290us; 115us; 290us; 118us; 290us; 121us; 290us; 124us; 290us; 126us; 290us; 136us; 290us; 139us; 290us; 145us; 290us; 149us; 290us; 153us; 290us; 160us; 290us; 171us; 290us; 184us; 290us; 187us; 290us; 203us; 290us; 217us; 290us; 221us; 290us; 224us; 290us; 236us; 290us; 240us; 290us; 242us; 290us; 247us; 290us; 258us; 290us; 271us; 290us; 281us; 290us; 286us; 290us; 290us; 290us; 333us; 290us; 336us; 290us; 337us; 290us; 345us; 290us; 347us; 290us; 349us; 290us; 360us; 290us; 363us; 290us; 367us; 290us; 369us; 290us; 373us; 290us; 379us; 290us; 382us; 290us; 393us; 290us; 423us; 290us; 440us; 290us; 469us; 290us; 472us; 290us; 489us; 290us; 495us; 290us; 522us; 290us; 542us; 290us; 547us; 290us; 548us; 290us; 554us; 290us; 559us; 290us; 584us; 290us; 591us; 290us; 600us; 290us; 603us; 290us; 608us; 290us; 617us; 290us; 648us; 290us; 661us; 290us; 674us; 290us; 680us; 290us; 692us; 290us; 697us; 290us; 702us; 290us; 704us; 290us; 722us; 290us; 784us; 290us; 785us; 290us; 787us; 290us; 820us; 290us; 832us; 290us; 848us; 290us; 851us; 290us; 863us; 290us; 884us; 290us; 889us; 290us; 890us; 290us; 892us; 290us; 893us; 290us; 894us; 290us; 895us; 290us; 902us; 290us; 904us; 290us; 993us; 290us; 1135us; 290us; 1137us; 290us; 1142us; 290us; 1149us; 290us; 1315us; 290us; 1415us; 290us; 1417us; 290us; 1453us; 290us; 1455us; 290us; 1462us; 290us; 1465us; 290us; 1468us; 290us; 1471us; 290us; 1us; 65535us; 292us; 293us; 2us; 65535us; 292us; 302us; 303us; 304us; 2us; 65535us; 292us; 308us; 303us; 308us; 4us; 65535us; 164us; 198us; 165us; 198us; 409us; 413us; 410us; 413us; 6us; 65535us; 115us; 120us; 118us; 120us; 184us; 120us; 258us; 336us; 333us; 336us; 440us; 336us; 2us; 65535us; 259us; 260us; 334us; 335us; 3us; 65535us; 258us; 259us; 333us; 334us; 440us; 441us; 2us; 65535us; 337us; 338us; 345us; 346us; 3us; 65535us; 337us; 355us; 345us; 355us; 347us; 348us; 3us; 65535us; 337us; 358us; 345us; 358us; 347us; 358us; 3us; 65535us; 337us; 362us; 345us; 362us; 347us; 362us; 3us; 65535us; 286us; 287us; 363us; 364us; 472us; 473us; 10us; 65535us; 286us; 377us; 347us; 370us; 349us; 350us; 363us; 377us; 367us; 380us; 369us; 370us; 373us; 374us; 379us; 380us; 382us; 383us; 472us; 377us; 10us; 65535us; 286us; 378us; 347us; 378us; 349us; 378us; 363us; 378us; 367us; 378us; 369us; 378us; 373us; 378us; 379us; 378us; 382us; 378us; 472us; 378us; 1us; 65535us; 401us; 404us; 2us; 65535us; 384us; 385us; 386us; 387us; 3us; 65535us; 384us; 390us; 386us; 390us; 391us; 392us; 3us; 65535us; 413us; 414us; 499us; 500us; 505us; 506us; 2us; 65535us; 409us; 419us; 410us; 419us; 10us; 65535us; 286us; 381us; 347us; 381us; 349us; 381us; 363us; 381us; 367us; 381us; 369us; 381us; 373us; 381us; 379us; 381us; 382us; 381us; 472us; 381us; 3us; 65535us; 325us; 430us; 409us; 428us; 410us; 428us; 2us; 65535us; 413us; 432us; 499us; 502us; 1us; 65535us; 451us; 452us; 41us; 65535us; 394us; 822us; 399us; 822us; 434us; 858us; 729us; 822us; 805us; 822us; 806us; 822us; 810us; 822us; 811us; 822us; 812us; 822us; 813us; 822us; 820us; 822us; 823us; 858us; 825us; 858us; 827us; 858us; 832us; 822us; 836us; 858us; 838us; 858us; 840us; 858us; 848us; 822us; 851us; 822us; 863us; 822us; 884us; 822us; 889us; 822us; 890us; 822us; 892us; 822us; 893us; 822us; 894us; 822us; 895us; 822us; 902us; 822us; 904us; 822us; 993us; 822us; 1020us; 822us; 1026us; 822us; 1135us; 822us; 1137us; 822us; 1142us; 822us; 1149us; 822us; 1435us; 858us; 1440us; 858us; 1453us; 822us; 1455us; 822us; 10us; 65535us; 45us; 46us; 93us; 94us; 167us; 168us; 330us; 536us; 443us; 444us; 449us; 450us; 610us; 611us; 653us; 654us; 662us; 663us; 693us; 694us; 63us; 65535us; 26us; 468us; 45us; 464us; 57us; 468us; 80us; 468us; 93us; 464us; 162us; 468us; 163us; 468us; 167us; 464us; 219us; 468us; 233us; 468us; 251us; 468us; 330us; 464us; 340us; 468us; 394us; 462us; 399us; 462us; 407us; 468us; 408us; 468us; 434us; 462us; 443us; 464us; 449us; 464us; 510us; 468us; 610us; 464us; 653us; 464us; 662us; 464us; 693us; 464us; 729us; 462us; 805us; 462us; 806us; 462us; 810us; 462us; 811us; 462us; 812us; 462us; 813us; 462us; 820us; 462us; 823us; 462us; 825us; 462us; 827us; 462us; 832us; 462us; 836us; 462us; 838us; 462us; 840us; 462us; 848us; 462us; 851us; 462us; 863us; 462us; 884us; 462us; 889us; 462us; 890us; 462us; 892us; 462us; 893us; 462us; 894us; 462us; 895us; 462us; 902us; 462us; 904us; 462us; 993us; 462us; 1020us; 462us; 1026us; 462us; 1135us; 462us; 1137us; 462us; 1142us; 462us; 1149us; 462us; 1435us; 462us; 1440us; 462us; 1453us; 462us; 1455us; 462us; 12us; 65535us; 26us; 27us; 57us; 58us; 80us; 81us; 162us; 164us; 163us; 165us; 219us; 220us; 233us; 234us; 251us; 252us; 340us; 341us; 407us; 409us; 408us; 410us; 510us; 511us; 1us; 65535us; 417us; 418us; 4us; 65535us; 350us; 351us; 352us; 353us; 355us; 356us; 658us; 659us; 2us; 65535us; 409us; 427us; 410us; 427us; 2us; 65535us; 343us; 344us; 435us; 436us; 2us; 65535us; 343us; 482us; 435us; 482us; 2us; 65535us; 476us; 477us; 479us; 480us; 3us; 65535us; 476us; 485us; 479us; 485us; 1203us; 1413us; 2us; 65535us; 469us; 470us; 1415us; 1420us; 4us; 65535us; 469us; 493us; 489us; 490us; 495us; 496us; 1415us; 493us; 4us; 65535us; 469us; 494us; 489us; 494us; 495us; 494us; 1415us; 494us; 2us; 65535us; 497us; 499us; 498us; 499us; 5us; 65535us; 121us; 133us; 124us; 133us; 337us; 357us; 345us; 357us; 347us; 357us; 6us; 65535us; 165us; 518us; 410us; 518us; 511us; 518us; 614us; 645us; 636us; 645us; 667us; 645us; 1us; 65535us; 519us; 520us; 5us; 65535us; 121us; 139us; 124us; 139us; 337us; 363us; 345us; 363us; 347us; 363us; 9us; 65535us; 164us; 175us; 165us; 175us; 409us; 416us; 410us; 416us; 1409us; 1428us; 1411us; 1428us; 1422us; 1428us; 1424us; 1428us; 1426us; 1428us; 1us; 65535us; 330us; 331us; 1us; 65535us; 536us; 538us; 3us; 65535us; 542us; 543us; 554us; 545us; 559us; 546us; 5us; 65535us; 542us; 550us; 547us; 549us; 548us; 549us; 554us; 550us; 559us; 550us; 1us; 65535us; 537us; 540us; 1us; 65535us; 559us; 560us; 4us; 65535us; 95us; 563us; 169us; 563us; 421us; 563us; 822us; 564us; 3us; 65535us; 95us; 96us; 169us; 170us; 421us; 422us; 1us; 65535us; 822us; 823us; 3us; 65535us; 331us; 332us; 545us; 555us; 560us; 561us; 3us; 65535us; 565us; 566us; 1459us; 567us; 1461us; 568us; 4us; 65535us; 565us; 571us; 569us; 570us; 1459us; 571us; 1461us; 571us; 1us; 65535us; 587us; 588us; 3us; 65535us; 165us; 517us; 410us; 517us; 511us; 517us; 5us; 65535us; 165us; 600us; 410us; 600us; 511us; 600us; 602us; 603us; 607us; 608us; 3us; 65535us; 600us; 601us; 603us; 604us; 608us; 609us; 3us; 65535us; 600us; 607us; 603us; 607us; 608us; 607us; 1us; 65535us; 611us; 612us; 3us; 65535us; 165us; 602us; 410us; 602us; 511us; 602us; 3us; 65535us; 165us; 605us; 410us; 605us; 511us; 605us; 4us; 65535us; 614us; 646us; 636us; 646us; 639us; 640us; 667us; 646us; 4us; 65535us; 614us; 638us; 636us; 638us; 639us; 638us; 667us; 638us; 3us; 65535us; 614us; 615us; 636us; 637us; 667us; 668us; 2us; 65535us; 522us; 523us; 648us; 649us; 2us; 65535us; 522us; 647us; 648us; 647us; 3us; 65535us; 179us; 180us; 182us; 183us; 651us; 652us; 4us; 65535us; 27us; 261us; 220us; 261us; 234us; 261us; 252us; 261us; 6us; 65535us; 27us; 661us; 58us; 661us; 81us; 661us; 220us; 661us; 234us; 661us; 252us; 661us; 6us; 65535us; 27us; 658us; 58us; 201us; 81us; 201us; 220us; 658us; 234us; 658us; 252us; 658us; 1us; 65535us; 663us; 664us; 1us; 65535us; 664us; 665us; 15us; 65535us; 2us; 267us; 4us; 267us; 18us; 267us; 20us; 267us; 22us; 267us; 24us; 267us; 217us; 267us; 221us; 267us; 224us; 267us; 236us; 267us; 240us; 267us; 242us; 267us; 247us; 267us; 271us; 267us; 281us; 267us; 109us; 65535us; 27us; 254us; 100us; 946us; 102us; 946us; 220us; 254us; 234us; 254us; 252us; 253us; 256us; 946us; 325us; 686us; 397us; 946us; 402us; 946us; 409us; 686us; 410us; 686us; 437us; 946us; 453us; 946us; 677us; 946us; 683us; 946us; 732us; 946us; 736us; 946us; 746us; 946us; 906us; 946us; 911us; 946us; 923us; 946us; 925us; 946us; 928us; 946us; 931us; 946us; 947us; 946us; 950us; 946us; 953us; 946us; 959us; 946us; 963us; 946us; 967us; 946us; 969us; 946us; 974us; 946us; 976us; 946us; 978us; 946us; 980us; 946us; 982us; 946us; 984us; 946us; 995us; 946us; 1003us; 946us; 1010us; 946us; 1016us; 946us; 1018us; 946us; 1021us; 946us; 1024us; 946us; 1027us; 946us; 1030us; 946us; 1033us; 946us; 1036us; 946us; 1038us; 946us; 1043us; 946us; 1086us; 946us; 1088us; 946us; 1091us; 946us; 1092us; 946us; 1093us; 946us; 1094us; 946us; 1095us; 946us; 1096us; 946us; 1097us; 946us; 1098us; 946us; 1099us; 946us; 1100us; 946us; 1101us; 946us; 1102us; 946us; 1103us; 946us; 1104us; 946us; 1105us; 946us; 1106us; 946us; 1107us; 946us; 1108us; 946us; 1109us; 946us; 1110us; 946us; 1132us; 946us; 1154us; 946us; 1155us; 946us; 1159us; 946us; 1161us; 946us; 1165us; 946us; 1167us; 946us; 1171us; 946us; 1174us; 946us; 1176us; 946us; 1239us; 946us; 1248us; 946us; 1255us; 946us; 1265us; 946us; 1267us; 946us; 1268us; 946us; 1279us; 946us; 1286us; 946us; 1287us; 946us; 1293us; 946us; 1299us; 946us; 1300us; 946us; 1301us; 946us; 1317us; 946us; 1327us; 946us; 1340us; 946us; 1341us; 946us; 1343us; 946us; 1345us; 946us; 1349us; 946us; 1350us; 946us; 1373us; 946us; 1378us; 946us; 1403us; 946us; 1437us; 946us; 1442us; 946us; 7us; 65535us; 27us; 257us; 220us; 257us; 234us; 257us; 252us; 257us; 325us; 687us; 409us; 687us; 410us; 687us; 109us; 65535us; 27us; 256us; 100us; 950us; 102us; 950us; 220us; 256us; 234us; 256us; 252us; 255us; 256us; 931us; 325us; 688us; 397us; 931us; 402us; 931us; 409us; 688us; 410us; 688us; 437us; 931us; 453us; 931us; 677us; 931us; 683us; 931us; 732us; 931us; 736us; 931us; 746us; 931us; 906us; 931us; 911us; 931us; 923us; 931us; 925us; 931us; 928us; 931us; 931us; 931us; 947us; 931us; 950us; 931us; 953us; 931us; 959us; 931us; 963us; 931us; 967us; 931us; 969us; 950us; 974us; 950us; 976us; 950us; 978us; 950us; 980us; 950us; 982us; 950us; 984us; 931us; 995us; 931us; 1003us; 931us; 1010us; 931us; 1016us; 950us; 1018us; 950us; 1021us; 931us; 1024us; 931us; 1027us; 931us; 1030us; 931us; 1033us; 931us; 1036us; 931us; 1038us; 931us; 1043us; 931us; 1086us; 950us; 1088us; 950us; 1091us; 950us; 1092us; 950us; 1093us; 950us; 1094us; 950us; 1095us; 950us; 1096us; 950us; 1097us; 950us; 1098us; 950us; 1099us; 950us; 1100us; 950us; 1101us; 950us; 1102us; 950us; 1103us; 950us; 1104us; 950us; 1105us; 950us; 1106us; 950us; 1107us; 950us; 1108us; 950us; 1109us; 950us; 1110us; 950us; 1132us; 931us; 1154us; 950us; 1155us; 931us; 1159us; 950us; 1161us; 931us; 1165us; 950us; 1167us; 931us; 1171us; 950us; 1174us; 950us; 1176us; 950us; 1239us; 931us; 1248us; 931us; 1255us; 931us; 1265us; 950us; 1267us; 950us; 1268us; 950us; 1279us; 931us; 1286us; 931us; 1287us; 931us; 1293us; 931us; 1299us; 931us; 1300us; 931us; 1301us; 931us; 1317us; 931us; 1327us; 931us; 1340us; 950us; 1341us; 950us; 1343us; 931us; 1345us; 950us; 1349us; 950us; 1350us; 950us; 1373us; 950us; 1378us; 950us; 1403us; 950us; 1437us; 931us; 1442us; 931us; 108us; 65535us; 27us; 956us; 100us; 956us; 102us; 956us; 220us; 956us; 234us; 956us; 256us; 956us; 325us; 689us; 397us; 956us; 402us; 956us; 409us; 689us; 410us; 689us; 437us; 956us; 453us; 956us; 677us; 956us; 683us; 956us; 732us; 956us; 736us; 956us; 746us; 956us; 906us; 956us; 911us; 956us; 923us; 956us; 925us; 956us; 928us; 956us; 931us; 956us; 947us; 956us; 950us; 956us; 953us; 956us; 959us; 956us; 963us; 956us; 967us; 956us; 969us; 956us; 974us; 956us; 976us; 956us; 978us; 956us; 980us; 956us; 982us; 956us; 984us; 956us; 995us; 956us; 1003us; 956us; 1010us; 956us; 1016us; 956us; 1018us; 956us; 1021us; 956us; 1024us; 956us; 1027us; 956us; 1030us; 956us; 1033us; 956us; 1036us; 956us; 1038us; 956us; 1043us; 956us; 1086us; 956us; 1088us; 956us; 1091us; 956us; 1092us; 956us; 1093us; 956us; 1094us; 956us; 1095us; 956us; 1096us; 956us; 1097us; 956us; 1098us; 956us; 1099us; 956us; 1100us; 956us; 1101us; 956us; 1102us; 956us; 1103us; 956us; 1104us; 956us; 1105us; 956us; 1106us; 956us; 1107us; 956us; 1108us; 956us; 1109us; 956us; 1110us; 956us; 1132us; 956us; 1154us; 956us; 1155us; 956us; 1159us; 956us; 1161us; 956us; 1165us; 956us; 1167us; 956us; 1171us; 956us; 1174us; 956us; 1176us; 956us; 1239us; 956us; 1248us; 956us; 1255us; 956us; 1265us; 956us; 1267us; 956us; 1268us; 956us; 1279us; 956us; 1286us; 956us; 1287us; 956us; 1293us; 956us; 1299us; 956us; 1300us; 956us; 1301us; 956us; 1317us; 956us; 1327us; 956us; 1340us; 956us; 1341us; 956us; 1343us; 956us; 1345us; 956us; 1349us; 956us; 1350us; 956us; 1373us; 956us; 1378us; 956us; 1403us; 956us; 1437us; 956us; 1442us; 956us; 3us; 65535us; 325us; 412us; 409us; 411us; 410us; 411us; 4us; 65535us; 681us; 682us; 684us; 685us; 1028us; 1029us; 1039us; 1040us; 109us; 65535us; 27us; 676us; 100us; 676us; 102us; 676us; 220us; 676us; 234us; 676us; 252us; 676us; 256us; 676us; 325us; 676us; 397us; 676us; 402us; 676us; 409us; 676us; 410us; 676us; 437us; 676us; 453us; 676us; 677us; 676us; 683us; 676us; 732us; 676us; 736us; 676us; 746us; 676us; 906us; 676us; 911us; 676us; 923us; 676us; 925us; 676us; 928us; 676us; 931us; 676us; 947us; 676us; 950us; 676us; 953us; 676us; 959us; 676us; 963us; 676us; 967us; 676us; 969us; 676us; 974us; 676us; 976us; 676us; 978us; 676us; 980us; 676us; 982us; 676us; 984us; 676us; 995us; 676us; 1003us; 676us; 1010us; 676us; 1016us; 676us; 1018us; 676us; 1021us; 676us; 1024us; 676us; 1027us; 676us; 1030us; 676us; 1033us; 676us; 1036us; 676us; 1038us; 676us; 1043us; 676us; 1086us; 676us; 1088us; 676us; 1091us; 676us; 1092us; 676us; 1093us; 676us; 1094us; 676us; 1095us; 676us; 1096us; 676us; 1097us; 676us; 1098us; 676us; 1099us; 676us; 1100us; 676us; 1101us; 676us; 1102us; 676us; 1103us; 676us; 1104us; 676us; 1105us; 676us; 1106us; 676us; 1107us; 676us; 1108us; 676us; 1109us; 676us; 1110us; 676us; 1132us; 676us; 1154us; 676us; 1155us; 676us; 1159us; 676us; 1161us; 676us; 1165us; 676us; 1167us; 676us; 1171us; 676us; 1174us; 676us; 1176us; 676us; 1239us; 676us; 1248us; 676us; 1255us; 676us; 1265us; 676us; 1267us; 676us; 1268us; 676us; 1279us; 676us; 1286us; 676us; 1287us; 676us; 1293us; 676us; 1299us; 676us; 1300us; 676us; 1301us; 676us; 1317us; 676us; 1327us; 676us; 1340us; 676us; 1341us; 676us; 1343us; 676us; 1345us; 676us; 1349us; 676us; 1350us; 676us; 1373us; 676us; 1378us; 676us; 1403us; 676us; 1437us; 676us; 1442us; 676us; 1us; 65535us; 697us; 698us; 1us; 65535us; 697us; 700us; 3us; 65535us; 697us; 701us; 702us; 703us; 704us; 705us; 2us; 65535us; 706us; 707us; 719us; 710us; 1us; 65535us; 692us; 693us; 4us; 65535us; 674us; 675us; 680us; 681us; 1415us; 1416us; 1417us; 1418us; 2us; 65535us; 720us; 721us; 723us; 724us; 5us; 65535us; 674us; 720us; 680us; 720us; 722us; 723us; 1415us; 720us; 1417us; 720us; 2us; 65535us; 498us; 726us; 725us; 726us; 1us; 65535us; 732us; 733us; 2us; 65535us; 732us; 740us; 736us; 737us; 1us; 65535us; 741us; 742us; 1us; 65535us; 742us; 743us; 1us; 65535us; 744us; 745us; 2us; 65535us; 744us; 750us; 748us; 749us; 247us; 65535us; 27us; 773us; 97us; 1575us; 100us; 773us; 102us; 773us; 136us; 1575us; 165us; 1575us; 171us; 1575us; 175us; 1575us; 177us; 1575us; 187us; 1575us; 220us; 773us; 234us; 773us; 256us; 773us; 306us; 773us; 310us; 773us; 315us; 773us; 360us; 1575us; 394us; 773us; 397us; 773us; 399us; 773us; 402us; 773us; 410us; 1575us; 416us; 1575us; 423us; 1575us; 434us; 773us; 437us; 773us; 446us; 1575us; 453us; 773us; 456us; 1575us; 475us; 1575us; 478us; 773us; 511us; 1575us; 519us; 1575us; 528us; 1575us; 574us; 1575us; 577us; 1575us; 614us; 1575us; 617us; 1575us; 620us; 773us; 632us; 773us; 636us; 1575us; 639us; 1575us; 642us; 1575us; 656us; 1575us; 667us; 1575us; 677us; 773us; 683us; 773us; 729us; 773us; 732us; 773us; 736us; 773us; 746us; 773us; 752us; 1575us; 782us; 1575us; 805us; 773us; 806us; 773us; 810us; 773us; 811us; 773us; 812us; 773us; 813us; 773us; 820us; 773us; 823us; 773us; 825us; 773us; 827us; 773us; 829us; 1575us; 832us; 773us; 836us; 773us; 838us; 773us; 840us; 773us; 848us; 773us; 851us; 773us; 863us; 773us; 884us; 773us; 887us; 1575us; 889us; 773us; 890us; 773us; 892us; 773us; 893us; 773us; 894us; 773us; 895us; 773us; 902us; 773us; 904us; 773us; 906us; 773us; 911us; 773us; 918us; 1575us; 923us; 773us; 925us; 773us; 928us; 773us; 931us; 773us; 947us; 773us; 950us; 773us; 953us; 773us; 959us; 773us; 963us; 773us; 967us; 773us; 969us; 773us; 974us; 773us; 976us; 773us; 978us; 773us; 980us; 773us; 982us; 773us; 984us; 773us; 993us; 773us; 995us; 773us; 1003us; 773us; 1010us; 773us; 1016us; 773us; 1018us; 773us; 1020us; 773us; 1021us; 773us; 1024us; 773us; 1026us; 773us; 1027us; 773us; 1030us; 773us; 1033us; 773us; 1036us; 773us; 1038us; 773us; 1043us; 773us; 1080us; 1575us; 1082us; 1575us; 1084us; 1575us; 1086us; 773us; 1088us; 773us; 1091us; 773us; 1092us; 773us; 1093us; 773us; 1094us; 773us; 1095us; 773us; 1096us; 773us; 1097us; 773us; 1098us; 773us; 1099us; 773us; 1100us; 773us; 1101us; 773us; 1102us; 773us; 1103us; 773us; 1104us; 773us; 1105us; 773us; 1106us; 773us; 1107us; 773us; 1108us; 773us; 1109us; 773us; 1110us; 773us; 1132us; 773us; 1135us; 773us; 1137us; 773us; 1142us; 773us; 1149us; 773us; 1154us; 773us; 1155us; 773us; 1159us; 773us; 1161us; 773us; 1165us; 773us; 1167us; 773us; 1171us; 773us; 1174us; 773us; 1176us; 773us; 1178us; 773us; 1179us; 773us; 1181us; 773us; 1182us; 773us; 1184us; 773us; 1185us; 773us; 1187us; 773us; 1188us; 773us; 1190us; 773us; 1191us; 773us; 1193us; 773us; 1194us; 773us; 1196us; 1575us; 1197us; 1575us; 1200us; 773us; 1201us; 773us; 1206us; 773us; 1208us; 773us; 1210us; 773us; 1211us; 773us; 1214us; 773us; 1221us; 773us; 1222us; 773us; 1225us; 773us; 1226us; 773us; 1239us; 773us; 1248us; 773us; 1255us; 773us; 1265us; 773us; 1267us; 773us; 1268us; 773us; 1279us; 773us; 1286us; 773us; 1287us; 773us; 1293us; 773us; 1299us; 773us; 1300us; 773us; 1301us; 773us; 1317us; 773us; 1327us; 773us; 1340us; 773us; 1341us; 773us; 1343us; 773us; 1345us; 773us; 1349us; 773us; 1350us; 773us; 1354us; 773us; 1360us; 1575us; 1363us; 1575us; 1365us; 1575us; 1367us; 1575us; 1369us; 773us; 1373us; 773us; 1378us; 773us; 1403us; 773us; 1428us; 1575us; 1435us; 773us; 1437us; 773us; 1440us; 773us; 1442us; 773us; 1453us; 773us; 1455us; 773us; 1462us; 1575us; 1465us; 1575us; 1468us; 1575us; 1471us; 1575us; 1473us; 1575us; 1475us; 1575us; 1479us; 1575us; 1482us; 1575us; 1486us; 1575us; 1489us; 1575us; 1492us; 1575us; 1494us; 1575us; 1496us; 1575us; 1499us; 1575us; 1501us; 1575us; 1520us; 1575us; 1521us; 1575us; 1529us; 1575us; 1530us; 1575us; 1535us; 1575us; 1536us; 1575us; 1548us; 1575us; 1552us; 1575us; 1566us; 1575us; 1570us; 1575us; 1577us; 773us; 1591us; 1575us; 1593us; 1575us; 1604us; 1575us; 178us; 65535us; 27us; 1270us; 100us; 1270us; 102us; 1270us; 220us; 1270us; 234us; 1270us; 256us; 1270us; 306us; 1270us; 310us; 1270us; 315us; 1270us; 394us; 859us; 397us; 1270us; 399us; 859us; 402us; 1270us; 434us; 859us; 437us; 1270us; 453us; 1270us; 478us; 1270us; 620us; 621us; 632us; 633us; 677us; 1270us; 683us; 1270us; 729us; 859us; 732us; 1270us; 736us; 1270us; 746us; 1270us; 805us; 859us; 806us; 859us; 810us; 859us; 811us; 859us; 812us; 859us; 813us; 859us; 820us; 859us; 823us; 859us; 825us; 859us; 827us; 859us; 832us; 859us; 836us; 859us; 838us; 859us; 840us; 859us; 848us; 859us; 851us; 859us; 863us; 859us; 884us; 859us; 889us; 859us; 890us; 859us; 892us; 859us; 893us; 859us; 894us; 859us; 895us; 859us; 902us; 859us; 904us; 859us; 906us; 1270us; 911us; 1270us; 923us; 1270us; 925us; 1270us; 928us; 1270us; 931us; 1270us; 947us; 1270us; 950us; 1270us; 953us; 1270us; 959us; 1270us; 963us; 1270us; 967us; 1270us; 969us; 1270us; 974us; 1270us; 976us; 1270us; 978us; 1270us; 980us; 1270us; 982us; 1270us; 984us; 1270us; 993us; 859us; 995us; 1270us; 1003us; 1270us; 1010us; 1270us; 1016us; 1270us; 1018us; 1270us; 1020us; 859us; 1021us; 1270us; 1024us; 1270us; 1026us; 859us; 1027us; 1270us; 1030us; 1270us; 1033us; 1270us; 1036us; 1270us; 1038us; 1270us; 1043us; 1270us; 1086us; 1270us; 1088us; 1270us; 1091us; 1270us; 1092us; 1270us; 1093us; 1270us; 1094us; 1270us; 1095us; 1270us; 1096us; 1270us; 1097us; 1270us; 1098us; 1270us; 1099us; 1270us; 1100us; 1270us; 1101us; 1270us; 1102us; 1270us; 1103us; 1270us; 1104us; 1270us; 1105us; 1270us; 1106us; 1270us; 1107us; 1270us; 1108us; 1270us; 1109us; 1270us; 1110us; 1270us; 1132us; 1270us; 1135us; 859us; 1137us; 859us; 1142us; 859us; 1149us; 859us; 1154us; 1270us; 1155us; 1270us; 1159us; 1270us; 1161us; 1270us; 1165us; 1270us; 1167us; 1270us; 1171us; 1270us; 1174us; 1270us; 1176us; 1270us; 1178us; 1270us; 1179us; 1270us; 1181us; 1270us; 1182us; 1270us; 1184us; 1270us; 1185us; 1270us; 1187us; 1270us; 1188us; 1270us; 1190us; 1270us; 1191us; 1270us; 1193us; 1270us; 1194us; 1270us; 1200us; 1270us; 1201us; 1270us; 1206us; 1270us; 1208us; 1270us; 1210us; 1270us; 1211us; 1270us; 1214us; 1270us; 1221us; 1270us; 1222us; 1270us; 1225us; 1270us; 1226us; 1270us; 1239us; 1270us; 1248us; 1270us; 1255us; 1270us; 1265us; 1270us; 1267us; 1270us; 1268us; 1270us; 1279us; 1270us; 1286us; 1270us; 1287us; 1270us; 1293us; 1270us; 1299us; 1270us; 1300us; 1270us; 1301us; 1270us; 1317us; 1270us; 1327us; 1270us; 1340us; 1270us; 1341us; 1270us; 1343us; 1270us; 1345us; 1270us; 1349us; 1270us; 1350us; 1270us; 1354us; 1270us; 1369us; 1270us; 1373us; 1270us; 1378us; 1270us; 1403us; 1270us; 1435us; 859us; 1437us; 1270us; 1440us; 859us; 1442us; 1270us; 1453us; 859us; 1455us; 859us; 1577us; 1270us; 3us; 65535us; 394us; 395us; 399us; 400us; 729us; 730us; 3us; 65535us; 784us; 780us; 785us; 781us; 787us; 781us; 2us; 65535us; 785us; 786us; 787us; 788us; 1us; 65535us; 342us; 343us; 11us; 65535us; 394us; 776us; 399us; 776us; 729us; 776us; 805us; 795us; 806us; 796us; 810us; 797us; 811us; 798us; 812us; 799us; 813us; 800us; 1020us; 801us; 1026us; 802us; 11us; 65535us; 394us; 807us; 399us; 807us; 729us; 807us; 805us; 807us; 806us; 807us; 810us; 807us; 811us; 807us; 812us; 807us; 813us; 807us; 1020us; 807us; 1026us; 807us; 11us; 65535us; 394us; 808us; 399us; 808us; 729us; 808us; 805us; 808us; 806us; 808us; 810us; 808us; 811us; 808us; 812us; 808us; 813us; 808us; 1020us; 808us; 1026us; 808us; 2us; 65535us; 816us; 817us; 832us; 833us; 2us; 65535us; 816us; 814us; 832us; 814us; 32us; 65535us; 394us; 809us; 399us; 809us; 729us; 809us; 805us; 809us; 806us; 809us; 810us; 809us; 811us; 809us; 812us; 809us; 813us; 809us; 820us; 891us; 832us; 891us; 848us; 891us; 851us; 891us; 863us; 891us; 884us; 891us; 889us; 891us; 890us; 891us; 892us; 891us; 893us; 891us; 894us; 891us; 895us; 891us; 902us; 891us; 904us; 891us; 993us; 891us; 1020us; 809us; 1026us; 809us; 1135us; 891us; 1137us; 891us; 1142us; 891us; 1149us; 891us; 1453us; 891us; 1455us; 891us; 3us; 65535us; 823us; 824us; 825us; 826us; 827us; 828us; 8us; 65535us; 823us; 835us; 825us; 835us; 827us; 835us; 836us; 837us; 838us; 839us; 840us; 841us; 1435us; 1436us; 1440us; 1441us; 41us; 65535us; 394us; 831us; 399us; 831us; 434us; 435us; 729us; 831us; 805us; 831us; 806us; 831us; 810us; 831us; 811us; 831us; 812us; 831us; 813us; 831us; 820us; 831us; 823us; 836us; 825us; 836us; 827us; 836us; 832us; 831us; 836us; 836us; 838us; 836us; 840us; 836us; 848us; 831us; 851us; 831us; 863us; 831us; 884us; 831us; 889us; 831us; 890us; 831us; 892us; 831us; 893us; 831us; 894us; 831us; 895us; 831us; 902us; 831us; 904us; 831us; 993us; 831us; 1020us; 831us; 1026us; 831us; 1135us; 831us; 1137us; 831us; 1142us; 831us; 1149us; 831us; 1435us; 836us; 1440us; 836us; 1453us; 831us; 1455us; 831us; 2us; 65535us; 832us; 864us; 863us; 864us; 21us; 65535us; 820us; 821us; 832us; 870us; 848us; 879us; 851us; 879us; 863us; 870us; 884us; 871us; 889us; 872us; 890us; 873us; 892us; 874us; 893us; 875us; 894us; 876us; 895us; 877us; 902us; 878us; 904us; 879us; 993us; 880us; 1135us; 881us; 1137us; 881us; 1142us; 881us; 1149us; 881us; 1453us; 881us; 1455us; 881us; 21us; 65535us; 820us; 885us; 832us; 885us; 848us; 885us; 851us; 885us; 863us; 885us; 884us; 885us; 889us; 885us; 890us; 885us; 892us; 885us; 893us; 885us; 894us; 885us; 895us; 885us; 902us; 885us; 904us; 885us; 993us; 885us; 1135us; 885us; 1137us; 885us; 1142us; 885us; 1149us; 885us; 1453us; 885us; 1455us; 885us; 21us; 65535us; 820us; 886us; 832us; 886us; 848us; 886us; 851us; 886us; 863us; 886us; 884us; 886us; 889us; 886us; 890us; 886us; 892us; 886us; 893us; 886us; 894us; 886us; 895us; 886us; 902us; 886us; 904us; 886us; 993us; 886us; 1135us; 886us; 1137us; 886us; 1142us; 886us; 1149us; 886us; 1453us; 886us; 1455us; 886us; 1us; 65535us; 845us; 846us; 2us; 65535us; 845us; 896us; 899us; 900us; 2us; 65535us; 845us; 897us; 899us; 897us; 3us; 65535us; 848us; 849us; 851us; 852us; 904us; 905us; 23us; 65535us; 256us; 951us; 397us; 398us; 402us; 403us; 437us; 438us; 453us; 454us; 677us; 678us; 683us; 684us; 746us; 747us; 931us; 951us; 950us; 951us; 953us; 954us; 967us; 968us; 984us; 985us; 995us; 996us; 1003us; 1004us; 1010us; 1011us; 1021us; 1022us; 1024us; 1025us; 1027us; 1028us; 1030us; 1031us; 1036us; 1037us; 1038us; 1039us; 1437us; 1438us; 6us; 65535us; 978us; 979us; 980us; 981us; 1088us; 1089us; 1373us; 1374us; 1378us; 1379us; 1403us; 1404us; 5us; 65535us; 963us; 964us; 1043us; 1044us; 1155us; 1156us; 1343us; 1344us; 1442us; 1443us; 48us; 65535us; 256us; 910us; 397us; 910us; 402us; 910us; 437us; 910us; 453us; 910us; 677us; 910us; 683us; 910us; 732us; 741us; 736us; 741us; 746us; 910us; 906us; 907us; 911us; 912us; 928us; 929us; 931us; 910us; 947us; 948us; 950us; 910us; 953us; 910us; 959us; 960us; 963us; 915us; 967us; 910us; 984us; 910us; 995us; 910us; 1003us; 910us; 1010us; 910us; 1021us; 910us; 1024us; 910us; 1027us; 910us; 1030us; 910us; 1033us; 1034us; 1036us; 910us; 1038us; 910us; 1043us; 915us; 1132us; 1133us; 1155us; 915us; 1161us; 1162us; 1167us; 1168us; 1248us; 1253us; 1255us; 1256us; 1279us; 1280us; 1286us; 1288us; 1287us; 1288us; 1299us; 1319us; 1300us; 1319us; 1301us; 1319us; 1317us; 1318us; 1343us; 915us; 1437us; 910us; 1442us; 915us; 53us; 65535us; 256us; 917us; 397us; 917us; 402us; 917us; 437us; 917us; 453us; 917us; 677us; 917us; 683us; 917us; 732us; 917us; 736us; 917us; 746us; 917us; 906us; 917us; 911us; 917us; 923us; 924us; 925us; 926us; 928us; 917us; 931us; 917us; 947us; 917us; 950us; 917us; 953us; 917us; 959us; 917us; 963us; 917us; 967us; 917us; 984us; 917us; 995us; 917us; 1003us; 917us; 1010us; 917us; 1021us; 917us; 1024us; 917us; 1027us; 917us; 1030us; 917us; 1033us; 917us; 1036us; 917us; 1038us; 917us; 1043us; 917us; 1132us; 917us; 1155us; 917us; 1161us; 917us; 1167us; 917us; 1239us; 1338us; 1248us; 917us; 1255us; 917us; 1279us; 917us; 1286us; 917us; 1287us; 917us; 1293us; 1338us; 1299us; 917us; 1300us; 917us; 1301us; 917us; 1317us; 917us; 1327us; 1338us; 1343us; 917us; 1437us; 917us; 1442us; 917us; 86us; 65535us; 64us; 67us; 140us; 142us; 146us; 148us; 150us; 152us; 154us; 156us; 225us; 228us; 265us; 266us; 272us; 274us; 275us; 277us; 282us; 284us; 292us; 1767us; 294us; 1767us; 351us; 354us; 364us; 366us; 370us; 371us; 374us; 375us; 475us; 1767us; 490us; 492us; 514us; 515us; 523us; 525us; 681us; 691us; 684us; 691us; 731us; 735us; 737us; 739us; 787us; 794us; 788us; 791us; 832us; 869us; 863us; 869us; 864us; 866us; 880us; 1015us; 907us; 909us; 960us; 962us; 964us; 966us; 969us; 973us; 970us; 972us; 982us; 991us; 983us; 990us; 985us; 987us; 993us; 1767us; 994us; 1767us; 995us; 1767us; 996us; 1767us; 1002us; 1009us; 1003us; 1008us; 1004us; 1006us; 1028us; 691us; 1039us; 691us; 1069us; 1173us; 1138us; 1140us; 1162us; 1164us; 1168us; 1170us; 1174us; 1767us; 1176us; 1767us; 1227us; 1247us; 1230us; 1247us; 1239us; 1244us; 1240us; 1242us; 1255us; 1263us; 1256us; 1258us; 1259us; 1261us; 1280us; 1282us; 1286us; 1292us; 1287us; 1292us; 1288us; 1290us; 1293us; 1298us; 1294us; 1296us; 1299us; 1312us; 1300us; 1312us; 1301us; 1312us; 1303us; 1761us; 1327us; 1332us; 1328us; 1330us; 1340us; 1342us; 1345us; 1767us; 1402us; 1767us; 1403us; 1767us; 1442us; 1448us; 1443us; 1445us; 1551us; 1596us; 1571us; 1574us; 1572us; 1574us; 1586us; 1767us; 1591us; 1602us; 1593us; 1767us; 1598us; 1600us; 1642us; 1767us; 105us; 65535us; 27us; 28us; 100us; 101us; 102us; 103us; 220us; 235us; 234us; 235us; 256us; 920us; 397us; 920us; 402us; 920us; 437us; 920us; 453us; 920us; 677us; 920us; 683us; 920us; 732us; 920us; 736us; 920us; 746us; 920us; 906us; 920us; 911us; 920us; 923us; 920us; 925us; 920us; 928us; 920us; 931us; 920us; 947us; 920us; 950us; 920us; 953us; 920us; 959us; 920us; 963us; 920us; 967us; 920us; 969us; 970us; 974us; 975us; 976us; 977us; 978us; 914us; 980us; 914us; 982us; 983us; 984us; 920us; 995us; 920us; 1003us; 920us; 1010us; 920us; 1016us; 1017us; 1018us; 1019us; 1021us; 920us; 1024us; 920us; 1027us; 920us; 1030us; 920us; 1033us; 920us; 1036us; 920us; 1038us; 920us; 1043us; 920us; 1086us; 1045us; 1088us; 914us; 1091us; 1046us; 1092us; 1047us; 1093us; 1048us; 1094us; 1049us; 1095us; 1050us; 1096us; 1051us; 1097us; 1052us; 1098us; 1053us; 1099us; 1054us; 1100us; 1055us; 1101us; 1056us; 1102us; 1057us; 1103us; 1058us; 1104us; 1059us; 1105us; 1060us; 1106us; 1061us; 1107us; 1062us; 1108us; 1063us; 1109us; 1064us; 1110us; 1065us; 1132us; 920us; 1154us; 1066us; 1155us; 920us; 1159us; 1067us; 1161us; 920us; 1165us; 1068us; 1167us; 920us; 1171us; 1069us; 1174us; 1070us; 1176us; 1071us; 1239us; 922us; 1248us; 920us; 1255us; 921us; 1265us; 1072us; 1267us; 1073us; 1268us; 1074us; 1279us; 920us; 1286us; 920us; 1287us; 920us; 1293us; 922us; 1299us; 920us; 1300us; 920us; 1301us; 920us; 1317us; 920us; 1327us; 922us; 1340us; 1076us; 1341us; 1077us; 1343us; 920us; 1345us; 1075us; 1349us; 1078us; 1350us; 1079us; 1373us; 914us; 1378us; 914us; 1403us; 914us; 1437us; 920us; 1442us; 920us; 1us; 65535us; 1235us; 1236us; 2us; 65535us; 960us; 961us; 964us; 965us; 4us; 65535us; 1135us; 1136us; 1137us; 1138us; 1453us; 1454us; 1455us; 1456us; 6us; 65535us; 1135us; 1147us; 1137us; 1147us; 1142us; 1147us; 1149us; 1147us; 1453us; 1147us; 1455us; 1147us; 6us; 65535us; 1135us; 1141us; 1137us; 1141us; 1142us; 1143us; 1149us; 1150us; 1453us; 1141us; 1455us; 1141us; 1us; 65535us; 881us; 1146us; 1us; 65535us; 1147us; 1148us; 2us; 65535us; 970us; 971us; 1069us; 1172us; 2us; 65535us; 970us; 1157us; 1069us; 1157us; 1us; 65535us; 1157us; 1158us; 105us; 65535us; 27us; 1090us; 100us; 1090us; 102us; 1090us; 220us; 1090us; 234us; 1090us; 256us; 1090us; 397us; 1090us; 402us; 1090us; 437us; 1090us; 453us; 1090us; 677us; 1090us; 683us; 1090us; 732us; 1090us; 736us; 1090us; 746us; 1090us; 906us; 1090us; 911us; 1090us; 923us; 1090us; 925us; 1090us; 928us; 1090us; 931us; 1090us; 947us; 1090us; 950us; 1090us; 953us; 1090us; 959us; 1090us; 963us; 1090us; 967us; 1090us; 969us; 1090us; 974us; 1090us; 976us; 1090us; 978us; 1090us; 980us; 1090us; 982us; 1090us; 984us; 1090us; 995us; 1090us; 1003us; 1090us; 1010us; 1090us; 1016us; 1090us; 1018us; 1090us; 1021us; 1090us; 1024us; 1090us; 1027us; 1090us; 1030us; 1090us; 1033us; 1090us; 1036us; 1090us; 1038us; 1090us; 1043us; 1090us; 1086us; 1090us; 1088us; 1090us; 1091us; 1090us; 1092us; 1090us; 1093us; 1090us; 1094us; 1090us; 1095us; 1090us; 1096us; 1090us; 1097us; 1090us; 1098us; 1090us; 1099us; 1090us; 1100us; 1090us; 1101us; 1090us; 1102us; 1090us; 1103us; 1090us; 1104us; 1090us; 1105us; 1090us; 1106us; 1090us; 1107us; 1090us; 1108us; 1090us; 1109us; 1090us; 1110us; 1090us; 1132us; 1090us; 1154us; 1090us; 1155us; 1090us; 1159us; 1090us; 1161us; 1090us; 1165us; 1090us; 1167us; 1090us; 1171us; 1090us; 1174us; 1090us; 1176us; 1090us; 1239us; 1090us; 1248us; 1090us; 1255us; 1090us; 1265us; 1090us; 1267us; 1090us; 1268us; 1090us; 1279us; 1090us; 1286us; 1090us; 1287us; 1090us; 1293us; 1090us; 1299us; 1090us; 1300us; 1090us; 1301us; 1090us; 1317us; 1090us; 1327us; 1090us; 1340us; 1090us; 1341us; 1090us; 1343us; 1090us; 1345us; 1090us; 1349us; 1090us; 1350us; 1090us; 1373us; 1090us; 1378us; 1090us; 1403us; 1090us; 1437us; 1090us; 1442us; 1090us; 119us; 65535us; 27us; 1087us; 100us; 1087us; 102us; 1087us; 220us; 1087us; 234us; 1087us; 256us; 1087us; 397us; 1087us; 402us; 1087us; 437us; 1087us; 453us; 1087us; 677us; 1087us; 683us; 1087us; 732us; 1087us; 736us; 1087us; 746us; 1087us; 906us; 1087us; 911us; 1087us; 923us; 1087us; 925us; 1087us; 928us; 1087us; 931us; 1087us; 947us; 1087us; 950us; 1087us; 953us; 1087us; 959us; 1087us; 963us; 1087us; 967us; 1087us; 969us; 1087us; 974us; 1087us; 976us; 1087us; 978us; 1087us; 980us; 1087us; 982us; 1087us; 984us; 1087us; 995us; 1087us; 1003us; 1087us; 1010us; 1087us; 1016us; 1087us; 1018us; 1087us; 1021us; 1087us; 1024us; 1087us; 1027us; 1087us; 1030us; 1087us; 1033us; 1087us; 1036us; 1087us; 1038us; 1087us; 1043us; 1087us; 1086us; 1087us; 1088us; 1087us; 1091us; 1087us; 1092us; 1087us; 1093us; 1087us; 1094us; 1087us; 1095us; 1087us; 1096us; 1087us; 1097us; 1087us; 1098us; 1087us; 1099us; 1087us; 1100us; 1087us; 1101us; 1087us; 1102us; 1087us; 1103us; 1087us; 1104us; 1087us; 1105us; 1087us; 1106us; 1087us; 1107us; 1087us; 1108us; 1087us; 1109us; 1087us; 1110us; 1087us; 1132us; 1087us; 1154us; 1087us; 1155us; 1087us; 1159us; 1087us; 1161us; 1087us; 1165us; 1087us; 1167us; 1087us; 1171us; 1087us; 1174us; 1087us; 1176us; 1087us; 1178us; 1180us; 1179us; 1180us; 1181us; 1183us; 1182us; 1183us; 1184us; 1186us; 1185us; 1186us; 1187us; 1189us; 1188us; 1189us; 1190us; 1192us; 1191us; 1192us; 1193us; 1195us; 1194us; 1195us; 1206us; 1207us; 1208us; 1209us; 1239us; 1087us; 1248us; 1087us; 1255us; 1087us; 1265us; 1087us; 1267us; 1087us; 1268us; 1087us; 1279us; 1087us; 1286us; 1087us; 1287us; 1087us; 1293us; 1087us; 1299us; 1087us; 1300us; 1087us; 1301us; 1087us; 1317us; 1087us; 1327us; 1087us; 1340us; 1087us; 1341us; 1087us; 1343us; 1087us; 1345us; 1087us; 1349us; 1087us; 1350us; 1087us; 1373us; 1087us; 1378us; 1087us; 1403us; 1087us; 1437us; 1087us; 1442us; 1087us; 119us; 65535us; 27us; 1210us; 100us; 1210us; 102us; 1210us; 220us; 1210us; 234us; 1210us; 256us; 1210us; 397us; 1210us; 402us; 1210us; 437us; 1210us; 453us; 1210us; 677us; 1210us; 683us; 1210us; 732us; 1210us; 736us; 1210us; 746us; 1210us; 906us; 1210us; 911us; 1210us; 923us; 1210us; 925us; 1210us; 928us; 1210us; 931us; 1210us; 947us; 1210us; 950us; 1210us; 953us; 1210us; 959us; 1210us; 963us; 1210us; 967us; 1210us; 969us; 1210us; 974us; 1210us; 976us; 1210us; 978us; 1210us; 980us; 1210us; 982us; 1210us; 984us; 1210us; 995us; 1210us; 1003us; 1210us; 1010us; 1210us; 1016us; 1210us; 1018us; 1210us; 1021us; 1210us; 1024us; 1210us; 1027us; 1210us; 1030us; 1210us; 1033us; 1210us; 1036us; 1210us; 1038us; 1210us; 1043us; 1210us; 1086us; 1210us; 1088us; 1210us; 1091us; 1210us; 1092us; 1210us; 1093us; 1210us; 1094us; 1210us; 1095us; 1210us; 1096us; 1210us; 1097us; 1210us; 1098us; 1210us; 1099us; 1210us; 1100us; 1210us; 1101us; 1210us; 1102us; 1210us; 1103us; 1210us; 1104us; 1210us; 1105us; 1210us; 1106us; 1210us; 1107us; 1210us; 1108us; 1210us; 1109us; 1210us; 1110us; 1210us; 1132us; 1210us; 1154us; 1210us; 1155us; 1210us; 1159us; 1210us; 1161us; 1210us; 1165us; 1210us; 1167us; 1210us; 1171us; 1210us; 1174us; 1210us; 1176us; 1210us; 1178us; 1210us; 1179us; 1210us; 1181us; 1210us; 1182us; 1210us; 1184us; 1210us; 1185us; 1210us; 1187us; 1210us; 1188us; 1210us; 1190us; 1210us; 1191us; 1210us; 1193us; 1210us; 1194us; 1210us; 1206us; 1210us; 1208us; 1210us; 1239us; 1210us; 1248us; 1210us; 1255us; 1210us; 1265us; 1210us; 1267us; 1210us; 1268us; 1210us; 1279us; 1210us; 1286us; 1210us; 1287us; 1210us; 1293us; 1210us; 1299us; 1210us; 1300us; 1210us; 1301us; 1210us; 1317us; 1210us; 1327us; 1211us; 1340us; 1210us; 1341us; 1210us; 1343us; 1210us; 1345us; 1210us; 1349us; 1210us; 1350us; 1210us; 1373us; 1210us; 1378us; 1210us; 1403us; 1210us; 1437us; 1210us; 1442us; 1210us; 3us; 65535us; 1210us; 1212us; 1211us; 1212us; 1354us; 1357us; 128us; 65535us; 27us; 1213us; 100us; 1213us; 102us; 1213us; 220us; 1213us; 234us; 1213us; 256us; 1213us; 397us; 1213us; 402us; 1213us; 437us; 1213us; 453us; 1213us; 677us; 1213us; 683us; 1213us; 732us; 1213us; 736us; 1213us; 746us; 1213us; 906us; 1213us; 911us; 1213us; 923us; 1213us; 925us; 1213us; 928us; 1213us; 931us; 1213us; 947us; 1213us; 950us; 1213us; 953us; 1213us; 959us; 1213us; 963us; 1213us; 967us; 1213us; 969us; 1213us; 974us; 1213us; 976us; 1213us; 978us; 1213us; 980us; 1213us; 982us; 1213us; 984us; 1213us; 995us; 1213us; 1003us; 1213us; 1010us; 1213us; 1016us; 1213us; 1018us; 1213us; 1021us; 1213us; 1024us; 1213us; 1027us; 1213us; 1030us; 1213us; 1033us; 1213us; 1036us; 1213us; 1038us; 1213us; 1043us; 1213us; 1086us; 1213us; 1088us; 1213us; 1091us; 1213us; 1092us; 1213us; 1093us; 1213us; 1094us; 1213us; 1095us; 1213us; 1096us; 1213us; 1097us; 1213us; 1098us; 1213us; 1099us; 1213us; 1100us; 1213us; 1101us; 1213us; 1102us; 1213us; 1103us; 1213us; 1104us; 1213us; 1105us; 1213us; 1106us; 1213us; 1107us; 1213us; 1108us; 1213us; 1109us; 1213us; 1110us; 1213us; 1132us; 1213us; 1154us; 1213us; 1155us; 1213us; 1159us; 1213us; 1161us; 1213us; 1165us; 1213us; 1167us; 1213us; 1171us; 1213us; 1174us; 1213us; 1176us; 1213us; 1178us; 1213us; 1179us; 1213us; 1181us; 1213us; 1182us; 1213us; 1184us; 1213us; 1185us; 1213us; 1187us; 1213us; 1188us; 1213us; 1190us; 1213us; 1191us; 1213us; 1193us; 1213us; 1194us; 1213us; 1206us; 1213us; 1208us; 1213us; 1210us; 1216us; 1211us; 1216us; 1214us; 1215us; 1221us; 1217us; 1222us; 1218us; 1225us; 1219us; 1226us; 1219us; 1239us; 1213us; 1248us; 1213us; 1255us; 1213us; 1265us; 1213us; 1267us; 1213us; 1268us; 1213us; 1279us; 1213us; 1286us; 1213us; 1287us; 1213us; 1293us; 1213us; 1299us; 1213us; 1300us; 1213us; 1301us; 1213us; 1317us; 1213us; 1327us; 1213us; 1340us; 1213us; 1341us; 1213us; 1343us; 1213us; 1345us; 1213us; 1349us; 1213us; 1350us; 1213us; 1354us; 1216us; 1373us; 1213us; 1378us; 1213us; 1403us; 1213us; 1437us; 1213us; 1442us; 1213us; 1577us; 1220us; 2us; 65535us; 1227us; 1228us; 1230us; 1231us; 2us; 65535us; 1255us; 1259us; 1265us; 1266us; 2us; 65535us; 1255us; 1264us; 1265us; 1264us; 135us; 65535us; 27us; 1245us; 100us; 1245us; 102us; 1245us; 220us; 1245us; 234us; 1245us; 256us; 1245us; 306us; 1358us; 310us; 1358us; 315us; 1358us; 397us; 1245us; 402us; 1245us; 437us; 1245us; 453us; 1245us; 478us; 479us; 677us; 1245us; 683us; 1245us; 732us; 1245us; 736us; 1245us; 746us; 1245us; 906us; 1245us; 911us; 1245us; 923us; 1245us; 925us; 1245us; 928us; 1245us; 931us; 1245us; 947us; 1245us; 950us; 1245us; 953us; 1245us; 959us; 1245us; 963us; 1245us; 967us; 1245us; 969us; 1245us; 974us; 1245us; 976us; 1245us; 978us; 1245us; 980us; 1245us; 982us; 1245us; 984us; 1245us; 995us; 1245us; 1003us; 1245us; 1010us; 1245us; 1016us; 1245us; 1018us; 1245us; 1021us; 1245us; 1024us; 1245us; 1027us; 1245us; 1030us; 1245us; 1033us; 1245us; 1036us; 1245us; 1038us; 1245us; 1043us; 1245us; 1086us; 1245us; 1088us; 1245us; 1091us; 1245us; 1092us; 1245us; 1093us; 1245us; 1094us; 1245us; 1095us; 1245us; 1096us; 1245us; 1097us; 1245us; 1098us; 1245us; 1099us; 1245us; 1100us; 1245us; 1101us; 1245us; 1102us; 1245us; 1103us; 1245us; 1104us; 1245us; 1105us; 1245us; 1106us; 1245us; 1107us; 1245us; 1108us; 1245us; 1109us; 1245us; 1110us; 1245us; 1132us; 1245us; 1154us; 1245us; 1155us; 1245us; 1159us; 1245us; 1161us; 1245us; 1165us; 1245us; 1167us; 1245us; 1171us; 1245us; 1174us; 1245us; 1176us; 1245us; 1178us; 1245us; 1179us; 1245us; 1181us; 1245us; 1182us; 1245us; 1184us; 1245us; 1185us; 1245us; 1187us; 1245us; 1188us; 1245us; 1190us; 1245us; 1191us; 1245us; 1193us; 1245us; 1194us; 1245us; 1200us; 1202us; 1201us; 1203us; 1206us; 1245us; 1208us; 1245us; 1210us; 1245us; 1211us; 1245us; 1214us; 1245us; 1221us; 1245us; 1222us; 1245us; 1225us; 1245us; 1226us; 1245us; 1239us; 1245us; 1248us; 1245us; 1255us; 1245us; 1265us; 1245us; 1267us; 1245us; 1268us; 1245us; 1279us; 1245us; 1286us; 1245us; 1287us; 1245us; 1293us; 1245us; 1299us; 1245us; 1300us; 1245us; 1301us; 1245us; 1317us; 1245us; 1327us; 1245us; 1340us; 1245us; 1341us; 1245us; 1343us; 1245us; 1345us; 1245us; 1349us; 1245us; 1350us; 1245us; 1354us; 1245us; 1369us; 1358us; 1373us; 1245us; 1378us; 1245us; 1403us; 1245us; 1437us; 1245us; 1442us; 1245us; 1577us; 1245us; 135us; 65535us; 27us; 1278us; 100us; 1278us; 102us; 1278us; 220us; 1278us; 234us; 1278us; 256us; 1278us; 306us; 1278us; 310us; 1278us; 315us; 1278us; 397us; 1278us; 402us; 1278us; 437us; 1278us; 453us; 1278us; 478us; 1278us; 677us; 1278us; 683us; 1278us; 732us; 1278us; 736us; 1278us; 746us; 1278us; 906us; 1278us; 911us; 1278us; 923us; 1278us; 925us; 1278us; 928us; 1278us; 931us; 1278us; 947us; 1278us; 950us; 1278us; 953us; 1278us; 959us; 1278us; 963us; 1278us; 967us; 1278us; 969us; 1278us; 974us; 1278us; 976us; 1278us; 978us; 1278us; 980us; 1278us; 982us; 1278us; 984us; 1278us; 995us; 1278us; 1003us; 1278us; 1010us; 1278us; 1016us; 1278us; 1018us; 1278us; 1021us; 1278us; 1024us; 1278us; 1027us; 1278us; 1030us; 1278us; 1033us; 1278us; 1036us; 1278us; 1038us; 1278us; 1043us; 1278us; 1086us; 1278us; 1088us; 1278us; 1091us; 1278us; 1092us; 1278us; 1093us; 1278us; 1094us; 1278us; 1095us; 1278us; 1096us; 1278us; 1097us; 1278us; 1098us; 1278us; 1099us; 1278us; 1100us; 1278us; 1101us; 1278us; 1102us; 1278us; 1103us; 1278us; 1104us; 1278us; 1105us; 1278us; 1106us; 1278us; 1107us; 1278us; 1108us; 1278us; 1109us; 1278us; 1110us; 1278us; 1132us; 1278us; 1154us; 1278us; 1155us; 1278us; 1159us; 1278us; 1161us; 1278us; 1165us; 1278us; 1167us; 1278us; 1171us; 1278us; 1174us; 1278us; 1176us; 1278us; 1178us; 1278us; 1179us; 1278us; 1181us; 1278us; 1182us; 1278us; 1184us; 1278us; 1185us; 1278us; 1187us; 1278us; 1188us; 1278us; 1190us; 1278us; 1191us; 1278us; 1193us; 1278us; 1194us; 1278us; 1200us; 1278us; 1201us; 1278us; 1206us; 1278us; 1208us; 1278us; 1210us; 1278us; 1211us; 1278us; 1214us; 1278us; 1221us; 1278us; 1222us; 1278us; 1225us; 1278us; 1226us; 1278us; 1239us; 1278us; 1248us; 1278us; 1255us; 1278us; 1265us; 1278us; 1267us; 1278us; 1268us; 1278us; 1279us; 1278us; 1286us; 1278us; 1287us; 1278us; 1293us; 1278us; 1299us; 1278us; 1300us; 1278us; 1301us; 1278us; 1317us; 1278us; 1327us; 1278us; 1340us; 1278us; 1341us; 1278us; 1343us; 1278us; 1345us; 1278us; 1349us; 1278us; 1350us; 1278us; 1354us; 1278us; 1369us; 1278us; 1373us; 1278us; 1378us; 1278us; 1403us; 1278us; 1437us; 1278us; 1442us; 1278us; 1577us; 1278us; 176us; 65535us; 27us; 1276us; 100us; 1276us; 102us; 1276us; 220us; 1276us; 234us; 1276us; 256us; 1276us; 306us; 1276us; 310us; 1276us; 315us; 1276us; 394us; 842us; 397us; 1276us; 399us; 842us; 402us; 1276us; 434us; 842us; 437us; 1276us; 453us; 1276us; 478us; 1276us; 677us; 1276us; 683us; 1276us; 729us; 842us; 732us; 1276us; 736us; 1276us; 746us; 1276us; 805us; 842us; 806us; 842us; 810us; 842us; 811us; 842us; 812us; 842us; 813us; 842us; 820us; 842us; 823us; 842us; 825us; 842us; 827us; 842us; 832us; 842us; 836us; 842us; 838us; 842us; 840us; 842us; 848us; 842us; 851us; 842us; 863us; 842us; 884us; 842us; 889us; 842us; 890us; 842us; 892us; 842us; 893us; 842us; 894us; 842us; 895us; 842us; 902us; 842us; 904us; 842us; 906us; 1276us; 911us; 1276us; 923us; 1276us; 925us; 1276us; 928us; 1276us; 931us; 1276us; 947us; 1276us; 950us; 1276us; 953us; 1276us; 959us; 1276us; 963us; 1276us; 967us; 1276us; 969us; 1276us; 974us; 1276us; 976us; 1276us; 978us; 1276us; 980us; 1276us; 982us; 1276us; 984us; 1276us; 993us; 842us; 995us; 1276us; 1003us; 1276us; 1010us; 1276us; 1016us; 1276us; 1018us; 1276us; 1020us; 842us; 1021us; 1276us; 1024us; 1276us; 1026us; 842us; 1027us; 1276us; 1030us; 1276us; 1033us; 1276us; 1036us; 1276us; 1038us; 1276us; 1043us; 1276us; 1086us; 1276us; 1088us; 1276us; 1091us; 1276us; 1092us; 1276us; 1093us; 1276us; 1094us; 1276us; 1095us; 1276us; 1096us; 1276us; 1097us; 1276us; 1098us; 1276us; 1099us; 1276us; 1100us; 1276us; 1101us; 1276us; 1102us; 1276us; 1103us; 1276us; 1104us; 1276us; 1105us; 1276us; 1106us; 1276us; 1107us; 1276us; 1108us; 1276us; 1109us; 1276us; 1110us; 1276us; 1132us; 1276us; 1135us; 842us; 1137us; 842us; 1142us; 842us; 1149us; 842us; 1154us; 1276us; 1155us; 1276us; 1159us; 1276us; 1161us; 1276us; 1165us; 1276us; 1167us; 1276us; 1171us; 1276us; 1174us; 1276us; 1176us; 1276us; 1178us; 1276us; 1179us; 1276us; 1181us; 1276us; 1182us; 1276us; 1184us; 1276us; 1185us; 1276us; 1187us; 1276us; 1188us; 1276us; 1190us; 1276us; 1191us; 1276us; 1193us; 1276us; 1194us; 1276us; 1200us; 1276us; 1201us; 1276us; 1206us; 1276us; 1208us; 1276us; 1210us; 1276us; 1211us; 1276us; 1214us; 1276us; 1221us; 1276us; 1222us; 1276us; 1225us; 1276us; 1226us; 1276us; 1239us; 1276us; 1248us; 1276us; 1255us; 1276us; 1265us; 1276us; 1267us; 1276us; 1268us; 1276us; 1279us; 1276us; 1286us; 1276us; 1287us; 1276us; 1293us; 1276us; 1299us; 1276us; 1300us; 1276us; 1301us; 1276us; 1317us; 1276us; 1327us; 1276us; 1340us; 1276us; 1341us; 1276us; 1343us; 1276us; 1345us; 1276us; 1349us; 1276us; 1350us; 1276us; 1354us; 1276us; 1369us; 1276us; 1373us; 1276us; 1378us; 1276us; 1403us; 1276us; 1435us; 842us; 1437us; 1276us; 1440us; 842us; 1442us; 1276us; 1453us; 842us; 1455us; 842us; 1577us; 1276us; 135us; 65535us; 27us; 1277us; 100us; 1277us; 102us; 1277us; 220us; 1277us; 234us; 1277us; 256us; 1277us; 306us; 1277us; 310us; 1277us; 315us; 1277us; 397us; 1277us; 402us; 1277us; 437us; 1277us; 453us; 1277us; 478us; 1277us; 677us; 1277us; 683us; 1277us; 732us; 1277us; 736us; 1277us; 746us; 1277us; 906us; 1277us; 911us; 1277us; 923us; 1277us; 925us; 1277us; 928us; 1277us; 931us; 1277us; 947us; 1277us; 950us; 1277us; 953us; 1277us; 959us; 1277us; 963us; 1277us; 967us; 1277us; 969us; 1277us; 974us; 1277us; 976us; 1277us; 978us; 1277us; 980us; 1277us; 982us; 1277us; 984us; 1277us; 995us; 1277us; 1003us; 1277us; 1010us; 1277us; 1016us; 1277us; 1018us; 1277us; 1021us; 1277us; 1024us; 1277us; 1027us; 1277us; 1030us; 1277us; 1033us; 1277us; 1036us; 1277us; 1038us; 1277us; 1043us; 1277us; 1086us; 1277us; 1088us; 1277us; 1091us; 1277us; 1092us; 1277us; 1093us; 1277us; 1094us; 1277us; 1095us; 1277us; 1096us; 1277us; 1097us; 1277us; 1098us; 1277us; 1099us; 1277us; 1100us; 1277us; 1101us; 1277us; 1102us; 1277us; 1103us; 1277us; 1104us; 1277us; 1105us; 1277us; 1106us; 1277us; 1107us; 1277us; 1108us; 1277us; 1109us; 1277us; 1110us; 1277us; 1132us; 1277us; 1154us; 1277us; 1155us; 1277us; 1159us; 1277us; 1161us; 1277us; 1165us; 1277us; 1167us; 1277us; 1171us; 1277us; 1174us; 1277us; 1176us; 1277us; 1178us; 1277us; 1179us; 1277us; 1181us; 1277us; 1182us; 1277us; 1184us; 1277us; 1185us; 1277us; 1187us; 1277us; 1188us; 1277us; 1190us; 1277us; 1191us; 1277us; 1193us; 1277us; 1194us; 1277us; 1200us; 1277us; 1201us; 1277us; 1206us; 1277us; 1208us; 1277us; 1210us; 1277us; 1211us; 1277us; 1214us; 1277us; 1221us; 1277us; 1222us; 1277us; 1225us; 1277us; 1226us; 1277us; 1239us; 1277us; 1248us; 1277us; 1255us; 1277us; 1265us; 1277us; 1267us; 1277us; 1268us; 1277us; 1279us; 1277us; 1286us; 1277us; 1287us; 1277us; 1293us; 1277us; 1299us; 1277us; 1300us; 1277us; 1301us; 1277us; 1317us; 1277us; 1327us; 1277us; 1340us; 1277us; 1341us; 1277us; 1343us; 1277us; 1345us; 1277us; 1349us; 1277us; 1350us; 1277us; 1354us; 1277us; 1369us; 1277us; 1373us; 1277us; 1378us; 1277us; 1403us; 1277us; 1437us; 1277us; 1442us; 1277us; 1577us; 1277us; 135us; 65535us; 27us; 1271us; 100us; 1271us; 102us; 1271us; 220us; 1271us; 234us; 1271us; 256us; 1271us; 306us; 1271us; 310us; 1271us; 315us; 1271us; 397us; 1271us; 402us; 1271us; 437us; 1271us; 453us; 1271us; 478us; 1271us; 677us; 1271us; 683us; 1271us; 732us; 1271us; 736us; 1271us; 746us; 1271us; 906us; 1271us; 911us; 1271us; 923us; 1271us; 925us; 1271us; 928us; 1271us; 931us; 1271us; 947us; 1271us; 950us; 1271us; 953us; 1271us; 959us; 1271us; 963us; 1271us; 967us; 1271us; 969us; 1271us; 974us; 1271us; 976us; 1271us; 978us; 1271us; 980us; 1271us; 982us; 1271us; 984us; 1271us; 995us; 1271us; 1003us; 1271us; 1010us; 1271us; 1016us; 1271us; 1018us; 1271us; 1021us; 1271us; 1024us; 1271us; 1027us; 1271us; 1030us; 1271us; 1033us; 1271us; 1036us; 1271us; 1038us; 1271us; 1043us; 1271us; 1086us; 1271us; 1088us; 1271us; 1091us; 1271us; 1092us; 1271us; 1093us; 1271us; 1094us; 1271us; 1095us; 1271us; 1096us; 1271us; 1097us; 1271us; 1098us; 1271us; 1099us; 1271us; 1100us; 1271us; 1101us; 1271us; 1102us; 1271us; 1103us; 1271us; 1104us; 1271us; 1105us; 1271us; 1106us; 1271us; 1107us; 1271us; 1108us; 1271us; 1109us; 1271us; 1110us; 1271us; 1132us; 1271us; 1154us; 1271us; 1155us; 1271us; 1159us; 1271us; 1161us; 1271us; 1165us; 1271us; 1167us; 1271us; 1171us; 1271us; 1174us; 1271us; 1176us; 1271us; 1178us; 1271us; 1179us; 1271us; 1181us; 1271us; 1182us; 1271us; 1184us; 1271us; 1185us; 1271us; 1187us; 1271us; 1188us; 1271us; 1190us; 1271us; 1191us; 1271us; 1193us; 1271us; 1194us; 1271us; 1200us; 1271us; 1201us; 1271us; 1206us; 1271us; 1208us; 1271us; 1210us; 1271us; 1211us; 1271us; 1214us; 1271us; 1221us; 1271us; 1222us; 1271us; 1225us; 1271us; 1226us; 1271us; 1239us; 1271us; 1248us; 1271us; 1255us; 1271us; 1265us; 1271us; 1267us; 1271us; 1268us; 1271us; 1279us; 1271us; 1286us; 1271us; 1287us; 1271us; 1293us; 1271us; 1299us; 1271us; 1300us; 1271us; 1301us; 1271us; 1317us; 1271us; 1327us; 1271us; 1340us; 1271us; 1341us; 1271us; 1343us; 1271us; 1345us; 1271us; 1349us; 1271us; 1350us; 1271us; 1354us; 1271us; 1369us; 1271us; 1373us; 1271us; 1378us; 1271us; 1403us; 1271us; 1437us; 1271us; 1442us; 1271us; 1577us; 1271us; 3us; 65535us; 1299us; 1303us; 1300us; 1303us; 1301us; 1303us; 3us; 65535us; 1299us; 1313us; 1300us; 1313us; 1301us; 1313us; 1us; 65535us; 1300us; 1323us; 135us; 65535us; 27us; 1272us; 100us; 1272us; 102us; 1272us; 220us; 1272us; 234us; 1272us; 256us; 1272us; 306us; 1272us; 310us; 1272us; 315us; 1272us; 397us; 1272us; 402us; 1272us; 437us; 1272us; 453us; 1272us; 478us; 1272us; 677us; 1272us; 683us; 1272us; 732us; 1272us; 736us; 1272us; 746us; 1272us; 906us; 1272us; 911us; 1272us; 923us; 1272us; 925us; 1272us; 928us; 1272us; 931us; 1272us; 947us; 1272us; 950us; 1272us; 953us; 1272us; 959us; 1272us; 963us; 1272us; 967us; 1272us; 969us; 1272us; 974us; 1272us; 976us; 1272us; 978us; 1272us; 980us; 1272us; 982us; 1272us; 984us; 1272us; 995us; 1272us; 1003us; 1272us; 1010us; 1272us; 1016us; 1272us; 1018us; 1272us; 1021us; 1272us; 1024us; 1272us; 1027us; 1272us; 1030us; 1272us; 1033us; 1272us; 1036us; 1272us; 1038us; 1272us; 1043us; 1272us; 1086us; 1272us; 1088us; 1272us; 1091us; 1272us; 1092us; 1272us; 1093us; 1272us; 1094us; 1272us; 1095us; 1272us; 1096us; 1272us; 1097us; 1272us; 1098us; 1272us; 1099us; 1272us; 1100us; 1272us; 1101us; 1272us; 1102us; 1272us; 1103us; 1272us; 1104us; 1272us; 1105us; 1272us; 1106us; 1272us; 1107us; 1272us; 1108us; 1272us; 1109us; 1272us; 1110us; 1272us; 1132us; 1272us; 1154us; 1272us; 1155us; 1272us; 1159us; 1272us; 1161us; 1272us; 1165us; 1272us; 1167us; 1272us; 1171us; 1272us; 1174us; 1272us; 1176us; 1272us; 1178us; 1272us; 1179us; 1272us; 1181us; 1272us; 1182us; 1272us; 1184us; 1272us; 1185us; 1272us; 1187us; 1272us; 1188us; 1272us; 1190us; 1272us; 1191us; 1272us; 1193us; 1272us; 1194us; 1272us; 1200us; 1272us; 1201us; 1272us; 1206us; 1272us; 1208us; 1272us; 1210us; 1272us; 1211us; 1272us; 1214us; 1272us; 1221us; 1272us; 1222us; 1272us; 1225us; 1272us; 1226us; 1272us; 1239us; 1272us; 1248us; 1272us; 1255us; 1272us; 1265us; 1272us; 1267us; 1272us; 1268us; 1272us; 1279us; 1272us; 1286us; 1272us; 1287us; 1272us; 1293us; 1272us; 1299us; 1272us; 1300us; 1272us; 1301us; 1272us; 1317us; 1272us; 1327us; 1272us; 1340us; 1272us; 1341us; 1272us; 1343us; 1272us; 1345us; 1272us; 1349us; 1272us; 1350us; 1272us; 1354us; 1272us; 1369us; 1272us; 1373us; 1272us; 1378us; 1272us; 1403us; 1272us; 1437us; 1272us; 1442us; 1272us; 1577us; 1272us; 1us; 65535us; 1327us; 1328us; 2us; 65535us; 1239us; 1240us; 1293us; 1294us; 3us; 65535us; 1239us; 1337us; 1293us; 1337us; 1327us; 1336us; 4us; 65535us; 1239us; 1339us; 1293us; 1339us; 1327us; 1339us; 1345us; 1346us; 1us; 65535us; 1041us; 1042us; 1us; 65535us; 993us; 994us; 1us; 65535us; 993us; 1002us; 3us; 65535us; 1299us; 1320us; 1300us; 1320us; 1301us; 1320us; 1us; 65535us; 1353us; 1354us; 4us; 65535us; 306us; 307us; 310us; 311us; 315us; 316us; 1369us; 1370us; 1us; 65535us; 1352us; 1353us; 1us; 65535us; 1354us; 1355us; 1us; 65535us; 1327us; 1334us; 6us; 65535us; 1371us; 1372us; 1375us; 1376us; 1380us; 1381us; 1384us; 1385us; 1386us; 1387us; 1390us; 1391us; 6us; 65535us; 1371us; 1394us; 1375us; 1394us; 1380us; 1394us; 1384us; 1394us; 1386us; 1393us; 1390us; 1394us; 3us; 65535us; 1382us; 1402us; 1386us; 1402us; 1394us; 1402us; 5us; 65535us; 1370us; 1371us; 1374us; 1375us; 1379us; 1380us; 1383us; 1384us; 1389us; 1390us; 3us; 65535us; 1382us; 1383us; 1386us; 1389us; 1394us; 1401us; 1us; 65535us; 1327us; 1335us; 1us; 65535us; 1327us; 1407us; 1us; 65535us; 1429us; 1430us; 2us; 65535us; 1407us; 1408us; 1429us; 1414us; 1us; 65535us; 1411us; 1412us; 4us; 65535us; 1409us; 1410us; 1422us; 1423us; 1424us; 1425us; 1426us; 1427us; 5us; 65535us; 1409us; 1424us; 1411us; 1422us; 1422us; 1424us; 1424us; 1424us; 1426us; 1424us; 1us; 65535us; 1078us; 1350us; 105us; 65535us; 27us; 958us; 100us; 958us; 102us; 958us; 220us; 958us; 234us; 958us; 256us; 958us; 397us; 958us; 402us; 958us; 437us; 958us; 453us; 958us; 677us; 958us; 683us; 958us; 732us; 958us; 736us; 958us; 746us; 958us; 906us; 958us; 911us; 958us; 923us; 958us; 925us; 958us; 928us; 958us; 931us; 958us; 947us; 958us; 950us; 958us; 953us; 958us; 959us; 958us; 963us; 958us; 967us; 958us; 969us; 958us; 974us; 958us; 976us; 958us; 978us; 958us; 980us; 958us; 982us; 958us; 984us; 958us; 995us; 958us; 1003us; 958us; 1010us; 958us; 1016us; 958us; 1018us; 958us; 1021us; 958us; 1024us; 958us; 1027us; 958us; 1030us; 958us; 1033us; 958us; 1036us; 958us; 1038us; 958us; 1043us; 958us; 1086us; 958us; 1088us; 958us; 1091us; 958us; 1092us; 958us; 1093us; 958us; 1094us; 958us; 1095us; 958us; 1096us; 958us; 1097us; 958us; 1098us; 958us; 1099us; 958us; 1100us; 958us; 1101us; 958us; 1102us; 958us; 1103us; 958us; 1104us; 958us; 1105us; 958us; 1106us; 958us; 1107us; 958us; 1108us; 958us; 1109us; 958us; 1110us; 958us; 1132us; 958us; 1154us; 958us; 1155us; 958us; 1159us; 958us; 1161us; 958us; 1165us; 958us; 1167us; 958us; 1171us; 958us; 1174us; 958us; 1176us; 958us; 1239us; 958us; 1248us; 958us; 1255us; 958us; 1265us; 958us; 1267us; 958us; 1268us; 958us; 1279us; 958us; 1286us; 958us; 1287us; 958us; 1293us; 958us; 1299us; 958us; 1300us; 958us; 1301us; 958us; 1317us; 958us; 1327us; 958us; 1340us; 958us; 1341us; 958us; 1343us; 958us; 1345us; 958us; 1349us; 958us; 1350us; 958us; 1373us; 958us; 1378us; 958us; 1403us; 958us; 1437us; 958us; 1442us; 958us; 105us; 65535us; 27us; 957us; 100us; 957us; 102us; 957us; 220us; 957us; 234us; 957us; 256us; 957us; 397us; 957us; 402us; 957us; 437us; 957us; 453us; 957us; 677us; 957us; 683us; 957us; 732us; 957us; 736us; 957us; 746us; 957us; 906us; 957us; 911us; 957us; 923us; 957us; 925us; 957us; 928us; 957us; 931us; 957us; 947us; 957us; 950us; 957us; 953us; 957us; 959us; 957us; 963us; 957us; 967us; 957us; 969us; 957us; 974us; 957us; 976us; 957us; 978us; 957us; 980us; 957us; 982us; 957us; 984us; 957us; 995us; 957us; 1003us; 957us; 1010us; 957us; 1016us; 957us; 1018us; 957us; 1021us; 957us; 1024us; 957us; 1027us; 957us; 1030us; 957us; 1033us; 957us; 1036us; 957us; 1038us; 957us; 1043us; 957us; 1086us; 957us; 1088us; 957us; 1091us; 957us; 1092us; 957us; 1093us; 957us; 1094us; 957us; 1095us; 957us; 1096us; 957us; 1097us; 957us; 1098us; 957us; 1099us; 957us; 1100us; 957us; 1101us; 957us; 1102us; 957us; 1103us; 957us; 1104us; 957us; 1105us; 957us; 1106us; 957us; 1107us; 957us; 1108us; 957us; 1109us; 957us; 1110us; 957us; 1132us; 957us; 1154us; 957us; 1155us; 957us; 1159us; 957us; 1161us; 957us; 1165us; 957us; 1167us; 957us; 1171us; 957us; 1174us; 957us; 1176us; 957us; 1239us; 957us; 1248us; 957us; 1255us; 957us; 1265us; 957us; 1267us; 957us; 1268us; 957us; 1279us; 957us; 1286us; 957us; 1287us; 957us; 1293us; 957us; 1299us; 957us; 1300us; 957us; 1301us; 957us; 1317us; 957us; 1327us; 957us; 1340us; 957us; 1341us; 957us; 1343us; 957us; 1345us; 957us; 1349us; 957us; 1350us; 957us; 1373us; 957us; 1378us; 957us; 1403us; 957us; 1437us; 957us; 1442us; 957us; 3us; 65535us; 782us; 783us; 887us; 888us; 918us; 919us; 5us; 65535us; 97us; 98us; 171us; 172us; 187us; 188us; 423us; 424us; 1462us; 1463us; 3us; 65535us; 395us; 396us; 400us; 401us; 730us; 731us; 9us; 65535us; 97us; 1460us; 136us; 137us; 171us; 1460us; 187us; 1460us; 360us; 361us; 423us; 1460us; 617us; 618us; 1462us; 1460us; 1465us; 1466us; 9us; 65535us; 97us; 1464us; 136us; 1464us; 171us; 1464us; 187us; 1464us; 360us; 1464us; 423us; 1464us; 617us; 1464us; 1462us; 1464us; 1465us; 1464us; 2us; 65535us; 1468us; 1469us; 1471us; 1472us; 11us; 65535us; 97us; 1467us; 136us; 1467us; 171us; 1467us; 187us; 1467us; 360us; 1467us; 423us; 1467us; 617us; 1467us; 1462us; 1467us; 1465us; 1467us; 1468us; 1470us; 1471us; 1470us; 32us; 65535us; 165us; 516us; 410us; 516us; 446us; 447us; 456us; 457us; 511us; 516us; 519us; 1572us; 574us; 575us; 577us; 578us; 656us; 657us; 752us; 753us; 782us; 1458us; 887us; 1458us; 918us; 1458us; 1080us; 1081us; 1082us; 1083us; 1084us; 1085us; 1360us; 1361us; 1363us; 1364us; 1365us; 1572us; 1489us; 1490us; 1520us; 1572us; 1521us; 1572us; 1529us; 1531us; 1530us; 1532us; 1535us; 1537us; 1536us; 1538us; 1548us; 1603us; 1552us; 1603us; 1570us; 1571us; 1591us; 1603us; 1593us; 1603us; 1604us; 1605us; 32us; 65535us; 165us; 1488us; 410us; 1488us; 446us; 1488us; 456us; 1488us; 511us; 1488us; 519us; 1488us; 574us; 1488us; 577us; 1488us; 656us; 1488us; 752us; 1488us; 782us; 1488us; 887us; 1488us; 918us; 1488us; 1080us; 1488us; 1082us; 1488us; 1084us; 1488us; 1360us; 1488us; 1363us; 1488us; 1365us; 1488us; 1489us; 1488us; 1520us; 1488us; 1521us; 1488us; 1529us; 1488us; 1530us; 1488us; 1535us; 1488us; 1536us; 1488us; 1548us; 1488us; 1552us; 1488us; 1570us; 1488us; 1591us; 1488us; 1593us; 1488us; 1604us; 1488us; 5us; 65535us; 1492us; 1493us; 1494us; 1495us; 1496us; 1497us; 1499us; 1500us; 1501us; 1502us; 0us; 65535us; 86us; 65535us; 97us; 1508us; 136us; 1508us; 165us; 1508us; 171us; 1508us; 175us; 1508us; 176us; 1507us; 177us; 1508us; 178us; 1507us; 187us; 1508us; 360us; 1508us; 410us; 1508us; 416us; 1508us; 417us; 1507us; 423us; 1508us; 446us; 1508us; 456us; 1508us; 475us; 1508us; 511us; 1508us; 519us; 1508us; 528us; 1508us; 574us; 1508us; 577us; 1508us; 614us; 1508us; 617us; 1508us; 636us; 1508us; 639us; 1508us; 642us; 1508us; 643us; 1507us; 644us; 1507us; 656us; 1508us; 667us; 1508us; 752us; 1508us; 782us; 1508us; 829us; 1508us; 887us; 1508us; 918us; 1508us; 1080us; 1508us; 1082us; 1508us; 1084us; 1508us; 1196us; 1508us; 1197us; 1508us; 1360us; 1508us; 1363us; 1508us; 1365us; 1508us; 1367us; 1508us; 1428us; 1508us; 1429us; 1507us; 1462us; 1508us; 1465us; 1508us; 1468us; 1508us; 1471us; 1508us; 1473us; 1508us; 1474us; 1507us; 1475us; 1508us; 1476us; 1507us; 1479us; 1508us; 1480us; 1507us; 1481us; 1507us; 1482us; 1508us; 1483us; 1507us; 1486us; 1508us; 1487us; 1507us; 1489us; 1508us; 1491us; 1507us; 1492us; 1508us; 1494us; 1508us; 1496us; 1508us; 1498us; 1507us; 1499us; 1508us; 1501us; 1508us; 1511us; 1507us; 1520us; 1508us; 1521us; 1508us; 1524us; 1507us; 1525us; 1507us; 1529us; 1508us; 1530us; 1508us; 1535us; 1508us; 1536us; 1508us; 1548us; 1508us; 1552us; 1508us; 1566us; 1508us; 1570us; 1508us; 1591us; 1508us; 1593us; 1508us; 1604us; 1508us; 86us; 65535us; 97us; 1568us; 136us; 1568us; 165us; 1568us; 171us; 1568us; 175us; 1568us; 176us; 1518us; 177us; 1568us; 178us; 1518us; 187us; 1568us; 360us; 1568us; 410us; 1568us; 416us; 1568us; 417us; 1518us; 423us; 1568us; 446us; 1568us; 456us; 1568us; 475us; 1568us; 511us; 1568us; 519us; 1568us; 528us; 1568us; 574us; 1568us; 577us; 1568us; 614us; 1568us; 617us; 1568us; 636us; 1568us; 639us; 1568us; 642us; 1568us; 643us; 1518us; 644us; 1518us; 656us; 1568us; 667us; 1568us; 752us; 1568us; 782us; 1568us; 829us; 1568us; 887us; 1568us; 918us; 1568us; 1080us; 1568us; 1082us; 1568us; 1084us; 1568us; 1196us; 1568us; 1197us; 1568us; 1360us; 1568us; 1363us; 1568us; 1365us; 1568us; 1367us; 1568us; 1428us; 1568us; 1429us; 1518us; 1462us; 1568us; 1465us; 1568us; 1468us; 1568us; 1471us; 1568us; 1473us; 1568us; 1474us; 1518us; 1475us; 1568us; 1476us; 1518us; 1479us; 1568us; 1480us; 1518us; 1481us; 1518us; 1482us; 1568us; 1483us; 1518us; 1486us; 1568us; 1487us; 1518us; 1489us; 1568us; 1491us; 1518us; 1492us; 1568us; 1494us; 1568us; 1496us; 1568us; 1498us; 1518us; 1499us; 1568us; 1501us; 1568us; 1511us; 1519us; 1520us; 1568us; 1521us; 1568us; 1524us; 1526us; 1525us; 1527us; 1529us; 1568us; 1530us; 1568us; 1535us; 1568us; 1536us; 1568us; 1548us; 1568us; 1552us; 1568us; 1566us; 1568us; 1570us; 1568us; 1591us; 1568us; 1593us; 1568us; 1604us; 1568us; 66us; 65535us; 97us; 1481us; 136us; 1481us; 165us; 1491us; 171us; 1481us; 175us; 176us; 177us; 178us; 187us; 1481us; 360us; 1481us; 410us; 1491us; 416us; 417us; 423us; 1481us; 446us; 1491us; 456us; 1491us; 475us; 1511us; 511us; 1491us; 519us; 1491us; 574us; 1491us; 577us; 1491us; 614us; 644us; 617us; 1481us; 636us; 644us; 639us; 644us; 642us; 643us; 656us; 1491us; 667us; 644us; 752us; 1491us; 782us; 1491us; 887us; 1491us; 918us; 1491us; 1080us; 1491us; 1082us; 1491us; 1084us; 1491us; 1196us; 1511us; 1197us; 1511us; 1360us; 1491us; 1363us; 1491us; 1365us; 1491us; 1367us; 1511us; 1428us; 1429us; 1462us; 1481us; 1465us; 1481us; 1468us; 1481us; 1471us; 1481us; 1473us; 1474us; 1475us; 1476us; 1479us; 1480us; 1482us; 1483us; 1486us; 1487us; 1489us; 1491us; 1492us; 1498us; 1494us; 1498us; 1496us; 1498us; 1499us; 1498us; 1501us; 1498us; 1520us; 1491us; 1521us; 1491us; 1529us; 1491us; 1530us; 1491us; 1535us; 1491us; 1536us; 1491us; 1548us; 1491us; 1552us; 1491us; 1570us; 1491us; 1591us; 1491us; 1593us; 1491us; 1604us; 1491us; 17us; 65535us; 176us; 1512us; 178us; 1512us; 417us; 1512us; 643us; 1512us; 644us; 1512us; 1429us; 1512us; 1474us; 1512us; 1476us; 1512us; 1480us; 1512us; 1481us; 1512us; 1483us; 1512us; 1487us; 1512us; 1491us; 1512us; 1498us; 1512us; 1511us; 1513us; 1514us; 1516us; 1515us; 1517us; 4us; 65535us; 519us; 1522us; 1365us; 1522us; 1520us; 1523us; 1521us; 1522us; 2us; 65535us; 1549us; 1550us; 1594us; 1551us; 66us; 65535us; 97us; 1528us; 136us; 1528us; 165us; 1528us; 171us; 1528us; 175us; 1528us; 177us; 1528us; 187us; 1528us; 360us; 1528us; 410us; 1528us; 416us; 1528us; 423us; 1528us; 446us; 1528us; 456us; 1528us; 475us; 1528us; 511us; 1528us; 519us; 1528us; 574us; 1528us; 577us; 1528us; 614us; 1528us; 617us; 1528us; 636us; 1528us; 639us; 1528us; 642us; 1528us; 656us; 1528us; 667us; 1528us; 752us; 1528us; 782us; 1528us; 887us; 1528us; 918us; 1528us; 1080us; 1528us; 1082us; 1528us; 1084us; 1528us; 1196us; 1528us; 1197us; 1528us; 1360us; 1528us; 1363us; 1528us; 1365us; 1528us; 1367us; 1528us; 1428us; 1528us; 1462us; 1528us; 1465us; 1528us; 1468us; 1528us; 1471us; 1528us; 1473us; 1528us; 1475us; 1528us; 1479us; 1528us; 1482us; 1528us; 1486us; 1528us; 1489us; 1528us; 1492us; 1528us; 1494us; 1528us; 1496us; 1528us; 1499us; 1528us; 1501us; 1528us; 1520us; 1528us; 1521us; 1528us; 1529us; 1528us; 1530us; 1528us; 1535us; 1528us; 1536us; 1528us; 1548us; 1528us; 1552us; 1528us; 1570us; 1528us; 1591us; 1528us; 1593us; 1528us; 1604us; 1528us; 4us; 65535us; 475us; 476us; 1196us; 1198us; 1197us; 1199us; 1367us; 1368us; 4us; 65535us; 475us; 1565us; 1196us; 1565us; 1197us; 1565us; 1367us; 1565us; 69us; 65535us; 97us; 1556us; 136us; 1556us; 165us; 1556us; 171us; 1556us; 175us; 1556us; 177us; 1556us; 187us; 1556us; 360us; 1556us; 410us; 1556us; 416us; 1556us; 423us; 1556us; 446us; 1556us; 456us; 1556us; 475us; 1555us; 511us; 1556us; 519us; 1556us; 528us; 1567us; 574us; 1556us; 577us; 1556us; 614us; 1556us; 617us; 1556us; 636us; 1556us; 639us; 1556us; 642us; 1556us; 656us; 1556us; 667us; 1556us; 752us; 1556us; 782us; 1556us; 829us; 830us; 887us; 1556us; 918us; 1556us; 1080us; 1556us; 1082us; 1556us; 1084us; 1556us; 1196us; 1555us; 1197us; 1555us; 1360us; 1556us; 1363us; 1556us; 1365us; 1556us; 1367us; 1555us; 1428us; 1556us; 1462us; 1556us; 1465us; 1556us; 1468us; 1556us; 1471us; 1556us; 1473us; 1556us; 1475us; 1556us; 1479us; 1556us; 1482us; 1556us; 1486us; 1556us; 1489us; 1556us; 1492us; 1556us; 1494us; 1556us; 1496us; 1556us; 1499us; 1556us; 1501us; 1556us; 1520us; 1556us; 1521us; 1556us; 1529us; 1556us; 1530us; 1556us; 1535us; 1556us; 1536us; 1556us; 1548us; 1556us; 1552us; 1556us; 1566us; 1567us; 1570us; 1556us; 1591us; 1556us; 1593us; 1556us; 1604us; 1556us; 4us; 65535us; 581us; 596us; 594us; 595us; 1508us; 1582us; 1584us; 1585us; 6us; 65535us; 581us; 1588us; 594us; 1588us; 1223us; 1224us; 1508us; 1588us; 1584us; 1588us; 1589us; 1590us; 8us; 65535us; 519us; 1547us; 1365us; 1547us; 1520us; 1547us; 1521us; 1547us; 1548us; 1549us; 1552us; 1553us; 1591us; 1598us; 1593us; 1606us; 2us; 65535us; 1591us; 1592us; 1593us; 1594us; 3us; 65535us; 1552us; 1554us; 1591us; 1607us; 1593us; 1607us; 1us; 65535us; 774us; 775us; 6us; 65535us; 1608us; 1618us; 1615us; 1618us; 1624us; 1618us; 1630us; 1618us; 1631us; 1618us; 1632us; 1618us; 6us; 65535us; 1608us; 1624us; 1615us; 1624us; 1624us; 1624us; 1630us; 1624us; 1631us; 1624us; 1632us; 1624us; 6us; 65535us; 1608us; 1626us; 1615us; 1626us; 1624us; 1625us; 1630us; 1626us; 1631us; 1626us; 1632us; 1626us; 5us; 65535us; 1608us; 1609us; 1615us; 1616us; 1630us; 1627us; 1631us; 1628us; 1632us; 1629us; 103us; 65535us; 97us; 1505us; 136us; 1505us; 165us; 1505us; 171us; 1505us; 175us; 1505us; 176us; 1504us; 177us; 1505us; 178us; 1504us; 187us; 1505us; 360us; 1505us; 410us; 1505us; 416us; 1505us; 417us; 1504us; 423us; 1505us; 446us; 1505us; 456us; 1505us; 475us; 1506us; 511us; 1505us; 519us; 1505us; 528us; 1504us; 536us; 541us; 551us; 552us; 565us; 576us; 569us; 576us; 572us; 573us; 574us; 1505us; 577us; 1505us; 587us; 599us; 597us; 598us; 614us; 1505us; 617us; 1505us; 636us; 1505us; 639us; 1505us; 642us; 1505us; 643us; 1504us; 644us; 1504us; 656us; 1505us; 667us; 1505us; 744us; 751us; 748us; 751us; 752us; 1505us; 782us; 1505us; 829us; 1504us; 887us; 1505us; 918us; 1505us; 1080us; 1505us; 1082us; 1505us; 1084us; 1505us; 1196us; 1506us; 1197us; 1506us; 1360us; 1505us; 1363us; 1505us; 1365us; 1505us; 1367us; 1506us; 1428us; 1505us; 1429us; 1504us; 1459us; 576us; 1461us; 576us; 1462us; 1505us; 1465us; 1505us; 1468us; 1505us; 1471us; 1505us; 1473us; 1505us; 1474us; 1504us; 1475us; 1505us; 1476us; 1504us; 1479us; 1505us; 1480us; 1504us; 1481us; 1504us; 1482us; 1505us; 1483us; 1504us; 1486us; 1505us; 1487us; 1504us; 1489us; 1505us; 1491us; 1504us; 1492us; 1505us; 1494us; 1505us; 1496us; 1505us; 1498us; 1504us; 1499us; 1505us; 1501us; 1505us; 1511us; 1504us; 1520us; 1505us; 1521us; 1505us; 1524us; 1504us; 1525us; 1504us; 1529us; 1505us; 1530us; 1505us; 1535us; 1505us; 1536us; 1505us; 1548us; 1505us; 1552us; 1505us; 1566us; 1504us; 1570us; 1505us; 1591us; 1505us; 1593us; 1505us; 1604us; 1505us; 1608us; 1614us; 1615us; 1614us; 1624us; 1614us; 1630us; 1614us; 1631us; 1614us; 1632us; 1614us; 107us; 65535us; 97us; 1635us; 136us; 1635us; 165us; 1635us; 171us; 1635us; 175us; 1635us; 176us; 1635us; 177us; 1635us; 178us; 1635us; 187us; 1635us; 360us; 1635us; 410us; 1635us; 416us; 1635us; 417us; 1635us; 423us; 1635us; 446us; 1635us; 456us; 1635us; 475us; 1635us; 511us; 1635us; 519us; 1635us; 528us; 1635us; 536us; 1635us; 551us; 1635us; 565us; 1635us; 569us; 1635us; 572us; 1635us; 574us; 1635us; 577us; 1635us; 587us; 1635us; 597us; 1635us; 614us; 1635us; 617us; 1635us; 636us; 1635us; 639us; 1635us; 642us; 1635us; 643us; 1635us; 644us; 1635us; 656us; 1635us; 667us; 1635us; 744us; 1635us; 748us; 1635us; 752us; 1635us; 782us; 1635us; 829us; 1635us; 887us; 1635us; 918us; 1635us; 1080us; 1635us; 1082us; 1635us; 1084us; 1635us; 1196us; 1635us; 1197us; 1635us; 1299us; 1321us; 1300us; 1322us; 1301us; 1321us; 1325us; 1326us; 1360us; 1635us; 1363us; 1635us; 1365us; 1635us; 1367us; 1635us; 1428us; 1635us; 1429us; 1635us; 1459us; 1635us; 1461us; 1635us; 1462us; 1635us; 1465us; 1635us; 1468us; 1635us; 1471us; 1635us; 1473us; 1635us; 1474us; 1635us; 1475us; 1635us; 1476us; 1635us; 1479us; 1635us; 1480us; 1635us; 1481us; 1635us; 1482us; 1635us; 1483us; 1635us; 1486us; 1635us; 1487us; 1635us; 1489us; 1635us; 1491us; 1635us; 1492us; 1635us; 1494us; 1635us; 1496us; 1635us; 1498us; 1635us; 1499us; 1635us; 1501us; 1635us; 1511us; 1635us; 1520us; 1635us; 1521us; 1635us; 1524us; 1635us; 1525us; 1635us; 1529us; 1635us; 1530us; 1635us; 1535us; 1635us; 1536us; 1635us; 1548us; 1635us; 1552us; 1635us; 1566us; 1635us; 1570us; 1635us; 1591us; 1635us; 1593us; 1635us; 1604us; 1635us; 1608us; 1635us; 1615us; 1635us; 1624us; 1635us; 1630us; 1635us; 1631us; 1635us; 1632us; 1635us; 320us; 65535us; 27us; 1688us; 46us; 1641us; 48us; 1641us; 83us; 1641us; 88us; 1641us; 94us; 1688us; 97us; 1641us; 100us; 1688us; 102us; 1688us; 105us; 1641us; 136us; 1641us; 165us; 630us; 168us; 1688us; 171us; 1641us; 175us; 1641us; 176us; 1641us; 177us; 1641us; 178us; 1641us; 187us; 1641us; 189us; 1688us; 191us; 1688us; 196us; 1688us; 220us; 1688us; 234us; 1688us; 256us; 1688us; 263us; 1641us; 292us; 321us; 303us; 321us; 308us; 1641us; 312us; 1641us; 360us; 1641us; 394us; 1690us; 397us; 1688us; 399us; 1690us; 402us; 1688us; 410us; 630us; 416us; 1641us; 417us; 1641us; 420us; 1688us; 423us; 1641us; 434us; 1690us; 437us; 1688us; 444us; 445us; 446us; 1641us; 450us; 451us; 453us; 1688us; 456us; 1641us; 459us; 1690us; 462us; 1690us; 475us; 1641us; 483us; 484us; 486us; 487us; 511us; 630us; 519us; 1641us; 528us; 1641us; 536us; 1641us; 538us; 1641us; 574us; 1641us; 577us; 1641us; 611us; 1688us; 614us; 641us; 617us; 1641us; 636us; 641us; 639us; 641us; 642us; 1641us; 643us; 1641us; 644us; 1641us; 654us; 655us; 656us; 1641us; 663us; 666us; 667us; 641us; 669us; 1641us; 671us; 1641us; 677us; 1688us; 683us; 1688us; 694us; 695us; 706us; 1641us; 707us; 708us; 719us; 1641us; 729us; 1690us; 732us; 1688us; 736us; 1688us; 746us; 1688us; 752us; 1641us; 778us; 779us; 782us; 1641us; 784us; 777us; 785us; 777us; 787us; 777us; 803us; 804us; 805us; 1690us; 806us; 1690us; 810us; 1690us; 811us; 1690us; 812us; 1690us; 813us; 1690us; 816us; 818us; 820us; 1690us; 823us; 1690us; 825us; 1690us; 827us; 1690us; 829us; 1641us; 832us; 819us; 836us; 1690us; 838us; 1690us; 840us; 1690us; 845us; 1641us; 848us; 1690us; 851us; 1690us; 855us; 857us; 856us; 857us; 863us; 1690us; 882us; 883us; 884us; 1690us; 887us; 1641us; 889us; 1690us; 890us; 1690us; 892us; 1690us; 893us; 1690us; 894us; 1690us; 895us; 1690us; 899us; 1641us; 902us; 1690us; 904us; 1690us; 906us; 1688us; 911us; 1688us; 918us; 1641us; 923us; 1688us; 925us; 1688us; 928us; 1688us; 931us; 1688us; 947us; 1688us; 950us; 1688us; 953us; 1688us; 959us; 1688us; 963us; 1688us; 967us; 1688us; 969us; 1688us; 974us; 1688us; 976us; 1688us; 978us; 1688us; 980us; 1688us; 982us; 1688us; 984us; 1688us; 993us; 1690us; 995us; 1688us; 1003us; 1688us; 1010us; 1688us; 1016us; 1688us; 1018us; 1688us; 1020us; 1690us; 1021us; 1688us; 1024us; 1688us; 1026us; 1690us; 1027us; 1688us; 1030us; 1688us; 1033us; 1688us; 1036us; 1688us; 1038us; 1688us; 1043us; 1688us; 1080us; 1641us; 1082us; 1641us; 1084us; 1641us; 1086us; 1688us; 1088us; 1688us; 1091us; 1688us; 1092us; 1688us; 1093us; 1688us; 1094us; 1688us; 1095us; 1688us; 1096us; 1688us; 1097us; 1688us; 1098us; 1688us; 1099us; 1688us; 1100us; 1688us; 1101us; 1688us; 1102us; 1688us; 1103us; 1688us; 1104us; 1688us; 1105us; 1688us; 1106us; 1688us; 1107us; 1688us; 1108us; 1688us; 1109us; 1688us; 1110us; 1688us; 1132us; 1688us; 1135us; 1690us; 1137us; 1690us; 1142us; 1690us; 1149us; 1690us; 1154us; 1688us; 1155us; 1688us; 1159us; 1688us; 1161us; 1688us; 1165us; 1688us; 1167us; 1688us; 1171us; 1688us; 1174us; 1688us; 1176us; 1688us; 1178us; 1688us; 1179us; 1688us; 1181us; 1688us; 1182us; 1688us; 1184us; 1688us; 1185us; 1688us; 1187us; 1688us; 1188us; 1688us; 1190us; 1688us; 1191us; 1688us; 1193us; 1688us; 1194us; 1688us; 1196us; 1641us; 1197us; 1641us; 1206us; 1688us; 1208us; 1688us; 1210us; 1688us; 1211us; 1688us; 1214us; 1688us; 1221us; 1688us; 1222us; 1688us; 1225us; 1688us; 1226us; 1688us; 1227us; 1688us; 1230us; 1688us; 1232us; 1688us; 1233us; 1688us; 1239us; 1688us; 1248us; 1688us; 1255us; 1688us; 1265us; 1688us; 1267us; 1688us; 1268us; 1688us; 1279us; 1688us; 1286us; 1688us; 1287us; 1688us; 1293us; 1688us; 1299us; 1688us; 1300us; 1688us; 1301us; 1688us; 1317us; 1688us; 1327us; 1688us; 1340us; 1688us; 1341us; 1688us; 1343us; 1688us; 1345us; 1688us; 1349us; 1688us; 1350us; 1688us; 1354us; 1688us; 1360us; 1641us; 1363us; 1641us; 1365us; 1641us; 1367us; 1641us; 1373us; 1688us; 1378us; 1688us; 1382us; 1641us; 1386us; 1641us; 1394us; 1641us; 1403us; 1688us; 1428us; 1641us; 1429us; 1641us; 1435us; 1690us; 1437us; 1688us; 1440us; 1690us; 1442us; 1688us; 1453us; 1690us; 1455us; 1690us; 1462us; 1641us; 1465us; 1641us; 1468us; 1641us; 1471us; 1641us; 1473us; 1641us; 1474us; 1641us; 1475us; 1641us; 1476us; 1641us; 1477us; 1478us; 1479us; 1641us; 1480us; 1641us; 1481us; 1641us; 1482us; 1641us; 1483us; 1641us; 1484us; 1485us; 1486us; 1641us; 1487us; 1641us; 1489us; 1641us; 1491us; 1641us; 1492us; 1641us; 1494us; 1641us; 1496us; 1641us; 1498us; 1641us; 1499us; 1641us; 1501us; 1641us; 1511us; 1641us; 1520us; 1641us; 1521us; 1641us; 1524us; 1641us; 1525us; 1641us; 1529us; 1641us; 1530us; 1641us; 1535us; 1641us; 1536us; 1641us; 1548us; 1641us; 1552us; 1641us; 1566us; 1641us; 1570us; 1641us; 1577us; 1688us; 1583us; 1641us; 1591us; 1641us; 1593us; 1641us; 1604us; 1641us; 1608us; 1641us; 1615us; 1641us; 1624us; 1641us; 1630us; 1641us; 1631us; 1641us; 1632us; 1641us; 1633us; 1634us; 1636us; 1638us; 1637us; 1638us; 1642us; 1643us; 1692us; 1690us; 114us; 65535us; 46us; 47us; 48us; 49us; 83us; 270us; 88us; 89us; 97us; 1503us; 105us; 268us; 136us; 1503us; 165us; 512us; 171us; 1503us; 175us; 1503us; 176us; 1503us; 177us; 1503us; 178us; 1503us; 187us; 1503us; 263us; 280us; 292us; 305us; 303us; 305us; 308us; 309us; 312us; 313us; 360us; 1503us; 410us; 512us; 416us; 1503us; 417us; 1503us; 423us; 1503us; 446us; 1503us; 456us; 1503us; 475us; 1503us; 511us; 512us; 519us; 1503us; 528us; 1503us; 536us; 537us; 538us; 539us; 574us; 1503us; 577us; 1503us; 614us; 1503us; 617us; 1503us; 636us; 1503us; 639us; 1503us; 642us; 1503us; 643us; 1503us; 644us; 1503us; 656us; 1503us; 667us; 1503us; 669us; 670us; 671us; 672us; 706us; 709us; 719us; 709us; 752us; 1503us; 782us; 1503us; 829us; 1503us; 845us; 901us; 887us; 1503us; 899us; 901us; 918us; 1503us; 1080us; 1503us; 1082us; 1503us; 1084us; 1503us; 1196us; 1503us; 1197us; 1503us; 1360us; 1503us; 1363us; 1503us; 1365us; 1503us; 1367us; 1503us; 1382us; 1399us; 1386us; 1399us; 1394us; 1399us; 1428us; 1503us; 1429us; 1503us; 1462us; 1503us; 1465us; 1503us; 1468us; 1503us; 1471us; 1503us; 1473us; 1503us; 1474us; 1503us; 1475us; 1503us; 1476us; 1503us; 1479us; 1503us; 1480us; 1503us; 1481us; 1503us; 1482us; 1503us; 1483us; 1503us; 1486us; 1503us; 1487us; 1503us; 1489us; 1503us; 1491us; 1503us; 1492us; 1503us; 1494us; 1503us; 1496us; 1503us; 1498us; 1503us; 1499us; 1503us; 1501us; 1503us; 1511us; 1503us; 1520us; 1503us; 1521us; 1503us; 1524us; 1503us; 1525us; 1503us; 1529us; 1503us; 1530us; 1503us; 1535us; 1503us; 1536us; 1503us; 1548us; 1503us; 1552us; 1503us; 1566us; 1503us; 1570us; 1503us; 1583us; 1584us; 1591us; 1503us; 1593us; 1503us; 1604us; 1503us; 1608us; 1613us; 1615us; 1613us; 1624us; 1613us; 1630us; 1613us; 1631us; 1613us; 1632us; 1613us; 183us; 65535us; 27us; 1689us; 94us; 1689us; 100us; 1689us; 102us; 1689us; 168us; 1689us; 189us; 1689us; 191us; 1689us; 196us; 1689us; 220us; 1689us; 234us; 1689us; 256us; 1689us; 394us; 1691us; 397us; 1689us; 399us; 1691us; 402us; 1689us; 420us; 1689us; 434us; 1691us; 437us; 1689us; 453us; 1689us; 459us; 1691us; 462us; 1691us; 611us; 1689us; 677us; 1689us; 683us; 1689us; 729us; 1691us; 732us; 1689us; 736us; 1689us; 746us; 1689us; 805us; 1691us; 806us; 1691us; 810us; 1691us; 811us; 1691us; 812us; 1691us; 813us; 1691us; 820us; 1691us; 823us; 1691us; 825us; 1691us; 827us; 1691us; 832us; 1691us; 836us; 1691us; 838us; 1691us; 840us; 1691us; 848us; 1691us; 851us; 1691us; 863us; 1691us; 884us; 1691us; 889us; 1691us; 890us; 1691us; 892us; 1691us; 893us; 1691us; 894us; 1691us; 895us; 1691us; 902us; 1691us; 904us; 1691us; 906us; 1689us; 911us; 1689us; 923us; 1689us; 925us; 1689us; 928us; 1689us; 931us; 1689us; 947us; 1689us; 950us; 1689us; 953us; 1689us; 959us; 1689us; 963us; 1689us; 967us; 1689us; 969us; 1689us; 974us; 1689us; 976us; 1689us; 978us; 1689us; 980us; 1689us; 982us; 1689us; 984us; 1689us; 993us; 1691us; 995us; 1689us; 1003us; 1689us; 1010us; 1689us; 1016us; 1689us; 1018us; 1689us; 1020us; 1691us; 1021us; 1689us; 1024us; 1689us; 1026us; 1691us; 1027us; 1689us; 1030us; 1689us; 1033us; 1689us; 1036us; 1689us; 1038us; 1689us; 1043us; 1689us; 1086us; 1689us; 1088us; 1689us; 1091us; 1689us; 1092us; 1689us; 1093us; 1689us; 1094us; 1689us; 1095us; 1689us; 1096us; 1689us; 1097us; 1689us; 1098us; 1689us; 1099us; 1689us; 1100us; 1689us; 1101us; 1689us; 1102us; 1689us; 1103us; 1689us; 1104us; 1689us; 1105us; 1689us; 1106us; 1689us; 1107us; 1689us; 1108us; 1689us; 1109us; 1689us; 1110us; 1689us; 1132us; 1689us; 1135us; 1691us; 1137us; 1691us; 1142us; 1691us; 1149us; 1691us; 1154us; 1689us; 1155us; 1689us; 1159us; 1689us; 1161us; 1689us; 1165us; 1689us; 1167us; 1689us; 1171us; 1689us; 1174us; 1689us; 1176us; 1689us; 1178us; 1689us; 1179us; 1689us; 1181us; 1689us; 1182us; 1689us; 1184us; 1689us; 1185us; 1689us; 1187us; 1689us; 1188us; 1689us; 1190us; 1689us; 1191us; 1689us; 1193us; 1689us; 1194us; 1689us; 1206us; 1689us; 1208us; 1689us; 1210us; 1689us; 1211us; 1689us; 1214us; 1689us; 1221us; 1689us; 1222us; 1689us; 1225us; 1689us; 1226us; 1689us; 1227us; 1689us; 1230us; 1689us; 1232us; 1689us; 1233us; 1689us; 1239us; 1689us; 1248us; 1689us; 1255us; 1689us; 1265us; 1689us; 1267us; 1689us; 1268us; 1689us; 1279us; 1689us; 1286us; 1689us; 1287us; 1689us; 1293us; 1689us; 1299us; 1689us; 1300us; 1689us; 1301us; 1689us; 1317us; 1689us; 1327us; 1689us; 1340us; 1689us; 1341us; 1689us; 1343us; 1689us; 1345us; 1689us; 1349us; 1689us; 1350us; 1689us; 1354us; 1689us; 1373us; 1689us; 1378us; 1689us; 1403us; 1689us; 1435us; 1691us; 1437us; 1689us; 1440us; 1691us; 1442us; 1689us; 1453us; 1691us; 1455us; 1691us; 1577us; 1689us; 1692us; 1691us; 7us; 65535us; 624us; 1646us; 832us; 1646us; 863us; 1646us; 1248us; 1646us; 1300us; 1646us; 1301us; 1646us; 1645us; 1646us; 2us; 65535us; 1652us; 1687us; 1685us; 1686us; 7us; 65535us; 624us; 1651us; 832us; 1651us; 863us; 1651us; 1248us; 1651us; 1300us; 1651us; 1301us; 1651us; 1645us; 1651us; 139us; 65535us; 27us; 1695us; 94us; 1695us; 100us; 1695us; 102us; 1695us; 168us; 1695us; 189us; 1695us; 191us; 1695us; 196us; 1695us; 220us; 1695us; 234us; 1695us; 256us; 1695us; 397us; 1695us; 402us; 1695us; 420us; 1695us; 437us; 1695us; 453us; 1695us; 611us; 1695us; 677us; 1695us; 683us; 1695us; 732us; 1695us; 736us; 1695us; 746us; 1695us; 906us; 1695us; 911us; 1695us; 923us; 1695us; 925us; 1695us; 928us; 1695us; 931us; 1695us; 947us; 1695us; 950us; 1695us; 953us; 1695us; 959us; 1695us; 963us; 1695us; 967us; 1695us; 969us; 1695us; 974us; 1695us; 976us; 1695us; 978us; 1695us; 980us; 1695us; 982us; 1695us; 984us; 1695us; 995us; 1695us; 1003us; 1695us; 1010us; 1695us; 1016us; 1695us; 1018us; 1695us; 1021us; 1695us; 1024us; 1695us; 1027us; 1695us; 1030us; 1695us; 1033us; 1695us; 1036us; 1695us; 1038us; 1695us; 1043us; 1695us; 1086us; 1695us; 1088us; 1695us; 1091us; 1695us; 1092us; 1695us; 1093us; 1695us; 1094us; 1695us; 1095us; 1695us; 1096us; 1695us; 1097us; 1695us; 1098us; 1695us; 1099us; 1695us; 1100us; 1695us; 1101us; 1695us; 1102us; 1695us; 1103us; 1695us; 1104us; 1695us; 1105us; 1695us; 1106us; 1695us; 1107us; 1695us; 1108us; 1695us; 1109us; 1695us; 1110us; 1695us; 1132us; 1695us; 1154us; 1695us; 1155us; 1695us; 1159us; 1695us; 1161us; 1695us; 1165us; 1695us; 1167us; 1695us; 1171us; 1695us; 1174us; 1695us; 1176us; 1695us; 1178us; 1695us; 1179us; 1695us; 1181us; 1695us; 1182us; 1695us; 1184us; 1695us; 1185us; 1695us; 1187us; 1695us; 1188us; 1695us; 1190us; 1695us; 1191us; 1695us; 1193us; 1695us; 1194us; 1695us; 1206us; 1695us; 1208us; 1695us; 1210us; 1695us; 1211us; 1695us; 1214us; 1695us; 1221us; 1695us; 1222us; 1695us; 1225us; 1695us; 1226us; 1695us; 1227us; 1246us; 1230us; 1246us; 1232us; 1695us; 1233us; 1695us; 1239us; 1695us; 1248us; 1695us; 1255us; 1695us; 1265us; 1695us; 1267us; 1695us; 1268us; 1695us; 1279us; 1695us; 1286us; 1695us; 1287us; 1695us; 1293us; 1695us; 1299us; 1695us; 1300us; 1695us; 1301us; 1695us; 1317us; 1695us; 1327us; 1695us; 1340us; 1695us; 1341us; 1695us; 1343us; 1695us; 1345us; 1695us; 1349us; 1695us; 1350us; 1695us; 1354us; 1695us; 1373us; 1695us; 1378us; 1695us; 1403us; 1695us; 1437us; 1695us; 1442us; 1695us; 1577us; 1695us; 44us; 65535us; 394us; 461us; 399us; 461us; 434us; 461us; 459us; 460us; 462us; 463us; 729us; 461us; 805us; 461us; 806us; 461us; 810us; 461us; 811us; 461us; 812us; 461us; 813us; 461us; 820us; 461us; 823us; 461us; 825us; 461us; 827us; 461us; 832us; 461us; 836us; 461us; 838us; 461us; 840us; 461us; 848us; 461us; 851us; 461us; 863us; 461us; 884us; 461us; 889us; 461us; 890us; 461us; 892us; 461us; 893us; 461us; 894us; 461us; 895us; 461us; 902us; 461us; 904us; 461us; 993us; 461us; 1020us; 461us; 1026us; 461us; 1135us; 461us; 1137us; 461us; 1142us; 461us; 1149us; 461us; 1435us; 461us; 1440us; 461us; 1453us; 461us; 1455us; 461us; 1692us; 1693us; 137us; 65535us; 27us; 1238us; 94us; 95us; 100us; 1238us; 102us; 1238us; 168us; 169us; 189us; 195us; 191us; 195us; 196us; 197us; 220us; 1238us; 234us; 1238us; 256us; 1238us; 397us; 1238us; 402us; 1238us; 420us; 421us; 437us; 1238us; 453us; 1238us; 611us; 623us; 677us; 1238us; 683us; 1238us; 732us; 1238us; 736us; 1238us; 746us; 1238us; 906us; 1238us; 911us; 1238us; 923us; 1238us; 925us; 1238us; 928us; 1238us; 931us; 1238us; 947us; 1238us; 950us; 1238us; 953us; 1238us; 959us; 1238us; 963us; 1238us; 967us; 1238us; 969us; 1238us; 974us; 1238us; 976us; 1238us; 978us; 1238us; 980us; 1238us; 982us; 1238us; 984us; 1238us; 995us; 1238us; 1003us; 1238us; 1010us; 1238us; 1016us; 1238us; 1018us; 1238us; 1021us; 1238us; 1024us; 1238us; 1027us; 1238us; 1030us; 1238us; 1033us; 1238us; 1036us; 1238us; 1038us; 1238us; 1043us; 1238us; 1086us; 1238us; 1088us; 1238us; 1091us; 1238us; 1092us; 1238us; 1093us; 1238us; 1094us; 1238us; 1095us; 1238us; 1096us; 1238us; 1097us; 1238us; 1098us; 1238us; 1099us; 1238us; 1100us; 1238us; 1101us; 1238us; 1102us; 1238us; 1103us; 1238us; 1104us; 1238us; 1105us; 1238us; 1106us; 1238us; 1107us; 1238us; 1108us; 1238us; 1109us; 1238us; 1110us; 1238us; 1132us; 1238us; 1154us; 1238us; 1155us; 1238us; 1159us; 1238us; 1161us; 1238us; 1165us; 1238us; 1167us; 1238us; 1171us; 1238us; 1174us; 1238us; 1176us; 1238us; 1178us; 1238us; 1179us; 1238us; 1181us; 1238us; 1182us; 1238us; 1184us; 1238us; 1185us; 1238us; 1187us; 1238us; 1188us; 1238us; 1190us; 1238us; 1191us; 1238us; 1193us; 1238us; 1194us; 1238us; 1206us; 1238us; 1208us; 1238us; 1210us; 1238us; 1211us; 1238us; 1214us; 1238us; 1221us; 1238us; 1222us; 1238us; 1225us; 1238us; 1226us; 1238us; 1232us; 1234us; 1233us; 1234us; 1239us; 1238us; 1248us; 1238us; 1255us; 1238us; 1265us; 1238us; 1267us; 1238us; 1268us; 1238us; 1279us; 1238us; 1286us; 1238us; 1287us; 1238us; 1293us; 1238us; 1299us; 1238us; 1300us; 1238us; 1301us; 1238us; 1317us; 1238us; 1327us; 1238us; 1340us; 1238us; 1341us; 1238us; 1343us; 1238us; 1345us; 1238us; 1349us; 1238us; 1350us; 1238us; 1354us; 1238us; 1373us; 1238us; 1378us; 1238us; 1403us; 1238us; 1437us; 1238us; 1442us; 1238us; 1577us; 1238us; 14us; 65535us; 43us; 1699us; 68us; 1699us; 71us; 1699us; 72us; 1701us; 75us; 1699us; 210us; 1699us; 229us; 1699us; 235us; 1699us; 240us; 1699us; 244us; 1699us; 245us; 1699us; 246us; 1699us; 1699us; 1699us; 1701us; 1701us; 12us; 65535us; 43us; 76us; 68us; 76us; 71us; 76us; 75us; 76us; 210us; 247us; 229us; 247us; 235us; 236us; 240us; 242us; 244us; 247us; 245us; 247us; 246us; 247us; 1699us; 1700us; 2us; 65535us; 72us; 73us; 1701us; 1702us; 11us; 65535us; 159us; 1716us; 293us; 303us; 381us; 1716us; 494us; 1716us; 647us; 648us; 814us; 816us; 879us; 904us; 897us; 899us; 920us; 923us; 921us; 923us; 922us; 923us; 4us; 65535us; 204us; 205us; 287us; 288us; 470us; 471us; 473us; 474us; 2us; 65535us; 1420us; 1421us; 1430us; 1431us; 9us; 65535us; 414us; 415us; 425us; 426us; 428us; 429us; 430us; 431us; 432us; 433us; 438us; 439us; 500us; 501us; 502us; 503us; 506us; 507us; 2us; 65535us; 54us; 55us; 216us; 217us; 20us; 65535us; 65us; 66us; 125us; 126us; 226us; 227us; 295us; 296us; 298us; 299us; 348us; 349us; 605us; 635us; 612us; 613us; 615us; 616us; 618us; 619us; 621us; 622us; 630us; 631us; 633us; 634us; 994us; 1041us; 1023us; 1024us; 1029us; 1030us; 1035us; 1036us; 1407us; 1411us; 1408us; 1409us; 1431us; 1432us; 8us; 65535us; 159us; 160us; 293us; 294us; 381us; 382us; 494us; 495us; 647us; 650us; 814us; 815us; 879us; 903us; 897us; 898us; 2us; 65535us; 673us; 674us; 679us; 680us; 0us; 65535us; 11us; 65535us; 91us; 92us; 166us; 167us; 384us; 393us; 386us; 393us; 391us; 393us; 413us; 399us; 419us; 420us; 498us; 728us; 499us; 399us; 505us; 399us; 725us; 728us; 7us; 65535us; 92us; 93us; 179us; 653us; 182us; 653us; 442us; 443us; 448us; 449us; 651us; 653us; 728us; 729us; 4us; 65535us; 936us; 1010us; 983us; 984us; 994us; 995us; 1002us; 1003us; 9us; 65535us; 933us; 992us; 934us; 999us; 935us; 1007us; 937us; 1014us; 985us; 986us; 988us; 989us; 996us; 997us; 1004us; 1005us; 1011us; 1012us; 2us; 65535us; 263us; 281us; 271us; 281us; 2us; 65535us; 83us; 112us; 105us; 108us; 2us; 65535us; 59us; 83us; 82us; 83us; 249us; 65535us; 27us; 771us; 36us; 38us; 97us; 771us; 100us; 771us; 102us; 771us; 136us; 771us; 165us; 771us; 171us; 771us; 175us; 771us; 177us; 771us; 187us; 771us; 220us; 771us; 234us; 771us; 256us; 771us; 306us; 771us; 310us; 771us; 315us; 771us; 360us; 771us; 394us; 771us; 397us; 771us; 399us; 771us; 402us; 771us; 410us; 771us; 416us; 771us; 423us; 771us; 434us; 771us; 437us; 771us; 446us; 771us; 453us; 771us; 456us; 771us; 475us; 771us; 478us; 771us; 511us; 771us; 519us; 771us; 528us; 529us; 574us; 771us; 577us; 771us; 614us; 771us; 617us; 771us; 620us; 771us; 632us; 771us; 636us; 771us; 639us; 771us; 642us; 771us; 656us; 771us; 667us; 771us; 677us; 771us; 683us; 771us; 729us; 771us; 732us; 771us; 736us; 771us; 746us; 771us; 752us; 771us; 782us; 771us; 805us; 771us; 806us; 771us; 810us; 771us; 811us; 771us; 812us; 771us; 813us; 771us; 820us; 771us; 823us; 771us; 825us; 771us; 827us; 771us; 829us; 771us; 832us; 771us; 836us; 771us; 838us; 771us; 840us; 771us; 848us; 771us; 851us; 771us; 863us; 771us; 884us; 771us; 887us; 771us; 889us; 771us; 890us; 771us; 892us; 771us; 893us; 771us; 894us; 771us; 895us; 771us; 902us; 771us; 904us; 771us; 906us; 771us; 911us; 771us; 918us; 771us; 923us; 771us; 925us; 771us; 928us; 771us; 931us; 771us; 947us; 771us; 950us; 771us; 953us; 771us; 959us; 771us; 963us; 771us; 967us; 771us; 969us; 771us; 974us; 771us; 976us; 771us; 978us; 771us; 980us; 771us; 982us; 771us; 984us; 771us; 993us; 771us; 995us; 771us; 1003us; 771us; 1010us; 771us; 1016us; 771us; 1018us; 771us; 1020us; 771us; 1021us; 771us; 1024us; 771us; 1026us; 771us; 1027us; 771us; 1030us; 771us; 1033us; 771us; 1036us; 771us; 1038us; 771us; 1043us; 771us; 1080us; 771us; 1082us; 771us; 1084us; 771us; 1086us; 771us; 1088us; 771us; 1091us; 771us; 1092us; 771us; 1093us; 771us; 1094us; 771us; 1095us; 771us; 1096us; 771us; 1097us; 771us; 1098us; 771us; 1099us; 771us; 1100us; 771us; 1101us; 771us; 1102us; 771us; 1103us; 771us; 1104us; 771us; 1105us; 771us; 1106us; 771us; 1107us; 771us; 1108us; 771us; 1109us; 771us; 1110us; 771us; 1132us; 771us; 1135us; 771us; 1137us; 771us; 1142us; 771us; 1149us; 771us; 1154us; 771us; 1155us; 771us; 1159us; 771us; 1161us; 771us; 1165us; 771us; 1167us; 771us; 1171us; 771us; 1174us; 771us; 1176us; 771us; 1178us; 771us; 1179us; 771us; 1181us; 771us; 1182us; 771us; 1184us; 771us; 1185us; 771us; 1187us; 771us; 1188us; 771us; 1190us; 771us; 1191us; 771us; 1193us; 771us; 1194us; 771us; 1196us; 771us; 1197us; 771us; 1200us; 771us; 1201us; 771us; 1206us; 771us; 1208us; 771us; 1210us; 771us; 1211us; 771us; 1214us; 771us; 1221us; 771us; 1222us; 771us; 1225us; 771us; 1226us; 771us; 1239us; 771us; 1248us; 771us; 1255us; 771us; 1265us; 771us; 1267us; 771us; 1268us; 771us; 1279us; 771us; 1286us; 771us; 1287us; 771us; 1293us; 771us; 1299us; 771us; 1300us; 771us; 1301us; 771us; 1317us; 771us; 1327us; 771us; 1340us; 771us; 1341us; 771us; 1343us; 771us; 1345us; 771us; 1349us; 771us; 1350us; 771us; 1351us; 1352us; 1354us; 771us; 1360us; 771us; 1363us; 771us; 1365us; 771us; 1367us; 771us; 1369us; 771us; 1373us; 771us; 1378us; 771us; 1403us; 771us; 1428us; 771us; 1435us; 771us; 1437us; 771us; 1440us; 771us; 1442us; 771us; 1453us; 771us; 1455us; 771us; 1462us; 771us; 1465us; 771us; 1468us; 771us; 1471us; 771us; 1473us; 771us; 1475us; 771us; 1479us; 771us; 1482us; 771us; 1486us; 771us; 1489us; 771us; 1492us; 771us; 1494us; 771us; 1496us; 771us; 1499us; 771us; 1501us; 771us; 1520us; 771us; 1521us; 771us; 1529us; 771us; 1530us; 771us; 1535us; 771us; 1536us; 771us; 1548us; 771us; 1552us; 771us; 1566us; 771us; 1570us; 771us; 1577us; 771us; 1591us; 771us; 1593us; 771us; 1604us; 771us; 11us; 65535us; 305us; 306us; 309us; 310us; 314us; 315us; 341us; 342us; 476us; 478us; 695us; 696us; 707us; 711us; 710us; 711us; 1198us; 1200us; 1199us; 1201us; 1368us; 1369us; 5us; 65535us; 95us; 558us; 169us; 558us; 421us; 558us; 537us; 553us; 822us; 558us; 13us; 65535us; 27us; 258us; 58us; 115us; 81us; 115us; 181us; 184us; 220us; 258us; 234us; 258us; 252us; 258us; 292us; 319us; 303us; 319us; 325us; 440us; 1352us; 1359us; 1735us; 1737us; 1736us; 1737us; 10us; 65535us; 27us; 45us; 58us; 45us; 81us; 45us; 220us; 45us; 234us; 45us; 252us; 45us; 292us; 317us; 303us; 317us; 1740us; 1742us; 1741us; 1742us; 7us; 65535us; 523us; 524us; 526us; 527us; 846us; 847us; 944us; 1331us; 1327us; 1333us; 1328us; 1329us; 1745us; 1746us; 38us; 65535us; 520us; 521us; 543us; 544us; 585us; 586us; 588us; 589us; 592us; 593us; 625us; 626us; 628us; 629us; 698us; 699us; 787us; 790us; 788us; 789us; 792us; 793us; 833us; 834us; 864us; 865us; 867us; 868us; 942us; 1306us; 943us; 1307us; 1133us; 1134us; 1249us; 1250us; 1253us; 1254us; 1299us; 1302us; 1300us; 1302us; 1301us; 1302us; 1303us; 1304us; 1316us; 1317us; 1323us; 1324us; 1361us; 1362us; 1365us; 1366us; 1522us; 1524us; 1523us; 1525us; 1571us; 1573us; 1572us; 1573us; 1580us; 1581us; 1616us; 1617us; 1646us; 1647us; 1648us; 1649us; 1652us; 1653us; 1655us; 1656us; 1749us; 1750us; 26us; 65535us; 64us; 65us; 68us; 69us; 103us; 104us; 106us; 107us; 110us; 111us; 128us; 129us; 146us; 147us; 154us; 155us; 225us; 226us; 229us; 230us; 245us; 278us; 268us; 269us; 272us; 273us; 275us; 276us; 313us; 314us; 351us; 352us; 370us; 372us; 374us; 376us; 490us; 491us; 737us; 738us; 907us; 908us; 912us; 913us; 929us; 930us; 1162us; 1163us; 1168us; 1169us; 1753us; 1754us; 1us; 65535us; 1303us; 1305us; 16us; 65535us; 292us; 301us; 294us; 300us; 475us; 481us; 880us; 1348us; 993us; 1013us; 994us; 1001us; 995us; 1000us; 996us; 998us; 1174us; 1175us; 1176us; 1177us; 1345us; 1347us; 1402us; 1406us; 1403us; 1405us; 1586us; 1587us; 1593us; 1597us; 1642us; 1644us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 5us; 13us; 18us; 24us; 29us; 34us; 39us; 44us; 68us; 70us; 72us; 74us; 81us; 86us; 88us; 91us; 94us; 97us; 101us; 108us; 118us; 128us; 138us; 141us; 143us; 146us; 149us; 153us; 155us; 158us; 161us; 164us; 168us; 177us; 186us; 198us; 202us; 205us; 208us; 211us; 217us; 219us; 221us; 224us; 227us; 230us; 234us; 240us; 250us; 261us; 272us; 288us; 290us; 292us; 295us; 297us; 378us; 495us; 612us; 614us; 617us; 620us; 625us; 632us; 635us; 639us; 642us; 646us; 650us; 654us; 658us; 669us; 680us; 682us; 685us; 689us; 693us; 696us; 707us; 711us; 714us; 716us; 758us; 769us; 833us; 846us; 848us; 853us; 856us; 859us; 862us; 865us; 869us; 872us; 877us; 882us; 885us; 891us; 898us; 900us; 906us; 916us; 918us; 920us; 924us; 930us; 932us; 934us; 939us; 943us; 945us; 949us; 953us; 958us; 960us; 964us; 970us; 974us; 978us; 980us; 984us; 988us; 993us; 998us; 1002us; 1005us; 1008us; 1012us; 1017us; 1024us; 1031us; 1033us; 1035us; 1051us; 1161us; 1169us; 1279us; 1388us; 1392us; 1397us; 1507us; 1509us; 1511us; 1515us; 1518us; 1520us; 1525us; 1528us; 1534us; 1537us; 1539us; 1542us; 1544us; 1546us; 1548us; 1551us; 1799us; 1978us; 1982us; 1986us; 1989us; 1991us; 2003us; 2015us; 2027us; 2030us; 2033us; 2066us; 2070us; 2079us; 2121us; 2124us; 2146us; 2168us; 2190us; 2192us; 2195us; 2198us; 2202us; 2226us; 2233us; 2239us; 2288us; 2342us; 2429us; 2535us; 2537us; 2540us; 2545us; 2552us; 2559us; 2561us; 2563us; 2566us; 2569us; 2571us; 2677us; 2797us; 2917us; 2921us; 3050us; 3053us; 3056us; 3059us; 3195us; 3331us; 3508us; 3644us; 3780us; 3784us; 3788us; 3790us; 3926us; 3928us; 3931us; 3935us; 3940us; 3942us; 3944us; 3946us; 3950us; 3952us; 3957us; 3959us; 3961us; 3963us; 3970us; 3977us; 3981us; 3987us; 3991us; 3993us; 3995us; 3997us; 4000us; 4002us; 4007us; 4013us; 4015us; 4121us; 4227us; 4231us; 4237us; 4241us; 4251us; 4261us; 4264us; 4276us; 4309us; 4342us; 4348us; 4349us; 4436us; 4523us; 4590us; 4608us; 4613us; 4616us; 4683us; 4688us; 4693us; 4763us; 4768us; 4775us; 4784us; 4787us; 4791us; 4793us; 4800us; 4807us; 4814us; 4820us; 4924us; 5032us; 5353us; 5468us; 5652us; 5660us; 5663us; 5671us; 5811us; 5856us; 5994us; 6009us; 6022us; 6025us; 6037us; 6042us; 6045us; 6055us; 6058us; 6079us; 6088us; 6091us; 6092us; 6104us; 6112us; 6117us; 6127us; 6130us; 6133us; 6136us; 6386us; 6398us; 6404us; 6418us; 6429us; 6437us; 6476us; 6503us; 6505us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 2us; 9us; 12us; 1us; 9us; 2us; 10us; 13us; 1us; 10us; 2us; 11us; 14us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 2us; 15us; 16us; 1us; 16us; 7us; 17us; 134us; 135us; 136us; 137us; 138us; 139us; 7us; 17us; 134us; 135us; 136us; 137us; 138us; 139us; 47us; 17us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 1us; 18us; 2us; 19us; 20us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 23us; 2us; 23us; 25us; 1us; 25us; 1us; 26us; 2us; 27us; 28us; 1us; 27us; 1us; 28us; 1us; 28us; 3us; 29us; 44us; 47us; 1us; 29us; 1us; 30us; 1us; 30us; 3us; 30us; 911us; 912us; 1us; 31us; 3us; 31us; 911us; 912us; 2us; 32us; 33us; 1us; 33us; 2us; 34us; 35us; 1us; 34us; 1us; 36us; 1us; 36us; 1us; 36us; 6us; 37us; 51us; 52us; 53us; 54us; 56us; 6us; 37us; 51us; 52us; 53us; 54us; 56us; 3us; 37us; 51us; 52us; 1us; 37us; 1us; 38us; 1us; 39us; 3us; 40us; 41us; 42us; 2us; 40us; 41us; 1us; 40us; 1us; 40us; 1us; 41us; 3us; 42us; 44us; 47us; 1us; 42us; 1us; 43us; 2us; 44us; 47us; 2us; 46us; 48us; 2us; 46us; 48us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 49us; 1us; 50us; 5us; 51us; 52us; 53us; 54us; 56us; 5us; 51us; 52us; 53us; 54us; 56us; 2us; 51us; 52us; 2us; 51us; 52us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 3us; 55us; 911us; 912us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 2us; 58us; 59us; 47us; 58us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 1us; 59us; 47us; 59us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 1us; 59us; 3us; 60us; 61us; 142us; 1us; 60us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 2us; 64us; 65us; 1us; 64us; 1us; 64us; 2us; 66us; 67us; 1us; 66us; 1us; 66us; 1us; 67us; 3us; 68us; 77us; 78us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 3us; 74us; 75us; 76us; 2us; 74us; 75us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 76us; 2us; 77us; 78us; 2us; 77us; 78us; 1us; 77us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 80us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 82us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 86us; 1us; 86us; 1us; 86us; 7us; 87us; 88us; 89us; 90us; 91us; 92us; 93us; 12us; 87us; 88us; 89us; 90us; 91us; 92us; 93us; 262us; 263us; 264us; 265us; 266us; 7us; 87us; 88us; 89us; 90us; 91us; 92us; 93us; 12us; 87us; 88us; 89us; 90us; 91us; 92us; 93us; 262us; 263us; 264us; 265us; 266us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 88us; 4us; 88us; 832us; 833us; 834us; 1us; 89us; 4us; 89us; 832us; 833us; 834us; 1us; 90us; 1us; 90us; 3us; 91us; 92us; 172us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 95us; 1us; 95us; 2us; 96us; 97us; 2us; 96us; 97us; 1us; 96us; 1us; 97us; 2us; 98us; 99us; 1us; 99us; 1us; 99us; 1us; 100us; 2us; 101us; 102us; 1us; 102us; 1us; 103us; 1us; 103us; 1us; 104us; 1us; 104us; 1us; 104us; 2us; 106us; 107us; 1us; 106us; 1us; 107us; 1us; 107us; 2us; 108us; 131us; 1us; 108us; 2us; 109us; 110us; 1us; 110us; 2us; 111us; 112us; 1us; 111us; 1us; 113us; 1us; 113us; 1us; 113us; 11us; 114us; 122us; 123us; 124us; 126us; 134us; 135us; 136us; 137us; 138us; 139us; 10us; 114us; 122us; 123us; 124us; 134us; 135us; 136us; 137us; 138us; 139us; 2us; 114us; 139us; 1us; 114us; 1us; 115us; 3us; 116us; 117us; 118us; 2us; 116us; 117us; 1us; 116us; 1us; 116us; 1us; 117us; 2us; 118us; 131us; 1us; 118us; 1us; 119us; 1us; 120us; 10us; 122us; 123us; 124us; 126us; 134us; 135us; 136us; 137us; 138us; 139us; 9us; 122us; 123us; 124us; 134us; 135us; 136us; 137us; 138us; 139us; 49us; 122us; 123us; 124us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 2us; 122us; 123us; 1us; 122us; 1us; 125us; 1us; 126us; 4us; 127us; 128us; 129us; 130us; 1us; 127us; 2us; 128us; 130us; 1us; 128us; 1us; 131us; 2us; 131us; 148us; 2us; 131us; 153us; 1us; 131us; 1us; 131us; 1us; 132us; 1us; 133us; 6us; 134us; 135us; 136us; 137us; 138us; 139us; 6us; 134us; 135us; 136us; 137us; 138us; 139us; 1us; 134us; 3us; 134us; 500us; 501us; 1us; 135us; 5us; 135us; 502us; 503us; 504us; 505us; 1us; 136us; 1us; 137us; 1us; 137us; 1us; 137us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 139us; 2us; 140us; 155us; 1us; 140us; 1us; 141us; 3us; 142us; 911us; 912us; 1us; 142us; 3us; 143us; 911us; 912us; 5us; 144us; 145us; 146us; 147us; 148us; 2us; 144us; 145us; 1us; 144us; 1us; 145us; 2us; 146us; 147us; 1us; 146us; 1us; 147us; 1us; 148us; 1us; 149us; 3us; 150us; 911us; 912us; 3us; 151us; 152us; 153us; 2us; 151us; 152us; 1us; 151us; 1us; 152us; 1us; 153us; 1us; 154us; 1us; 154us; 1us; 154us; 1us; 155us; 2us; 157us; 158us; 1us; 158us; 4us; 159us; 160us; 161us; 162us; 3us; 159us; 161us; 164us; 2us; 159us; 161us; 1us; 159us; 1us; 159us; 2us; 160us; 498us; 1us; 160us; 1us; 160us; 1us; 161us; 1us; 162us; 1us; 163us; 2us; 164us; 978us; 1us; 164us; 3us; 165us; 911us; 912us; 1us; 165us; 1us; 165us; 2us; 166us; 167us; 3us; 166us; 911us; 912us; 1us; 166us; 1us; 166us; 1us; 167us; 3us; 167us; 911us; 912us; 1us; 167us; 1us; 167us; 1us; 167us; 1us; 168us; 1us; 168us; 1us; 169us; 1us; 169us; 2us; 170us; 910us; 1us; 170us; 1us; 171us; 1us; 171us; 4us; 172us; 213us; 219us; 222us; 1us; 172us; 1us; 173us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 176us; 1us; 176us; 1us; 177us; 1us; 177us; 1us; 177us; 4us; 179us; 180us; 181us; 182us; 1us; 180us; 1us; 180us; 1us; 181us; 1us; 182us; 1us; 182us; 1us; 182us; 1us; 182us; 1us; 182us; 1us; 182us; 1us; 182us; 4us; 183us; 184us; 193us; 194us; 2us; 183us; 184us; 2us; 183us; 184us; 2us; 183us; 184us; 2us; 183us; 184us; 1us; 183us; 1us; 183us; 1us; 184us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 187us; 1us; 188us; 1us; 188us; 1us; 188us; 1us; 189us; 3us; 190us; 191us; 192us; 2us; 190us; 191us; 1us; 190us; 1us; 191us; 2us; 192us; 199us; 1us; 192us; 2us; 193us; 194us; 2us; 193us; 194us; 1us; 193us; 1us; 194us; 2us; 195us; 196us; 2us; 195us; 196us; 1us; 195us; 1us; 196us; 1us; 197us; 1us; 198us; 1us; 199us; 1us; 199us; 1us; 201us; 1us; 201us; 1us; 201us; 1us; 202us; 1us; 202us; 2us; 203us; 204us; 2us; 203us; 204us; 1us; 203us; 1us; 204us; 2us; 205us; 206us; 1us; 206us; 1us; 206us; 1us; 207us; 1us; 207us; 1us; 207us; 1us; 207us; 1us; 207us; 1us; 207us; 2us; 208us; 209us; 2us; 208us; 209us; 2us; 208us; 209us; 1us; 208us; 1us; 208us; 1us; 209us; 2us; 210us; 211us; 1us; 211us; 11us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 16us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 262us; 263us; 264us; 265us; 266us; 11us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 16us; 212us; 213us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 262us; 263us; 264us; 265us; 266us; 1us; 212us; 1us; 213us; 2us; 214us; 220us; 1us; 214us; 1us; 214us; 1us; 215us; 4us; 215us; 832us; 833us; 834us; 1us; 215us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 219us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 221us; 1us; 221us; 1us; 221us; 1us; 221us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 229us; 1us; 229us; 1us; 231us; 1us; 232us; 1us; 233us; 1us; 234us; 1us; 235us; 1us; 237us; 1us; 237us; 1us; 237us; 1us; 239us; 1us; 239us; 1us; 239us; 3us; 241us; 242us; 243us; 2us; 241us; 242us; 1us; 241us; 1us; 242us; 1us; 242us; 1us; 242us; 1us; 243us; 1us; 244us; 1us; 246us; 1us; 246us; 1us; 247us; 2us; 249us; 250us; 1us; 249us; 1us; 250us; 2us; 251us; 252us; 2us; 251us; 252us; 1us; 251us; 1us; 252us; 1us; 253us; 2us; 254us; 255us; 2us; 254us; 255us; 1us; 254us; 4us; 256us; 257us; 258us; 259us; 5us; 256us; 257us; 258us; 259us; 374us; 3us; 256us; 257us; 258us; 1us; 256us; 1us; 256us; 1us; 257us; 1us; 257us; 1us; 258us; 1us; 259us; 1us; 259us; 1us; 259us; 1us; 260us; 1us; 261us; 5us; 262us; 263us; 264us; 265us; 266us; 5us; 262us; 263us; 264us; 265us; 266us; 4us; 262us; 828us; 911us; 912us; 1us; 262us; 1us; 262us; 1us; 262us; 1us; 263us; 1us; 264us; 1us; 265us; 5us; 266us; 835us; 863us; 864us; 870us; 1us; 266us; 1us; 266us; 3us; 267us; 268us; 269us; 2us; 267us; 268us; 1us; 267us; 1us; 268us; 1us; 269us; 1us; 269us; 2us; 270us; 860us; 2us; 270us; 405us; 1us; 270us; 1us; 271us; 1us; 272us; 1us; 273us; 1us; 274us; 1us; 275us; 3us; 276us; 277us; 278us; 4us; 276us; 278us; 911us; 912us; 1us; 277us; 3us; 277us; 911us; 912us; 1us; 278us; 1us; 279us; 1us; 280us; 2us; 280us; 281us; 1us; 280us; 2us; 281us; 284us; 3us; 281us; 285us; 286us; 1us; 281us; 2us; 281us; 285us; 1us; 281us; 1us; 282us; 1us; 283us; 1us; 283us; 1us; 284us; 1us; 284us; 1us; 284us; 1us; 284us; 1us; 285us; 1us; 288us; 1us; 288us; 1us; 288us; 1us; 288us; 1us; 288us; 1us; 289us; 2us; 291us; 434us; 1us; 294us; 2us; 294us; 295us; 2us; 295us; 800us; 2us; 295us; 802us; 1us; 295us; 1us; 295us; 1us; 296us; 1us; 297us; 1us; 297us; 1us; 297us; 1us; 297us; 8us; 298us; 299us; 300us; 301us; 302us; 304us; 305us; 306us; 1us; 298us; 1us; 298us; 7us; 299us; 300us; 301us; 302us; 304us; 305us; 306us; 1us; 299us; 3us; 300us; 305us; 306us; 1us; 300us; 1us; 301us; 1us; 302us; 1us; 302us; 1us; 302us; 1us; 303us; 2us; 303us; 307us; 1us; 303us; 1us; 303us; 1us; 303us; 1us; 303us; 1us; 303us; 1us; 304us; 1us; 304us; 1us; 305us; 1us; 307us; 1us; 307us; 1us; 308us; 1us; 309us; 1us; 309us; 1us; 310us; 1us; 310us; 1us; 310us; 2us; 311us; 324us; 1us; 312us; 2us; 313us; 314us; 1us; 313us; 1us; 313us; 4us; 315us; 316us; 317us; 318us; 4us; 315us; 316us; 317us; 318us; 4us; 315us; 316us; 317us; 318us; 1us; 315us; 1us; 316us; 1us; 316us; 1us; 316us; 1us; 317us; 1us; 317us; 1us; 317us; 1us; 318us; 1us; 318us; 1us; 318us; 1us; 319us; 6us; 320us; 321us; 913us; 914us; 916us; 917us; 1us; 320us; 1us; 320us; 1us; 321us; 1us; 321us; 1us; 321us; 5us; 322us; 323us; 325us; 326us; 910us; 1us; 322us; 2us; 323us; 326us; 2us; 323us; 326us; 2us; 323us; 326us; 1us; 324us; 1us; 325us; 1us; 325us; 2us; 327us; 328us; 1us; 327us; 1us; 327us; 2us; 329us; 910us; 1us; 329us; 4us; 329us; 832us; 833us; 834us; 4us; 330us; 832us; 833us; 834us; 1us; 331us; 1us; 332us; 2us; 333us; 334us; 2us; 333us; 978us; 1us; 333us; 1us; 334us; 1us; 335us; 1us; 335us; 1us; 336us; 1us; 336us; 1us; 336us; 1us; 336us; 1us; 336us; 1us; 337us; 1us; 337us; 1us; 338us; 1us; 339us; 1us; 339us; 1us; 339us; 1us; 339us; 1us; 339us; 2us; 340us; 341us; 1us; 341us; 1us; 341us; 1us; 343us; 3us; 343us; 911us; 912us; 1us; 344us; 3us; 344us; 911us; 912us; 1us; 345us; 1us; 345us; 1us; 345us; 1us; 346us; 1us; 347us; 1us; 347us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 349us; 1us; 349us; 1us; 349us; 1us; 350us; 1us; 351us; 1us; 352us; 1us; 353us; 1us; 354us; 1us; 355us; 1us; 356us; 1us; 356us; 1us; 356us; 1us; 356us; 1us; 356us; 1us; 356us; 1us; 356us; 1us; 356us; 2us; 357us; 360us; 2us; 358us; 361us; 1us; 360us; 1us; 360us; 1us; 361us; 1us; 361us; 2us; 362us; 363us; 5us; 362us; 363us; 365us; 366us; 367us; 1us; 363us; 3us; 364us; 911us; 912us; 4us; 365us; 366us; 367us; 369us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 366us; 1us; 367us; 1us; 368us; 2us; 368us; 370us; 1us; 368us; 2us; 369us; 370us; 1us; 371us; 1us; 371us; 1us; 372us; 1us; 372us; 1us; 372us; 1us; 374us; 1us; 374us; 1us; 375us; 3us; 376us; 377us; 378us; 3us; 376us; 377us; 378us; 3us; 376us; 377us; 378us; 3us; 376us; 377us; 378us; 2us; 376us; 377us; 1us; 376us; 1us; 377us; 1us; 378us; 2us; 379us; 380us; 2us; 379us; 380us; 1us; 379us; 1us; 380us; 1us; 381us; 1us; 382us; 2us; 382us; 383us; 1us; 383us; 1us; 385us; 2us; 385us; 386us; 1us; 385us; 1us; 385us; 1us; 386us; 1us; 386us; 1us; 387us; 2us; 388us; 389us; 1us; 388us; 1us; 388us; 1us; 389us; 1us; 390us; 1us; 391us; 1us; 392us; 1us; 393us; 1us; 394us; 1us; 395us; 1us; 396us; 1us; 397us; 1us; 398us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 2us; 402us; 447us; 1us; 403us; 1us; 404us; 1us; 405us; 1us; 406us; 2us; 407us; 408us; 1us; 408us; 1us; 408us; 6us; 409us; 421us; 422us; 423us; 428us; 430us; 1us; 410us; 1us; 411us; 1us; 411us; 2us; 412us; 413us; 3us; 412us; 414us; 415us; 1us; 412us; 1us; 412us; 1us; 413us; 1us; 415us; 1us; 415us; 5us; 416us; 417us; 418us; 419us; 420us; 2us; 416us; 418us; 1us; 416us; 1us; 417us; 1us; 418us; 2us; 419us; 498us; 1us; 419us; 1us; 420us; 6us; 421us; 422us; 422us; 423us; 428us; 430us; 6us; 421us; 422us; 423us; 423us; 428us; 430us; 6us; 421us; 422us; 423us; 427us; 428us; 430us; 6us; 421us; 422us; 423us; 428us; 428us; 430us; 6us; 421us; 422us; 423us; 428us; 429us; 430us; 6us; 421us; 422us; 423us; 428us; 430us; 430us; 6us; 421us; 422us; 423us; 428us; 430us; 545us; 7us; 421us; 422us; 423us; 428us; 430us; 546us; 547us; 1us; 421us; 1us; 421us; 1us; 422us; 1us; 423us; 2us; 424us; 427us; 2us; 425us; 429us; 1us; 426us; 1us; 427us; 1us; 428us; 1us; 429us; 1us; 430us; 2us; 431us; 432us; 1us; 431us; 2us; 432us; 978us; 1us; 432us; 1us; 433us; 4us; 433us; 949us; 951us; 952us; 1us; 433us; 7us; 433us; 464us; 465us; 468us; 470us; 473us; 475us; 5us; 434us; 435us; 436us; 437us; 453us; 3us; 435us; 436us; 437us; 1us; 435us; 1us; 436us; 1us; 436us; 1us; 437us; 1us; 437us; 1us; 438us; 3us; 438us; 872us; 873us; 1us; 439us; 9us; 440us; 458us; 459us; 460us; 461us; 913us; 914us; 916us; 917us; 1us; 440us; 1us; 440us; 1us; 441us; 4us; 442us; 443us; 444us; 445us; 1us; 442us; 1us; 443us; 1us; 443us; 1us; 444us; 1us; 444us; 1us; 446us; 1us; 447us; 1us; 447us; 1us; 448us; 1us; 448us; 1us; 448us; 1us; 449us; 1us; 449us; 1us; 449us; 1us; 450us; 1us; 450us; 1us; 450us; 1us; 451us; 1us; 452us; 2us; 452us; 934us; 1us; 452us; 1us; 453us; 1us; 454us; 1us; 455us; 1us; 456us; 1us; 457us; 8us; 458us; 459us; 460us; 461us; 913us; 914us; 916us; 917us; 2us; 458us; 459us; 1us; 458us; 1us; 459us; 3us; 460us; 498us; 914us; 2us; 460us; 914us; 1us; 461us; 7us; 462us; 464us; 465us; 468us; 470us; 473us; 475us; 7us; 464us; 465us; 465us; 468us; 470us; 473us; 475us; 7us; 464us; 465us; 468us; 469us; 470us; 473us; 475us; 7us; 464us; 465us; 468us; 470us; 470us; 473us; 475us; 7us; 464us; 465us; 468us; 470us; 472us; 473us; 475us; 7us; 464us; 465us; 468us; 470us; 473us; 473us; 475us; 7us; 464us; 465us; 468us; 470us; 473us; 474us; 475us; 7us; 464us; 465us; 468us; 470us; 473us; 475us; 475us; 7us; 464us; 465us; 468us; 470us; 473us; 475us; 479us; 8us; 464us; 465us; 468us; 470us; 473us; 475us; 481us; 482us; 13us; 464us; 465us; 468us; 470us; 473us; 475us; 541us; 542us; 733us; 734us; 735us; 736us; 737us; 7us; 464us; 465us; 468us; 470us; 473us; 475us; 608us; 1us; 464us; 1us; 464us; 1us; 465us; 2us; 466us; 472us; 2us; 467us; 474us; 1us; 468us; 1us; 468us; 1us; 469us; 1us; 470us; 1us; 471us; 1us; 472us; 1us; 473us; 1us; 474us; 1us; 475us; 1us; 476us; 2us; 477us; 478us; 1us; 477us; 2us; 478us; 978us; 1us; 478us; 3us; 479us; 911us; 912us; 1us; 479us; 1us; 481us; 2us; 482us; 978us; 1us; 482us; 2us; 483us; 484us; 2us; 483us; 484us; 1us; 483us; 1us; 484us; 1us; 485us; 1us; 486us; 1us; 486us; 1us; 486us; 47us; 487us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 2us; 488us; 489us; 1us; 488us; 2us; 490us; 491us; 1us; 490us; 1us; 490us; 51us; 492us; 493us; 494us; 495us; 496us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 54us; 492us; 493us; 494us; 495us; 496us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 675us; 676us; 679us; 54us; 492us; 493us; 494us; 495us; 496us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 729us; 730us; 731us; 2us; 492us; 493us; 1us; 492us; 1us; 495us; 1us; 495us; 1us; 496us; 1us; 496us; 1us; 496us; 1us; 496us; 5us; 497us; 502us; 503us; 504us; 505us; 1us; 498us; 2us; 498us; 528us; 2us; 498us; 531us; 2us; 498us; 536us; 2us; 498us; 539us; 2us; 498us; 541us; 2us; 498us; 659us; 2us; 498us; 671us; 2us; 498us; 695us; 2us; 498us; 699us; 2us; 498us; 704us; 3us; 498us; 704us; 914us; 2us; 498us; 719us; 1us; 499us; 2us; 500us; 501us; 2us; 500us; 501us; 1us; 500us; 1us; 501us; 4us; 502us; 503us; 504us; 505us; 1us; 502us; 1us; 503us; 2us; 504us; 505us; 1us; 504us; 1us; 505us; 1us; 506us; 1us; 507us; 1us; 508us; 2us; 509us; 510us; 2us; 509us; 510us; 1us; 509us; 1us; 510us; 3us; 511us; 512us; 513us; 3us; 511us; 512us; 513us; 1us; 511us; 1us; 512us; 1us; 513us; 1us; 513us; 3us; 514us; 515us; 516us; 48us; 514us; 515us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 1us; 514us; 1us; 515us; 1us; 516us; 1us; 517us; 47us; 517us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 2us; 518us; 519us; 47us; 518us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 1us; 520us; 1us; 520us; 2us; 521us; 522us; 1us; 521us; 6us; 523us; 524us; 525us; 526us; 527us; 528us; 50us; 523us; 524us; 525us; 526us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 3us; 523us; 524us; 525us; 2us; 523us; 524us; 1us; 523us; 1us; 524us; 1us; 525us; 1us; 525us; 1us; 526us; 1us; 527us; 1us; 528us; 15us; 529us; 530us; 531us; 532us; 533us; 534us; 535us; 536us; 537us; 538us; 539us; 540us; 541us; 542us; 550us; 6us; 529us; 530us; 531us; 532us; 533us; 550us; 4us; 529us; 530us; 531us; 532us; 2us; 529us; 530us; 1us; 529us; 1us; 530us; 1us; 531us; 1us; 532us; 1us; 533us; 5us; 534us; 535us; 536us; 537us; 538us; 4us; 534us; 535us; 536us; 537us; 2us; 534us; 535us; 1us; 534us; 1us; 535us; 1us; 536us; 1us; 537us; 1us; 538us; 1us; 539us; 1us; 539us; 1us; 539us; 1us; 540us; 1us; 541us; 2us; 542us; 1030us; 1us; 543us; 47us; 543us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 1us; 544us; 47us; 544us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 1us; 545us; 1us; 545us; 1us; 545us; 1us; 545us; 1us; 545us; 1us; 545us; 2us; 546us; 547us; 2us; 546us; 547us; 2us; 546us; 547us; 2us; 546us; 547us; 2us; 546us; 547us; 1us; 546us; 1us; 547us; 1us; 548us; 1us; 548us; 1us; 548us; 1us; 548us; 1us; 548us; 1us; 549us; 1us; 549us; 1us; 549us; 1us; 550us; 1us; 550us; 1us; 551us; 1us; 551us; 47us; 552us; 553us; 554us; 555us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 614us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 618us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 622us; 629us; 630us; 48us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 625us; 626us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 627us; 629us; 630us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 630us; 49us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 675us; 676us; 679us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 675us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 677us; 50us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 729us; 730us; 731us; 733us; 48us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 729us; 730us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 730us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 737us; 47us; 552us; 553us; 554us; 555us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 573us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 629us; 630us; 737us; 1us; 552us; 1us; 552us; 1us; 553us; 1us; 553us; 1us; 554us; 1us; 554us; 1us; 555us; 2us; 556us; 598us; 1us; 556us; 1us; 556us; 3us; 557us; 627us; 628us; 2us; 558us; 578us; 2us; 559us; 579us; 2us; 560us; 580us; 2us; 561us; 581us; 2us; 562us; 582us; 2us; 563us; 583us; 2us; 564us; 584us; 2us; 565us; 585us; 2us; 566us; 586us; 2us; 567us; 587us; 2us; 568us; 588us; 2us; 569us; 589us; 2us; 570us; 590us; 2us; 571us; 591us; 2us; 572us; 592us; 2us; 573us; 593us; 2us; 574us; 594us; 2us; 575us; 595us; 2us; 576us; 596us; 2us; 577us; 597us; 1us; 578us; 1us; 579us; 1us; 580us; 1us; 581us; 1us; 582us; 1us; 583us; 1us; 584us; 1us; 585us; 1us; 586us; 1us; 587us; 1us; 588us; 1us; 589us; 1us; 590us; 1us; 591us; 1us; 592us; 1us; 593us; 1us; 594us; 1us; 595us; 1us; 596us; 1us; 597us; 1us; 599us; 1us; 600us; 1us; 600us; 1us; 600us; 1us; 601us; 1us; 601us; 2us; 602us; 603us; 2us; 602us; 603us; 1us; 602us; 1us; 603us; 1us; 604us; 2us; 605us; 606us; 1us; 605us; 1us; 606us; 1us; 607us; 1us; 608us; 5us; 609us; 610us; 611us; 612us; 613us; 4us; 609us; 610us; 611us; 612us; 2us; 610us; 611us; 1us; 610us; 1us; 611us; 1us; 612us; 1us; 613us; 1us; 614us; 1us; 616us; 1us; 616us; 1us; 617us; 1us; 617us; 1us; 618us; 2us; 619us; 620us; 2us; 619us; 620us; 2us; 619us; 620us; 1us; 619us; 1us; 620us; 1us; 622us; 2us; 623us; 624us; 2us; 623us; 624us; 2us; 623us; 624us; 1us; 623us; 1us; 624us; 2us; 625us; 626us; 1us; 625us; 1us; 626us; 2us; 627us; 628us; 1us; 628us; 2us; 629us; 630us; 1us; 629us; 1us; 631us; 2us; 631us; 928us; 1us; 631us; 1us; 632us; 2us; 632us; 924us; 1us; 632us; 1us; 633us; 2us; 633us; 927us; 1us; 633us; 1us; 634us; 2us; 634us; 940us; 1us; 634us; 1us; 635us; 2us; 635us; 935us; 1us; 635us; 1us; 636us; 2us; 636us; 936us; 1us; 636us; 3us; 637us; 638us; 639us; 7us; 637us; 638us; 639us; 773us; 774us; 775us; 776us; 2us; 637us; 638us; 6us; 637us; 638us; 773us; 774us; 775us; 776us; 2us; 637us; 638us; 4us; 637us; 638us; 774us; 775us; 1us; 637us; 3us; 637us; 774us; 775us; 1us; 638us; 1us; 639us; 1us; 640us; 1us; 640us; 1us; 641us; 1us; 641us; 2us; 642us; 643us; 6us; 642us; 643us; 749us; 753us; 754us; 755us; 1us; 643us; 6us; 644us; 647us; 648us; 649us; 651us; 654us; 1us; 645us; 6us; 645us; 647us; 648us; 649us; 651us; 654us; 6us; 646us; 647us; 648us; 649us; 651us; 654us; 6us; 647us; 647us; 648us; 649us; 651us; 654us; 6us; 647us; 648us; 648us; 649us; 651us; 654us; 6us; 647us; 648us; 649us; 650us; 651us; 654us; 6us; 647us; 648us; 649us; 651us; 654us; 867us; 1us; 647us; 1us; 648us; 1us; 649us; 1us; 649us; 1us; 650us; 2us; 650us; 918us; 1us; 651us; 1us; 651us; 1us; 652us; 1us; 652us; 1us; 652us; 1us; 653us; 2us; 653us; 934us; 1us; 653us; 1us; 654us; 1us; 654us; 1us; 655us; 1us; 656us; 4us; 657us; 658us; 659us; 660us; 2us; 657us; 658us; 1us; 657us; 1us; 658us; 1us; 659us; 1us; 660us; 1us; 661us; 1us; 662us; 1us; 664us; 6us; 665us; 666us; 913us; 914us; 916us; 917us; 1us; 665us; 1us; 665us; 1us; 665us; 1us; 665us; 1us; 666us; 1us; 666us; 6us; 667us; 668us; 669us; 670us; 671us; 672us; 2us; 667us; 668us; 1us; 667us; 1us; 668us; 2us; 669us; 670us; 1us; 669us; 1us; 670us; 1us; 671us; 1us; 672us; 2us; 673us; 674us; 1us; 673us; 1us; 673us; 2us; 675us; 676us; 1us; 677us; 1us; 678us; 1us; 680us; 1us; 681us; 1us; 682us; 1us; 683us; 1us; 684us; 1us; 685us; 1us; 686us; 1us; 687us; 1us; 688us; 4us; 689us; 690us; 691us; 692us; 2us; 689us; 690us; 1us; 689us; 1us; 690us; 1us; 691us; 1us; 691us; 1us; 692us; 4us; 693us; 694us; 695us; 696us; 5us; 693us; 694us; 695us; 696us; 943us; 2us; 693us; 694us; 1us; 693us; 1us; 694us; 1us; 695us; 1us; 696us; 4us; 697us; 698us; 699us; 700us; 2us; 697us; 698us; 1us; 697us; 1us; 698us; 1us; 699us; 1us; 700us; 9us; 701us; 702us; 703us; 704us; 705us; 706us; 707us; 708us; 709us; 14us; 701us; 702us; 703us; 704us; 705us; 706us; 707us; 708us; 709us; 714us; 913us; 914us; 916us; 917us; 13us; 701us; 702us; 703us; 704us; 705us; 706us; 707us; 708us; 709us; 913us; 914us; 916us; 917us; 1us; 701us; 2us; 702us; 703us; 1us; 702us; 1us; 703us; 1us; 704us; 2us; 704us; 914us; 1us; 705us; 1us; 706us; 1us; 707us; 1us; 708us; 1us; 709us; 1us; 710us; 1us; 710us; 1us; 710us; 1us; 710us; 1us; 710us; 1us; 710us; 1us; 711us; 1us; 712us; 1us; 713us; 2us; 713us; 716us; 2us; 714us; 715us; 1us; 714us; 1us; 715us; 1us; 715us; 5us; 717us; 718us; 719us; 720us; 721us; 2us; 717us; 718us; 1us; 717us; 1us; 718us; 1us; 719us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 723us; 1us; 724us; 1us; 725us; 1us; 727us; 1us; 728us; 3us; 729us; 730us; 731us; 1us; 730us; 1us; 731us; 1us; 732us; 1us; 732us; 3us; 733us; 734us; 735us; 1us; 734us; 1us; 735us; 1us; 736us; 1us; 737us; 1us; 737us; 1us; 738us; 1us; 738us; 1us; 738us; 2us; 738us; 739us; 1us; 738us; 1us; 738us; 1us; 739us; 1us; 742us; 1us; 744us; 1us; 744us; 1us; 744us; 1us; 744us; 2us; 746us; 747us; 1us; 746us; 5us; 747us; 835us; 863us; 864us; 870us; 1us; 747us; 1us; 748us; 1us; 748us; 1us; 748us; 1us; 748us; 2us; 748us; 764us; 1us; 748us; 1us; 749us; 1us; 749us; 2us; 749us; 764us; 1us; 749us; 3us; 750us; 751us; 752us; 2us; 751us; 752us; 1us; 752us; 2us; 752us; 764us; 1us; 752us; 1us; 753us; 1us; 753us; 2us; 753us; 764us; 1us; 753us; 2us; 754us; 755us; 1us; 754us; 1us; 754us; 1us; 755us; 2us; 755us; 764us; 1us; 755us; 1us; 755us; 1us; 756us; 2us; 756us; 764us; 2us; 758us; 761us; 2us; 759us; 760us; 1us; 760us; 1us; 761us; 3us; 762us; 911us; 912us; 1us; 763us; 1us; 764us; 5us; 766us; 767us; 768us; 769us; 770us; 3us; 766us; 767us; 768us; 1us; 766us; 1us; 768us; 1us; 770us; 2us; 771us; 772us; 1us; 771us; 1us; 771us; 1us; 771us; 1us; 772us; 1us; 772us; 1us; 774us; 1us; 777us; 2us; 779us; 781us; 1us; 779us; 1us; 780us; 1us; 780us; 1us; 780us; 1us; 781us; 1us; 781us; 1us; 782us; 1us; 782us; 1us; 784us; 1us; 784us; 1us; 785us; 1us; 785us; 1us; 786us; 4us; 786us; 832us; 833us; 834us; 1us; 786us; 1us; 786us; 1us; 786us; 1us; 787us; 1us; 788us; 2us; 789us; 790us; 2us; 789us; 790us; 2us; 789us; 790us; 1us; 789us; 1us; 790us; 6us; 791us; 792us; 793us; 794us; 795us; 796us; 5us; 791us; 792us; 793us; 794us; 795us; 4us; 791us; 792us; 793us; 794us; 2us; 791us; 792us; 1us; 791us; 1us; 792us; 1us; 793us; 1us; 793us; 1us; 794us; 1us; 795us; 1us; 795us; 1us; 796us; 1us; 796us; 1us; 797us; 1us; 797us; 1us; 798us; 1us; 798us; 1us; 798us; 2us; 799us; 800us; 1us; 800us; 2us; 801us; 802us; 1us; 802us; 1us; 804us; 1us; 804us; 2us; 805us; 806us; 1us; 805us; 1us; 805us; 2us; 807us; 808us; 1us; 807us; 1us; 807us; 2us; 809us; 810us; 1us; 809us; 1us; 809us; 3us; 811us; 812us; 813us; 5us; 811us; 813us; 832us; 833us; 834us; 1us; 811us; 4us; 811us; 832us; 833us; 834us; 1us; 812us; 1us; 812us; 1us; 812us; 4us; 812us; 832us; 833us; 834us; 5us; 814us; 816us; 832us; 833us; 834us; 1us; 814us; 4us; 814us; 832us; 833us; 834us; 1us; 815us; 1us; 815us; 1us; 815us; 4us; 815us; 832us; 833us; 834us; 2us; 817us; 818us; 1us; 817us; 1us; 817us; 6us; 819us; 821us; 822us; 832us; 833us; 834us; 1us; 819us; 1us; 819us; 1us; 820us; 1us; 820us; 1us; 821us; 1us; 821us; 6us; 823us; 824us; 825us; 832us; 833us; 834us; 1us; 823us; 1us; 823us; 1us; 824us; 1us; 824us; 3us; 828us; 911us; 912us; 1us; 829us; 2us; 829us; 837us; 3us; 829us; 837us; 855us; 2us; 830us; 831us; 4us; 830us; 831us; 871us; 874us; 1us; 830us; 1us; 830us; 6us; 832us; 833us; 834us; 850us; 851us; 852us; 1us; 832us; 2us; 832us; 850us; 1us; 833us; 2us; 833us; 851us; 1us; 833us; 2us; 833us; 851us; 1us; 834us; 2us; 834us; 852us; 5us; 835us; 853us; 863us; 864us; 870us; 4us; 835us; 863us; 864us; 870us; 1us; 835us; 2us; 835us; 853us; 1us; 835us; 2us; 835us; 853us; 1us; 835us; 2us; 835us; 853us; 1us; 836us; 1us; 837us; 2us; 837us; 855us; 1us; 837us; 2us; 837us; 855us; 3us; 838us; 856us; 862us; 2us; 838us; 862us; 1us; 838us; 2us; 838us; 856us; 1us; 838us; 2us; 838us; 856us; 4us; 839us; 840us; 841us; 842us; 1us; 839us; 3us; 840us; 841us; 842us; 1us; 840us; 2us; 841us; 842us; 1us; 841us; 1us; 842us; 1us; 842us; 1us; 843us; 1us; 843us; 1us; 843us; 3us; 843us; 844us; 845us; 4us; 844us; 845us; 877us; 878us; 2us; 844us; 845us; 1us; 844us; 1us; 845us; 8us; 847us; 848us; 849us; 857us; 858us; 859us; 872us; 873us; 5us; 847us; 848us; 849us; 872us; 873us; 2us; 848us; 849us; 4us; 848us; 849us; 858us; 859us; 1us; 848us; 2us; 848us; 858us; 1us; 849us; 2us; 849us; 859us; 1us; 849us; 2us; 849us; 859us; 1us; 854us; 1us; 860us; 3us; 860us; 872us; 873us; 1us; 861us; 1us; 862us; 3us; 863us; 864us; 870us; 2us; 863us; 864us; 5us; 863us; 864us; 884us; 885us; 886us; 1us; 863us; 1us; 864us; 1us; 865us; 1us; 866us; 1us; 867us; 1us; 868us; 1us; 869us; 1us; 870us; 1us; 870us; 1us; 871us; 2us; 872us; 873us; 4us; 872us; 873us; 911us; 912us; 1us; 873us; 1us; 874us; 1us; 874us; 1us; 875us; 1us; 876us; 1us; 876us; 7us; 877us; 878us; 879us; 880us; 881us; 882us; 883us; 3us; 877us; 878us; 879us; 3us; 877us; 878us; 879us; 2us; 877us; 878us; 1us; 877us; 1us; 878us; 1us; 879us; 3us; 880us; 881us; 887us; 1us; 880us; 1us; 881us; 1us; 882us; 1us; 883us; 3us; 884us; 885us; 886us; 2us; 885us; 886us; 1us; 885us; 1us; 887us; 1us; 888us; 2us; 890us; 891us; 3us; 890us; 902us; 903us; 1us; 890us; 1us; 891us; 1us; 891us; 3us; 892us; 911us; 912us; 1us; 893us; 1us; 894us; 3us; 894us; 902us; 903us; 1us; 894us; 3us; 895us; 896us; 897us; 2us; 896us; 897us; 1us; 896us; 1us; 897us; 1us; 897us; 1us; 898us; 2us; 899us; 900us; 1us; 900us; 1us; 901us; 3us; 902us; 902us; 903us; 3us; 902us; 903us; 903us; 3us; 902us; 903us; 904us; 1us; 902us; 1us; 903us; 1us; 904us; 1us; 905us; 1us; 905us; 1us; 906us; 1us; 907us; 2us; 907us; 921us; 1us; 907us; 1us; 908us; 1us; 909us; 1us; 910us; 2us; 911us; 912us; 1us; 911us; 1us; 912us; 4us; 913us; 914us; 916us; 917us; 1us; 913us; 1us; 913us; 1us; 914us; 1us; 914us; 1us; 915us; 3us; 916us; 917us; 946us; 3us; 916us; 917us; 946us; 1us; 916us; 1us; 917us; 1us; 917us; 1us; 917us; 1us; 918us; 1us; 919us; 1us; 920us; 1us; 921us; 1us; 922us; 1us; 923us; 1us; 924us; 1us; 925us; 1us; 926us; 1us; 927us; 1us; 928us; 1us; 929us; 1us; 930us; 1us; 931us; 1us; 932us; 1us; 933us; 1us; 934us; 1us; 935us; 1us; 936us; 1us; 937us; 1us; 938us; 1us; 939us; 1us; 940us; 2us; 941us; 942us; 1us; 942us; 1us; 943us; 1us; 943us; 1us; 944us; 1us; 945us; 1us; 945us; 1us; 946us; 1us; 947us; 1us; 948us; 3us; 949us; 951us; 952us; 1us; 950us; 2us; 951us; 952us; 1us; 951us; 1us; 952us; 1us; 953us; 1us; 954us; 1us; 955us; 1us; 956us; 2us; 957us; 958us; 1us; 958us; 1us; 959us; 1us; 959us; 2us; 961us; 963us; 2us; 962us; 964us; 1us; 963us; 1us; 964us; 1us; 965us; 1us; 966us; 1us; 967us; 1us; 968us; 1us; 969us; 1us; 970us; 1us; 972us; 1us; 974us; 1us; 976us; 1us; 978us; 1us; 980us; 1us; 984us; 1us; 986us; 1us; 988us; 1us; 989us; 1us; 990us; 1us; 991us; 1us; 992us; 1us; 993us; 1us; 994us; 1us; 995us; 1us; 996us; 1us; 997us; 1us; 998us; 1us; 999us; 1us; 1000us; 1us; 1001us; 1us; 1003us; 1us; 1005us; 2us; 1005us; 1025us; 1us; 1005us; 1us; 1006us; 1us; 1007us; 1us; 1008us; 2us; 1008us; 1026us; 1us; 1008us; 1us; 1009us; 1us; 1010us; 1us; 1011us; 1us; 1011us; 1us; 1012us; 1us; 1013us; 1us; 1014us; 1us; 1014us; 1us; 1015us; 1us; 1016us; 1us; 1017us; 1us; 1017us; 1us; 1018us; 1us; 1019us; 1us; 1020us; 1us; 1021us; 1us; 1022us; 1us; 1023us; 1us; 1024us; 1us; 1025us; 1us; 1026us; 1us; 1027us; 1us; 1028us; 1us; 1029us; 1us; 1030us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 29us; 32us; 34us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 54us; 56us; 64us; 72us; 120us; 122us; 125us; 127us; 129us; 131us; 133us; 135us; 138us; 140us; 142us; 145us; 147us; 149us; 151us; 155us; 157us; 159us; 161us; 165us; 167us; 171us; 174us; 176us; 179us; 181us; 183us; 185us; 187us; 194us; 201us; 205us; 207us; 209us; 211us; 215us; 218us; 220us; 222us; 224us; 228us; 230us; 232us; 235us; 238us; 241us; 243us; 245us; 247us; 249us; 251us; 253us; 259us; 265us; 268us; 271us; 273us; 275us; 277us; 279us; 281us; 285us; 287us; 289us; 291us; 293us; 295us; 297us; 299us; 301us; 303us; 305us; 308us; 356us; 358us; 406us; 408us; 412us; 414us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; 434us; 437us; 439us; 441us; 444us; 446us; 448us; 450us; 454us; 456us; 458us; 460us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 480us; 482us; 486us; 489us; 491us; 493us; 495us; 497us; 500us; 503us; 505us; 507us; 510us; 513us; 515us; 517us; 520us; 523us; 525us; 527us; 529us; 531us; 533us; 535us; 537us; 545us; 558us; 566us; 579us; 581us; 583us; 585us; 587us; 589us; 591us; 593us; 595us; 597us; 599us; 604us; 606us; 611us; 613us; 615us; 619us; 621us; 623us; 625us; 627us; 629us; 631us; 633us; 635us; 637us; 640us; 643us; 645us; 647us; 650us; 652us; 654us; 656us; 659us; 661us; 663us; 665us; 667us; 669us; 671us; 674us; 676us; 678us; 680us; 683us; 685us; 688us; 690us; 693us; 695us; 697us; 699us; 701us; 713us; 724us; 727us; 729us; 731us; 735us; 738us; 740us; 742us; 744us; 747us; 749us; 751us; 753us; 764us; 774us; 824us; 827us; 829us; 831us; 833us; 838us; 840us; 843us; 845us; 847us; 850us; 853us; 855us; 857us; 859us; 861us; 868us; 875us; 877us; 881us; 883us; 889us; 891us; 893us; 895us; 897us; 899us; 901us; 903us; 905us; 908us; 910us; 912us; 916us; 918us; 922us; 928us; 931us; 933us; 935us; 938us; 940us; 942us; 944us; 946us; 950us; 954us; 957us; 959us; 961us; 963us; 965us; 967us; 969us; 971us; 974us; 976us; 981us; 985us; 988us; 990us; 992us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1008us; 1010us; 1014us; 1016us; 1018us; 1021us; 1025us; 1027us; 1029us; 1031us; 1035us; 1037us; 1039us; 1041us; 1043us; 1045us; 1047us; 1049us; 1052us; 1054us; 1056us; 1058us; 1063us; 1065us; 1067us; 1069us; 1071us; 1073us; 1075us; 1077us; 1079us; 1081us; 1083us; 1088us; 1090us; 1092us; 1094us; 1096us; 1098us; 1100us; 1102us; 1104us; 1106us; 1108us; 1113us; 1116us; 1119us; 1122us; 1125us; 1127us; 1129us; 1131us; 1133us; 1135us; 1137us; 1139us; 1141us; 1143us; 1145us; 1147us; 1151us; 1154us; 1156us; 1158us; 1161us; 1163us; 1166us; 1169us; 1171us; 1173us; 1176us; 1179us; 1181us; 1183us; 1185us; 1187us; 1189us; 1191us; 1193us; 1195us; 1197us; 1199us; 1201us; 1204us; 1207us; 1209us; 1211us; 1214us; 1216us; 1218us; 1220us; 1222us; 1224us; 1226us; 1228us; 1230us; 1233us; 1236us; 1239us; 1241us; 1243us; 1245us; 1248us; 1250us; 1262us; 1279us; 1291us; 1308us; 1310us; 1312us; 1315us; 1317us; 1319us; 1321us; 1326us; 1328us; 1330us; 1332us; 1334us; 1336us; 1338us; 1340us; 1342us; 1344us; 1346us; 1348us; 1350us; 1352us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1424us; 1426us; 1428us; 1430us; 1432us; 1434us; 1436us; 1438us; 1440us; 1444us; 1447us; 1449us; 1451us; 1453us; 1455us; 1457us; 1459us; 1461us; 1463us; 1465us; 1468us; 1470us; 1472us; 1475us; 1478us; 1480us; 1482us; 1484us; 1487us; 1490us; 1492us; 1497us; 1503us; 1507us; 1509us; 1511us; 1513us; 1515us; 1517us; 1519us; 1521us; 1523us; 1525us; 1527us; 1533us; 1539us; 1544us; 1546us; 1548us; 1550us; 1552us; 1554us; 1556us; 1562us; 1564us; 1566us; 1570us; 1573us; 1575us; 1577us; 1579us; 1581us; 1584us; 1587us; 1589us; 1591us; 1593us; 1595us; 1597us; 1599us; 1603us; 1608us; 1610us; 1614us; 1616us; 1618us; 1620us; 1623us; 1625us; 1628us; 1632us; 1634us; 1637us; 1639us; 1641us; 1643us; 1645us; 1647us; 1649us; 1651us; 1653us; 1655us; 1657us; 1659us; 1661us; 1663us; 1665us; 1667us; 1670us; 1672us; 1675us; 1678us; 1681us; 1683us; 1685us; 1687us; 1689us; 1691us; 1693us; 1695us; 1704us; 1706us; 1708us; 1716us; 1718us; 1722us; 1724us; 1726us; 1728us; 1730us; 1732us; 1734us; 1737us; 1739us; 1741us; 1743us; 1745us; 1747us; 1749us; 1751us; 1753us; 1755us; 1757us; 1759us; 1761us; 1763us; 1765us; 1767us; 1769us; 1772us; 1774us; 1777us; 1779us; 1781us; 1786us; 1791us; 1796us; 1798us; 1800us; 1802us; 1804us; 1806us; 1808us; 1810us; 1812us; 1814us; 1816us; 1818us; 1825us; 1827us; 1829us; 1831us; 1833us; 1835us; 1841us; 1843us; 1846us; 1849us; 1852us; 1854us; 1856us; 1858us; 1861us; 1863us; 1865us; 1868us; 1870us; 1875us; 1880us; 1882us; 1884us; 1887us; 1890us; 1892us; 1894us; 1896us; 1898us; 1900us; 1902us; 1904us; 1906us; 1908us; 1910us; 1912us; 1914us; 1916us; 1918us; 1920us; 1922us; 1924us; 1927us; 1929us; 1931us; 1933us; 1937us; 1939us; 1943us; 1945us; 1947us; 1949us; 1951us; 1953us; 1955us; 1957us; 1959us; 1961us; 1963us; 1965us; 1967us; 1969us; 1971us; 1973us; 1975us; 1977us; 1979us; 1981us; 1983us; 1985us; 1987us; 1989us; 1991us; 1993us; 1995us; 1997us; 2000us; 2003us; 2005us; 2007us; 2009us; 2011us; 2014us; 2020us; 2022us; 2026us; 2031us; 2033us; 2035us; 2037us; 2039us; 2041us; 2043us; 2046us; 2048us; 2051us; 2053us; 2055us; 2057us; 2059us; 2061us; 2063us; 2065us; 2067us; 2071us; 2075us; 2079us; 2083us; 2086us; 2088us; 2090us; 2092us; 2095us; 2098us; 2100us; 2102us; 2104us; 2106us; 2109us; 2111us; 2113us; 2116us; 2118us; 2120us; 2122us; 2124us; 2126us; 2129us; 2131us; 2133us; 2135us; 2137us; 2139us; 2141us; 2143us; 2145us; 2147us; 2149us; 2151us; 2153us; 2155us; 2157us; 2159us; 2161us; 2164us; 2166us; 2168us; 2170us; 2172us; 2175us; 2177us; 2179us; 2186us; 2188us; 2190us; 2192us; 2195us; 2199us; 2201us; 2203us; 2205us; 2207us; 2209us; 2215us; 2218us; 2220us; 2222us; 2224us; 2227us; 2229us; 2231us; 2238us; 2245us; 2252us; 2259us; 2266us; 2273us; 2280us; 2288us; 2290us; 2292us; 2294us; 2296us; 2299us; 2302us; 2304us; 2306us; 2308us; 2310us; 2312us; 2315us; 2317us; 2320us; 2322us; 2324us; 2329us; 2331us; 2339us; 2345us; 2349us; 2351us; 2353us; 2355us; 2357us; 2359us; 2361us; 2365us; 2367us; 2377us; 2379us; 2381us; 2383us; 2388us; 2390us; 2392us; 2394us; 2396us; 2398us; 2400us; 2402us; 2404us; 2406us; 2408us; 2410us; 2412us; 2414us; 2416us; 2418us; 2420us; 2422us; 2424us; 2426us; 2429us; 2431us; 2433us; 2435us; 2437us; 2439us; 2441us; 2450us; 2453us; 2455us; 2457us; 2461us; 2464us; 2466us; 2474us; 2482us; 2490us; 2498us; 2506us; 2514us; 2522us; 2530us; 2538us; 2547us; 2561us; 2569us; 2571us; 2573us; 2575us; 2578us; 2581us; 2583us; 2585us; 2587us; 2589us; 2591us; 2593us; 2595us; 2597us; 2599us; 2601us; 2604us; 2606us; 2609us; 2611us; 2615us; 2617us; 2619us; 2622us; 2624us; 2627us; 2630us; 2632us; 2634us; 2636us; 2638us; 2640us; 2642us; 2690us; 2693us; 2695us; 2698us; 2700us; 2702us; 2754us; 2809us; 2864us; 2867us; 2869us; 2871us; 2873us; 2875us; 2877us; 2879us; 2881us; 2887us; 2889us; 2892us; 2895us; 2898us; 2901us; 2904us; 2907us; 2910us; 2913us; 2916us; 2919us; 2923us; 2926us; 2928us; 2931us; 2934us; 2936us; 2938us; 2943us; 2945us; 2947us; 2950us; 2952us; 2954us; 2956us; 2958us; 2960us; 2963us; 2966us; 2968us; 2970us; 2974us; 2978us; 2980us; 2982us; 2984us; 2986us; 2990us; 3039us; 3041us; 3043us; 3045us; 3047us; 3095us; 3098us; 3146us; 3148us; 3150us; 3153us; 3155us; 3162us; 3213us; 3217us; 3220us; 3222us; 3224us; 3226us; 3228us; 3230us; 3232us; 3234us; 3250us; 3257us; 3262us; 3265us; 3267us; 3269us; 3271us; 3273us; 3275us; 3281us; 3286us; 3289us; 3291us; 3293us; 3295us; 3297us; 3299us; 3301us; 3303us; 3305us; 3307us; 3309us; 3312us; 3314us; 3362us; 3364us; 3412us; 3414us; 3416us; 3418us; 3420us; 3422us; 3424us; 3427us; 3430us; 3433us; 3436us; 3439us; 3441us; 3443us; 3445us; 3447us; 3449us; 3451us; 3453us; 3455us; 3457us; 3459us; 3461us; 3463us; 3465us; 3467us; 3515us; 3563us; 3611us; 3659us; 3707us; 3755us; 3803us; 3851us; 3899us; 3947us; 3995us; 4043us; 4091us; 4139us; 4187us; 4235us; 4283us; 4331us; 4379us; 4427us; 4475us; 4523us; 4571us; 4619us; 4668us; 4716us; 4764us; 4814us; 4862us; 4910us; 4961us; 5010us; 5058us; 5106us; 5154us; 5156us; 5158us; 5160us; 5162us; 5164us; 5166us; 5168us; 5171us; 5173us; 5175us; 5179us; 5182us; 5185us; 5188us; 5191us; 5194us; 5197us; 5200us; 5203us; 5206us; 5209us; 5212us; 5215us; 5218us; 5221us; 5224us; 5227us; 5230us; 5233us; 5236us; 5239us; 5241us; 5243us; 5245us; 5247us; 5249us; 5251us; 5253us; 5255us; 5257us; 5259us; 5261us; 5263us; 5265us; 5267us; 5269us; 5271us; 5273us; 5275us; 5277us; 5279us; 5281us; 5283us; 5285us; 5287us; 5289us; 5291us; 5294us; 5297us; 5299us; 5301us; 5303us; 5306us; 5308us; 5310us; 5312us; 5314us; 5320us; 5325us; 5328us; 5330us; 5332us; 5334us; 5336us; 5338us; 5340us; 5342us; 5344us; 5346us; 5348us; 5351us; 5354us; 5357us; 5359us; 5361us; 5363us; 5366us; 5369us; 5372us; 5374us; 5376us; 5379us; 5381us; 5383us; 5386us; 5388us; 5391us; 5393us; 5395us; 5398us; 5400us; 5402us; 5405us; 5407us; 5409us; 5412us; 5414us; 5416us; 5419us; 5421us; 5423us; 5426us; 5428us; 5430us; 5433us; 5435us; 5439us; 5447us; 5450us; 5457us; 5460us; 5465us; 5467us; 5471us; 5473us; 5475us; 5477us; 5479us; 5481us; 5483us; 5486us; 5493us; 5495us; 5502us; 5504us; 5511us; 5518us; 5525us; 5532us; 5539us; 5546us; 5548us; 5550us; 5552us; 5554us; 5556us; 5559us; 5561us; 5563us; 5565us; 5567us; 5569us; 5571us; 5574us; 5576us; 5578us; 5580us; 5582us; 5584us; 5589us; 5592us; 5594us; 5596us; 5598us; 5600us; 5602us; 5604us; 5606us; 5613us; 5615us; 5617us; 5619us; 5621us; 5623us; 5625us; 5632us; 5635us; 5637us; 5639us; 5642us; 5644us; 5646us; 5648us; 5650us; 5653us; 5655us; 5657us; 5660us; 5662us; 5664us; 5666us; 5668us; 5670us; 5672us; 5674us; 5676us; 5678us; 5680us; 5682us; 5687us; 5690us; 5692us; 5694us; 5696us; 5698us; 5700us; 5705us; 5711us; 5714us; 5716us; 5718us; 5720us; 5722us; 5727us; 5730us; 5732us; 5734us; 5736us; 5738us; 5748us; 5763us; 5777us; 5779us; 5782us; 5784us; 5786us; 5788us; 5791us; 5793us; 5795us; 5797us; 5799us; 5801us; 5803us; 5805us; 5807us; 5809us; 5811us; 5813us; 5815us; 5817us; 5819us; 5822us; 5825us; 5827us; 5829us; 5831us; 5837us; 5840us; 5842us; 5844us; 5846us; 5848us; 5850us; 5852us; 5854us; 5856us; 5858us; 5860us; 5862us; 5866us; 5868us; 5870us; 5872us; 5874us; 5878us; 5880us; 5882us; 5884us; 5886us; 5888us; 5890us; 5892us; 5894us; 5897us; 5899us; 5901us; 5903us; 5905us; 5907us; 5909us; 5911us; 5913us; 5916us; 5918us; 5924us; 5926us; 5928us; 5930us; 5932us; 5934us; 5937us; 5939us; 5941us; 5943us; 5946us; 5948us; 5952us; 5955us; 5957us; 5960us; 5962us; 5964us; 5966us; 5969us; 5971us; 5974us; 5976us; 5978us; 5980us; 5983us; 5985us; 5987us; 5989us; 5992us; 5995us; 5998us; 6000us; 6002us; 6006us; 6008us; 6010us; 6016us; 6020us; 6022us; 6024us; 6026us; 6029us; 6031us; 6033us; 6035us; 6037us; 6039us; 6041us; 6043us; 6046us; 6048us; 6050us; 6052us; 6054us; 6056us; 6058us; 6060us; 6062us; 6064us; 6066us; 6068us; 6070us; 6072us; 6077us; 6079us; 6081us; 6083us; 6085us; 6087us; 6090us; 6093us; 6096us; 6098us; 6100us; 6107us; 6113us; 6118us; 6121us; 6123us; 6125us; 6127us; 6129us; 6131us; 6133us; 6135us; 6137us; 6139us; 6141us; 6143us; 6145us; 6147us; 6149us; 6152us; 6154us; 6157us; 6159us; 6161us; 6163us; 6166us; 6168us; 6170us; 6173us; 6175us; 6177us; 6180us; 6182us; 6184us; 6188us; 6194us; 6196us; 6201us; 6203us; 6205us; 6207us; 6212us; 6218us; 6220us; 6225us; 6227us; 6229us; 6231us; 6236us; 6239us; 6241us; 6243us; 6250us; 6252us; 6254us; 6256us; 6258us; 6260us; 6262us; 6269us; 6271us; 6273us; 6275us; 6277us; 6281us; 6283us; 6286us; 6290us; 6293us; 6298us; 6300us; 6302us; 6309us; 6311us; 6314us; 6316us; 6319us; 6321us; 6324us; 6326us; 6329us; 6335us; 6340us; 6342us; 6345us; 6347us; 6350us; 6352us; 6355us; 6357us; 6359us; 6362us; 6364us; 6367us; 6371us; 6374us; 6376us; 6379us; 6381us; 6384us; 6389us; 6391us; 6395us; 6397us; 6400us; 6402us; 6404us; 6406us; 6408us; 6410us; 6412us; 6416us; 6421us; 6424us; 6426us; 6428us; 6437us; 6443us; 6446us; 6451us; 6453us; 6456us; 6458us; 6461us; 6463us; 6466us; 6468us; 6470us; 6474us; 6476us; 6478us; 6482us; 6485us; 6491us; 6493us; 6495us; 6497us; 6499us; 6501us; 6503us; 6505us; 6507us; 6509us; 6511us; 6514us; 6519us; 6521us; 6523us; 6525us; 6527us; 6529us; 6531us; 6539us; 6543us; 6547us; 6550us; 6552us; 6554us; 6556us; 6560us; 6562us; 6564us; 6566us; 6568us; 6572us; 6575us; 6577us; 6579us; 6581us; 6584us; 6588us; 6590us; 6592us; 6594us; 6598us; 6600us; 6602us; 6606us; 6608us; 6612us; 6615us; 6617us; 6619us; 6621us; 6623us; 6626us; 6628us; 6630us; 6634us; 6638us; 6642us; 6644us; 6646us; 6648us; 6650us; 6652us; 6654us; 6656us; 6659us; 6661us; 6663us; 6665us; 6667us; 6670us; 6672us; 6674us; 6679us; 6681us; 6683us; 6685us; 6687us; 6689us; 6693us; 6697us; 6699us; 6701us; 6703us; 6705us; 6707us; 6709us; 6711us; 6713us; 6715us; 6717us; 6719us; 6721us; 6723us; 6725us; 6727us; 6729us; 6731us; 6733us; 6735us; 6737us; 6739us; 6741us; 6743us; 6745us; 6747us; 6749us; 6751us; 6754us; 6756us; 6758us; 6760us; 6762us; 6764us; 6766us; 6768us; 6770us; 6772us; 6776us; 6778us; 6781us; 6783us; 6785us; 6787us; 6789us; 6791us; 6793us; 6796us; 6798us; 6800us; 6802us; 6805us; 6808us; 6810us; 6812us; 6814us; 6816us; 6818us; 6820us; 6822us; 6824us; 6826us; 6828us; 6830us; 6832us; 6834us; 6836us; 6838us; 6840us; 6842us; 6844us; 6846us; 6848us; 6850us; 6852us; 6854us; 6856us; 6858us; 6860us; 6862us; 6864us; 6866us; 6868us; 6870us; 6873us; 6875us; 6877us; 6879us; 6881us; 6884us; 6886us; 6888us; 6890us; 6892us; 6894us; 6896us; 6898us; 6900us; 6902us; 6904us; 6906us; 6908us; 6910us; 6912us; 6914us; 6916us; 6918us; 6920us; 6922us; 6924us; 6926us; 6928us; 6930us; 6932us; 6934us; |]
let _fsyacc_action_rows = 1768
let _fsyacc_actionTableElements = [|16us; 16429us; 21us; 63us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 72us; 292us; 87us; 34us; 100us; 88us; 107us; 16540us; 108us; 16540us; 119us; 16540us; 147us; 16540us; 192us; 43us; 0us; 49152us; 82us; 16505us; 21us; 224us; 23us; 16540us; 24us; 16540us; 28us; 16540us; 29us; 16540us; 30us; 16540us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 61us; 16540us; 70us; 16540us; 71us; 16540us; 72us; 292us; 73us; 16540us; 74us; 16540us; 85us; 16540us; 87us; 34us; 88us; 16540us; 89us; 16540us; 91us; 16540us; 97us; 16540us; 99us; 16540us; 100us; 671us; 105us; 16540us; 106us; 16540us; 107us; 16540us; 113us; 16540us; 114us; 16540us; 115us; 16540us; 117us; 16540us; 119us; 16540us; 120us; 16540us; 121us; 16540us; 122us; 16540us; 123us; 16540us; 124us; 16540us; 128us; 16540us; 131us; 16540us; 132us; 16540us; 134us; 16540us; 135us; 16540us; 143us; 16540us; 144us; 16540us; 145us; 16540us; 147us; 16540us; 151us; 16540us; 152us; 16540us; 155us; 16540us; 156us; 16540us; 159us; 16540us; 160us; 16540us; 161us; 16540us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 179us; 16540us; 180us; 16540us; 183us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 192us; 210us; 0us; 49152us; 7us; 16540us; 10us; 10us; 20us; 8us; 67us; 9us; 72us; 292us; 83us; 7us; 87us; 34us; 100us; 671us; 0us; 49152us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 4us; 32768us; 10us; 10us; 20us; 33us; 67us; 9us; 83us; 32us; 0us; 16393us; 4us; 32768us; 10us; 10us; 20us; 33us; 67us; 9us; 83us; 32us; 0us; 16394us; 4us; 32768us; 10us; 10us; 20us; 33us; 67us; 9us; 83us; 32us; 0us; 16395us; 5us; 16540us; 10us; 10us; 67us; 9us; 72us; 292us; 87us; 34us; 100us; 671us; 0us; 16396us; 5us; 16540us; 10us; 10us; 67us; 9us; 72us; 292us; 87us; 34us; 100us; 671us; 0us; 16397us; 5us; 16540us; 10us; 10us; 67us; 9us; 72us; 292us; 87us; 34us; 100us; 671us; 0us; 16398us; 16us; 16399us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 72us; 292us; 100us; 671us; 107us; 16540us; 119us; 16540us; 135us; 16540us; 147us; 16540us; 159us; 16540us; 0us; 16400us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 74us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1735us; 36us; 1738us; 37us; 1740us; 38us; 1743us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 107us; 1739us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 119us; 660us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 135us; 677us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 147us; 1744us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 25us; 16401us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 0us; 16402us; 2us; 16403us; 20us; 33us; 83us; 32us; 0us; 16404us; 0us; 16405us; 0us; 16406us; 1us; 32768us; 188us; 35us; 0us; 16408us; 2us; 16407us; 189us; 1731us; 190us; 1730us; 0us; 16409us; 0us; 16410us; 2us; 32768us; 10us; 40us; 192us; 41us; 0us; 16411us; 1us; 32768us; 10us; 42us; 0us; 16412us; 4us; 16428us; 10us; 44us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 0us; 16413us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 1us; 16414us; 76us; 1642us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 1us; 16415us; 76us; 1642us; 1us; 16416us; 148us; 48us; 0us; 16417us; 1us; 16419us; 148us; 48us; 0us; 16418us; 1us; 17359us; 69us; 1714us; 16us; 16429us; 21us; 63us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 72us; 292us; 87us; 34us; 100us; 88us; 107us; 16540us; 108us; 16540us; 119us; 16540us; 147us; 16540us; 192us; 71us; 0us; 16420us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 8us; 32768us; 35us; 1735us; 36us; 1738us; 37us; 1740us; 38us; 1743us; 107us; 1739us; 108us; 90us; 119us; 660us; 147us; 1744us; 18us; 16429us; 21us; 63us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 69us; 1729us; 72us; 292us; 77us; 1728us; 87us; 34us; 100us; 88us; 107us; 16540us; 108us; 16540us; 119us; 16540us; 147us; 16540us; 192us; 71us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 15us; 16429us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 72us; 292us; 87us; 34us; 100us; 88us; 107us; 16540us; 108us; 16540us; 119us; 16540us; 147us; 16540us; 192us; 68us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 1us; 17361us; 20us; 1715us; 0us; 16424us; 0us; 16425us; 6us; 16428us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 0us; 16426us; 0us; 16427us; 3us; 16428us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 3us; 17344us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 15us; 16432us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 72us; 292us; 87us; 34us; 100us; 88us; 107us; 16540us; 108us; 16540us; 119us; 16540us; 147us; 16540us; 192us; 75us; 0us; 16430us; 3us; 32768us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 4us; 16540us; 72us; 292us; 87us; 34us; 100us; 88us; 192us; 75us; 0us; 16431us; 0us; 16433us; 0us; 16434us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 8us; 32768us; 35us; 1735us; 36us; 1738us; 37us; 1740us; 38us; 1743us; 107us; 1739us; 108us; 90us; 119us; 660us; 147us; 1744us; 2us; 32768us; 69us; 1729us; 77us; 1728us; 5us; 32768us; 21us; 105us; 44us; 1640us; 55us; 1726us; 134us; 1727us; 188us; 1639us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 1us; 16439us; 76us; 1642us; 1us; 16540us; 72us; 292us; 1us; 17369us; 109us; 1718us; 1us; 17371us; 116us; 1719us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 2us; 16674us; 32us; 1734us; 157us; 17388us; 1us; 32768us; 77us; 97us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16441us; 69us; 100us; 0us; 16440us; 67us; 32768us; 21us; 102us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 25us; 16442us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 28us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 0us; 16443us; 8us; 16540us; 44us; 1640us; 55us; 1726us; 72us; 292us; 87us; 34us; 100us; 88us; 134us; 1727us; 188us; 1639us; 192us; 75us; 3us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 0us; 16444us; 15us; 16429us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 72us; 292us; 87us; 34us; 100us; 88us; 107us; 16540us; 108us; 16540us; 119us; 16540us; 147us; 16540us; 192us; 71us; 1us; 32768us; 140us; 110us; 3us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 0us; 16445us; 15us; 16429us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 72us; 292us; 87us; 34us; 100us; 88us; 107us; 16540us; 108us; 16540us; 119us; 16540us; 147us; 16540us; 192us; 71us; 1us; 32768us; 140us; 114us; 0us; 16446us; 1us; 16540us; 72us; 292us; 0us; 16447us; 1us; 16449us; 129us; 118us; 1us; 16540us; 72us; 292us; 0us; 16448us; 2us; 16489us; 69us; 121us; 86us; 203us; 7us; 16540us; 21us; 124us; 47us; 531us; 54us; 533us; 72us; 292us; 110us; 532us; 134us; 149us; 149us; 135us; 0us; 16450us; 0us; 16451us; 51us; 16469us; 13us; 16540us; 21us; 145us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 45us; 16540us; 46us; 16540us; 47us; 531us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 54us; 533us; 56us; 16540us; 66us; 16540us; 72us; 292us; 73us; 16540us; 87us; 16540us; 90us; 16540us; 91us; 16540us; 105us; 16540us; 108us; 16540us; 110us; 532us; 112us; 16540us; 117us; 16540us; 120us; 16540us; 134us; 149us; 145us; 16540us; 149us; 135us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 182us; 16540us; 185us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 1us; 17361us; 20us; 1715us; 14us; 16469us; 13us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 45us; 16540us; 46us; 16540us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 72us; 292us; 108us; 16540us; 110us; 16540us; 117us; 16540us; 1us; 16489us; 86us; 203us; 3us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 1us; 16489us; 86us; 203us; 0us; 16452us; 1us; 16489us; 86us; 203us; 0us; 16453us; 0us; 16454us; 0us; 16455us; 1us; 32768us; 118us; 136us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16456us; 0us; 16457us; 16us; 16469us; 13us; 16540us; 21us; 153us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 45us; 16540us; 46us; 16540us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 72us; 292us; 108us; 16540us; 110us; 16540us; 117us; 16540us; 192us; 143us; 3us; 32768us; 10us; 945us; 140us; 141us; 192us; 932us; 0us; 16458us; 0us; 16459us; 1us; 32768us; 140us; 144us; 0us; 16460us; 14us; 16469us; 13us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 45us; 16540us; 46us; 16540us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 72us; 292us; 108us; 16540us; 110us; 16540us; 117us; 16540us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16461us; 0us; 16462us; 15us; 16469us; 13us; 16540us; 21us; 153us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 45us; 16540us; 46us; 16540us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 72us; 292us; 108us; 16540us; 110us; 16540us; 117us; 16540us; 3us; 32768us; 10us; 945us; 140us; 151us; 192us; 932us; 0us; 16463us; 0us; 16464us; 14us; 16469us; 13us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 45us; 16540us; 46us; 16540us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 72us; 292us; 108us; 16540us; 110us; 16540us; 117us; 16540us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 2us; 17363us; 20us; 1703us; 83us; 1704us; 14us; 16469us; 13us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 45us; 16540us; 46us; 16540us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 72us; 292us; 108us; 16540us; 110us; 16540us; 117us; 16540us; 0us; 16470us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 10us; 32768us; 13us; 535us; 45us; 181us; 46us; 327us; 48us; 199us; 49us; 328us; 50us; 329us; 52us; 177us; 108us; 179us; 110us; 534us; 117us; 186us; 42us; 32768us; 13us; 535us; 44us; 1640us; 45us; 181us; 46us; 327us; 48us; 199us; 49us; 328us; 50us; 329us; 52us; 177us; 56us; 606us; 66us; 1534us; 73us; 522us; 87us; 1566us; 90us; 1633us; 91us; 519us; 105us; 1579us; 108us; 179us; 110us; 534us; 112us; 1577us; 117us; 186us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17369us; 109us; 1718us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 2us; 16674us; 32us; 1734us; 157us; 17388us; 1us; 32768us; 77us; 171us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 16478us; 25us; 191us; 86us; 189us; 1us; 16441us; 69us; 100us; 0us; 16471us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 16472us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 16473us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 1us; 17371us; 116us; 1719us; 0us; 16474us; 5us; 32768us; 35us; 1735us; 36us; 1738us; 46us; 326us; 107us; 1739us; 108us; 182us; 1us; 17371us; 116us; 1719us; 0us; 16475us; 1us; 16540us; 72us; 292us; 0us; 16476us; 1us; 32768us; 77us; 187us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16477us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 0us; 16479us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 2us; 32768us; 19us; 193us; 192us; 194us; 0us; 16480us; 0us; 16481us; 1us; 16482us; 96us; 196us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 0us; 16483us; 0us; 16484us; 1us; 16485us; 46us; 200us; 0us; 16486us; 1us; 16489us; 86us; 203us; 0us; 16487us; 15us; 16469us; 13us; 16540us; 21us; 153us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 45us; 16540us; 46us; 16540us; 48us; 16540us; 49us; 16540us; 50us; 16540us; 52us; 16540us; 72us; 292us; 108us; 16540us; 110us; 16540us; 117us; 16540us; 3us; 32768us; 18us; 1707us; 19us; 1708us; 140us; 1709us; 0us; 16488us; 2us; 32768us; 10us; 207us; 192us; 208us; 0us; 16490us; 1us; 32768us; 10us; 209us; 0us; 16491us; 4us; 32768us; 10us; 211us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 0us; 16492us; 1us; 16493us; 148us; 48us; 0us; 16494us; 1us; 16496us; 148us; 48us; 0us; 16495us; 1us; 17359us; 69us; 1714us; 82us; 16505us; 21us; 224us; 23us; 16540us; 24us; 16540us; 28us; 16540us; 29us; 16540us; 30us; 16540us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 61us; 16540us; 70us; 16540us; 71us; 16540us; 72us; 292us; 73us; 16540us; 74us; 16540us; 85us; 16540us; 87us; 34us; 88us; 16540us; 89us; 16540us; 91us; 16540us; 97us; 16540us; 99us; 16540us; 100us; 671us; 105us; 16540us; 106us; 16540us; 107us; 16540us; 113us; 16540us; 114us; 16540us; 115us; 16540us; 117us; 16540us; 119us; 16540us; 120us; 16540us; 121us; 16540us; 122us; 16540us; 123us; 16540us; 124us; 16540us; 128us; 16540us; 131us; 16540us; 132us; 16540us; 134us; 16540us; 135us; 16540us; 143us; 16540us; 144us; 16540us; 145us; 16540us; 147us; 16540us; 151us; 16540us; 152us; 16540us; 155us; 16540us; 156us; 16540us; 159us; 16540us; 160us; 16540us; 161us; 16540us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 179us; 16540us; 180us; 16540us; 183us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 192us; 244us; 0us; 16497us; 4us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 192us; 239us; 74us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1735us; 36us; 1738us; 37us; 1740us; 38us; 1743us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 107us; 1739us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 119us; 660us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 135us; 677us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 147us; 1744us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 83us; 16505us; 21us; 224us; 23us; 16540us; 24us; 16540us; 28us; 16540us; 29us; 16540us; 30us; 16540us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 61us; 16540us; 69us; 263us; 70us; 16540us; 71us; 16540us; 72us; 292us; 73us; 16540us; 74us; 16540us; 85us; 16540us; 87us; 34us; 88us; 16540us; 89us; 16540us; 91us; 16540us; 97us; 16540us; 99us; 16540us; 100us; 671us; 105us; 16540us; 106us; 16540us; 107us; 16540us; 113us; 16540us; 114us; 16540us; 115us; 16540us; 117us; 16540us; 119us; 16540us; 120us; 16540us; 121us; 16540us; 122us; 16540us; 123us; 16540us; 124us; 16540us; 128us; 16540us; 131us; 16540us; 132us; 16540us; 134us; 16540us; 135us; 16540us; 143us; 16540us; 144us; 16540us; 145us; 16540us; 147us; 16540us; 151us; 16540us; 152us; 16540us; 155us; 16540us; 156us; 16540us; 159us; 16540us; 160us; 16540us; 161us; 16540us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 179us; 16540us; 180us; 16540us; 183us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 192us; 244us; 0us; 16498us; 0us; 16499us; 81us; 16505us; 23us; 16540us; 24us; 16540us; 28us; 16540us; 29us; 16540us; 30us; 16540us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 61us; 16540us; 70us; 16540us; 71us; 16540us; 72us; 292us; 73us; 16540us; 74us; 16540us; 85us; 16540us; 87us; 34us; 88us; 16540us; 89us; 16540us; 91us; 16540us; 97us; 16540us; 99us; 16540us; 100us; 671us; 105us; 16540us; 106us; 16540us; 107us; 16540us; 113us; 16540us; 114us; 16540us; 115us; 16540us; 117us; 16540us; 119us; 16540us; 120us; 16540us; 121us; 16540us; 122us; 16540us; 123us; 16540us; 124us; 16540us; 128us; 16540us; 131us; 16540us; 132us; 16540us; 134us; 16540us; 135us; 16540us; 143us; 16540us; 144us; 16540us; 145us; 16540us; 147us; 16540us; 151us; 16540us; 152us; 16540us; 155us; 16540us; 156us; 16540us; 159us; 16540us; 160us; 16540us; 161us; 16540us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 179us; 16540us; 180us; 16540us; 183us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 192us; 229us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 1us; 17361us; 20us; 1715us; 0us; 16500us; 0us; 16501us; 6us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 0us; 16502us; 0us; 16503us; 0us; 16504us; 4us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 192us; 239us; 74us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1735us; 36us; 1738us; 37us; 1740us; 38us; 1743us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 107us; 1739us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 119us; 660us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 135us; 677us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 147us; 1744us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 28us; 16508us; 20us; 1698us; 61us; 1107us; 62us; 1100us; 67us; 1697us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 83us; 1696us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 81us; 16507us; 23us; 16540us; 24us; 16540us; 28us; 16540us; 29us; 16540us; 30us; 16540us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 61us; 16540us; 70us; 16540us; 71us; 16540us; 72us; 292us; 73us; 16540us; 74us; 16540us; 85us; 16540us; 87us; 34us; 88us; 16540us; 89us; 16540us; 91us; 16540us; 97us; 16540us; 99us; 16540us; 100us; 671us; 105us; 16540us; 106us; 16540us; 107us; 16540us; 113us; 16540us; 114us; 16540us; 115us; 16540us; 117us; 16540us; 119us; 16540us; 120us; 16540us; 121us; 16540us; 122us; 16540us; 123us; 16540us; 124us; 16540us; 128us; 16540us; 131us; 16540us; 132us; 16540us; 134us; 16540us; 135us; 16540us; 143us; 16540us; 144us; 16540us; 145us; 16540us; 147us; 16540us; 151us; 16540us; 152us; 16540us; 155us; 16540us; 156us; 16540us; 159us; 16540us; 160us; 16540us; 161us; 16540us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 179us; 16540us; 180us; 16540us; 183us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 192us; 244us; 0us; 16506us; 0us; 16509us; 0us; 16510us; 21us; 16513us; 20us; 1698us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 67us; 1697us; 72us; 292us; 83us; 1696us; 87us; 34us; 100us; 671us; 107us; 16540us; 119us; 16540us; 135us; 16540us; 147us; 16540us; 159us; 16540us; 192us; 244us; 0us; 16511us; 81us; 16514us; 23us; 16540us; 24us; 16540us; 28us; 16540us; 29us; 16540us; 30us; 16540us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 61us; 16540us; 70us; 16540us; 71us; 16540us; 72us; 292us; 73us; 16540us; 74us; 16540us; 85us; 16540us; 87us; 34us; 88us; 16540us; 89us; 16540us; 91us; 16540us; 97us; 16540us; 99us; 16540us; 100us; 671us; 105us; 16540us; 106us; 16540us; 107us; 16540us; 113us; 16540us; 114us; 16540us; 115us; 16540us; 117us; 16540us; 119us; 16540us; 120us; 16540us; 121us; 16540us; 122us; 16540us; 123us; 16540us; 124us; 16540us; 128us; 16540us; 131us; 16540us; 132us; 16540us; 134us; 16540us; 135us; 16540us; 143us; 16540us; 144us; 16540us; 145us; 16540us; 147us; 16540us; 151us; 16540us; 152us; 16540us; 155us; 16540us; 156us; 16540us; 159us; 16540us; 160us; 16540us; 161us; 16540us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 179us; 16540us; 180us; 16540us; 183us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 192us; 244us; 0us; 16512us; 3us; 32768us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 6us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 4us; 32768us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 140us; 285us; 4us; 16540us; 72us; 292us; 87us; 34us; 100us; 671us; 192us; 244us; 0us; 16515us; 0us; 16516us; 0us; 16517us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 11us; 32768us; 31us; 679us; 35us; 1735us; 36us; 1738us; 37us; 1740us; 38us; 1743us; 39us; 692us; 107us; 1739us; 119us; 660us; 135us; 677us; 147us; 1744us; 159us; 673us; 0us; 16518us; 1us; 16518us; 125us; 947us; 0us; 16519us; 67us; 16519us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 952us; 0us; 16520us; 1us; 16540us; 72us; 292us; 1us; 16562us; 129us; 333us; 0us; 16521us; 0us; 16522us; 1us; 32768us; 69us; 263us; 5us; 32768us; 21us; 271us; 44us; 1640us; 54us; 1724us; 134us; 1725us; 188us; 1639us; 0us; 16523us; 2us; 16539us; 10us; 945us; 192us; 932us; 0us; 16524us; 0us; 16525us; 4us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 76us; 1642us; 0us; 16526us; 1us; 16527us; 76us; 1642us; 6us; 16540us; 54us; 1724us; 72us; 292us; 87us; 34us; 100us; 671us; 134us; 1725us; 192us; 245us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16528us; 0us; 16529us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16530us; 0us; 16531us; 0us; 16532us; 0us; 16533us; 1us; 16534us; 76us; 1642us; 81us; 16505us; 23us; 16540us; 24us; 16540us; 28us; 16540us; 29us; 16540us; 30us; 16540us; 31us; 16540us; 35us; 16540us; 36us; 16540us; 37us; 16540us; 38us; 16540us; 39us; 16540us; 41us; 16540us; 42us; 16540us; 43us; 16540us; 44us; 16540us; 61us; 16540us; 70us; 16540us; 71us; 16540us; 72us; 292us; 73us; 16540us; 74us; 16540us; 85us; 16540us; 87us; 34us; 88us; 16540us; 89us; 16540us; 91us; 16540us; 97us; 16540us; 99us; 16540us; 100us; 671us; 105us; 16540us; 106us; 16540us; 107us; 16540us; 113us; 16540us; 114us; 16540us; 115us; 16540us; 117us; 16540us; 119us; 16540us; 120us; 16540us; 121us; 16540us; 122us; 16540us; 123us; 16540us; 124us; 16540us; 128us; 16540us; 131us; 16540us; 132us; 16540us; 134us; 16540us; 135us; 16540us; 143us; 16540us; 144us; 16540us; 145us; 16540us; 147us; 16540us; 151us; 16540us; 152us; 16540us; 155us; 16540us; 156us; 16540us; 159us; 16540us; 160us; 16540us; 161us; 16540us; 162us; 16540us; 163us; 16540us; 164us; 16540us; 165us; 16540us; 166us; 16540us; 167us; 16540us; 168us; 16540us; 169us; 16540us; 170us; 16540us; 171us; 16540us; 172us; 16540us; 173us; 16540us; 174us; 16540us; 176us; 16540us; 177us; 16540us; 179us; 16540us; 180us; 16540us; 183us; 16540us; 188us; 16540us; 189us; 16540us; 190us; 16540us; 191us; 16540us; 192us; 246us; 3us; 32768us; 10us; 945us; 140us; 283us; 192us; 932us; 0us; 16535us; 0us; 16536us; 0us; 16537us; 6us; 16540us; 18us; 16584us; 19us; 16584us; 21us; 373us; 72us; 292us; 140us; 16584us; 192us; 379us; 3us; 32768us; 18us; 1707us; 19us; 1708us; 140us; 1709us; 0us; 16538us; 0us; 16539us; 1us; 16541us; 72us; 292us; 0us; 16542us; 14us; 32768us; 10us; 945us; 15us; 1766us; 35us; 1736us; 36us; 1738us; 37us; 1741us; 38us; 1743us; 44us; 1640us; 59us; 1764us; 93us; 1765us; 107us; 1739us; 147us; 1744us; 160us; 323us; 188us; 1639us; 192us; 297us; 2us; 17363us; 20us; 1703us; 83us; 1704us; 8us; 32768us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 53us; 295us; 59us; 1764us; 93us; 1765us; 192us; 932us; 1us; 17361us; 20us; 1715us; 0us; 16543us; 1us; 16882us; 53us; 298us; 1us; 17361us; 20us; 1715us; 0us; 16544us; 0us; 16545us; 0us; 16546us; 0us; 16547us; 9us; 17362us; 35us; 1735us; 36us; 1738us; 37us; 1740us; 38us; 1743us; 44us; 1640us; 107us; 1739us; 147us; 1744us; 160us; 323us; 188us; 1639us; 0us; 16548us; 3us; 17386us; 33us; 1733us; 34us; 1732us; 76us; 1642us; 26us; 17125us; 71us; 1293us; 73us; 1327us; 91us; 1299us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16549us; 3us; 32768us; 21us; 312us; 44us; 1640us; 188us; 1639us; 3us; 17386us; 33us; 1733us; 34us; 1732us; 76us; 1642us; 26us; 17125us; 71us; 1293us; 73us; 1327us; 91us; 1299us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16550us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 4us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 76us; 1642us; 2us; 17386us; 33us; 1733us; 34us; 1732us; 26us; 17125us; 71us; 1293us; 73us; 1327us; 91us; 1299us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16551us; 1us; 32768us; 77us; 318us; 0us; 16552us; 1us; 32768us; 77us; 320us; 0us; 16553us; 1us; 17294us; 77us; 322us; 0us; 16554us; 1us; 32768us; 77us; 324us; 0us; 16555us; 10us; 32768us; 29us; 683us; 31us; 679us; 35us; 1735us; 36us; 1738us; 39us; 692us; 46us; 326us; 107us; 1739us; 108us; 442us; 135us; 677us; 159us; 673us; 0us; 16556us; 0us; 16557us; 0us; 16558us; 0us; 16559us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 1us; 16677us; 84us; 565us; 0us; 16560us; 1us; 16540us; 72us; 292us; 1us; 16562us; 129us; 333us; 0us; 16561us; 40us; 16540us; 10us; 16563us; 13us; 16563us; 14us; 16563us; 15us; 16563us; 16us; 16563us; 18us; 16563us; 19us; 16563us; 20us; 16563us; 29us; 16563us; 31us; 16563us; 35us; 16563us; 36us; 16563us; 37us; 16563us; 38us; 16563us; 39us; 16563us; 45us; 16563us; 46us; 16563us; 48us; 16563us; 49us; 16563us; 50us; 16563us; 52us; 16563us; 67us; 16563us; 69us; 337us; 72us; 292us; 83us; 16563us; 86us; 286us; 87us; 16563us; 100us; 16563us; 107us; 16563us; 108us; 16563us; 110us; 16563us; 117us; 16563us; 119us; 16563us; 129us; 16563us; 135us; 16563us; 140us; 16563us; 147us; 16563us; 148us; 16563us; 159us; 16563us; 192us; 16563us; 6us; 16540us; 21us; 347us; 47us; 531us; 54us; 533us; 72us; 292us; 110us; 532us; 149us; 359us; 0us; 16564us; 0us; 16565us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 2us; 17386us; 33us; 1733us; 34us; 1732us; 1us; 32768us; 91us; 787us; 1us; 16629us; 130us; 483us; 1us; 32768us; 69us; 345us; 6us; 16540us; 21us; 347us; 47us; 531us; 54us; 533us; 72us; 292us; 110us; 532us; 149us; 359us; 0us; 16566us; 11us; 16540us; 10us; 16584us; 14us; 16584us; 15us; 16584us; 16us; 16584us; 21us; 369us; 47us; 531us; 54us; 533us; 72us; 292us; 110us; 532us; 149us; 359us; 192us; 379us; 1us; 17361us; 20us; 1715us; 7us; 16540us; 10us; 16584us; 14us; 16584us; 15us; 16584us; 16us; 16584us; 72us; 292us; 86us; 16584us; 192us; 379us; 1us; 16624us; 86us; 472us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 1us; 16624us; 86us; 472us; 0us; 16567us; 0us; 16568us; 1us; 16624us; 86us; 472us; 0us; 16569us; 0us; 16570us; 0us; 16571us; 1us; 32768us; 118us; 360us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16572us; 0us; 16573us; 5us; 16540us; 10us; 16584us; 21us; 373us; 72us; 292us; 140us; 16584us; 192us; 367us; 3us; 32768us; 10us; 945us; 140us; 365us; 192us; 932us; 0us; 16574us; 0us; 16575us; 4us; 16540us; 10us; 16584us; 72us; 292us; 140us; 368us; 192us; 379us; 0us; 16576us; 6us; 16540us; 10us; 16584us; 14us; 16584us; 15us; 16584us; 16us; 16584us; 72us; 292us; 192us; 379us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16577us; 0us; 16578us; 6us; 16540us; 10us; 16584us; 14us; 16584us; 15us; 16584us; 16us; 16584us; 72us; 292us; 192us; 379us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16579us; 0us; 16580us; 0us; 16581us; 0us; 16582us; 10us; 16540us; 10us; 16584us; 14us; 16584us; 15us; 16584us; 16us; 16584us; 18us; 16584us; 19us; 16584us; 72us; 292us; 86us; 16584us; 140us; 16584us; 192us; 379us; 0us; 16583us; 2us; 17363us; 20us; 1703us; 83us; 1704us; 10us; 16540us; 10us; 16584us; 14us; 16584us; 15us; 16584us; 16us; 16584us; 18us; 16584us; 19us; 16584us; 72us; 292us; 86us; 16584us; 140us; 16584us; 192us; 379us; 0us; 16585us; 1us; 17369us; 109us; 1718us; 0us; 16586us; 1us; 17369us; 109us; 1718us; 2us; 32768us; 19us; 388us; 192us; 389us; 0us; 16587us; 0us; 16588us; 1us; 16589us; 129us; 391us; 1us; 17369us; 109us; 1718us; 0us; 16590us; 1us; 16540us; 72us; 292us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17187us; 77us; 1462us; 1us; 32768us; 69us; 397us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16591us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17187us; 77us; 1462us; 3us; 32768us; 25us; 386us; 69us; 402us; 86us; 384us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16592us; 0us; 16593us; 1us; 16594us; 46us; 406us; 0us; 16595us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 15us; 32768us; 13us; 535us; 29us; 683us; 31us; 679us; 39us; 692us; 45us; 325us; 46us; 327us; 48us; 405us; 49us; 328us; 50us; 329us; 52us; 475us; 108us; 442us; 110us; 534us; 117us; 434us; 135us; 677us; 159us; 673us; 47us; 32768us; 13us; 535us; 29us; 683us; 31us; 679us; 39us; 692us; 44us; 1640us; 45us; 325us; 46us; 327us; 48us; 405us; 49us; 328us; 50us; 329us; 52us; 475us; 56us; 606us; 66us; 1534us; 73us; 522us; 87us; 1566us; 90us; 1633us; 91us; 519us; 105us; 1579us; 108us; 442us; 110us; 534us; 112us; 1577us; 117us; 434us; 120us; 1578us; 135us; 677us; 145us; 1576us; 159us; 673us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16596us; 0us; 16597us; 2us; 17369us; 108us; 448us; 109us; 1718us; 1us; 17357us; 18us; 1713us; 0us; 16598us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 7us; 16622us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 86us; 469us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 0us; 16599us; 1us; 17369us; 109us; 1718us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 2us; 16674us; 32us; 1734us; 157us; 17388us; 1us; 32768us; 77us; 423us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 16478us; 25us; 191us; 86us; 189us; 1us; 17357us; 18us; 1713us; 0us; 16600us; 0us; 16601us; 1us; 17357us; 18us; 1713us; 0us; 16602us; 1us; 17357us; 18us; 1713us; 0us; 16603us; 1us; 17357us; 18us; 1713us; 0us; 16604us; 34us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16629us; 130us; 483us; 1us; 32768us; 69us; 437us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17357us; 18us; 1713us; 0us; 16605us; 1us; 16540us; 72us; 292us; 0us; 16606us; 1us; 17371us; 116us; 1719us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 1us; 32768us; 188us; 1639us; 1us; 32768us; 77us; 446us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16607us; 1us; 17371us; 116us; 1719us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 1us; 32768us; 188us; 1639us; 1us; 16609us; 77us; 456us; 1us; 32768us; 69us; 453us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 16478us; 25us; 191us; 86us; 189us; 0us; 16608us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16610us; 1us; 32768us; 76us; 459us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 0us; 16611us; 0us; 16612us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 0us; 16613us; 0us; 16615us; 0us; 16616us; 0us; 16617us; 0us; 16618us; 0us; 16619us; 2us; 16540us; 21us; 489us; 72us; 292us; 3us; 32768us; 18us; 1707us; 19us; 1708us; 140us; 1709us; 0us; 16621us; 6us; 16540us; 18us; 16584us; 19us; 16584us; 21us; 373us; 72us; 292us; 140us; 16584us; 192us; 379us; 3us; 32768us; 18us; 1707us; 19us; 1708us; 140us; 1709us; 0us; 16623us; 36us; 32768us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 44us; 1640us; 59us; 1764us; 66us; 1533us; 87us; 1566us; 90us; 1633us; 91us; 1520us; 93us; 1765us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 29us; 16632us; 33us; 1733us; 34us; 1732us; 71us; 17386us; 73us; 17386us; 91us; 17386us; 105us; 17386us; 120us; 17386us; 130us; 486us; 134us; 17386us; 145us; 17386us; 152us; 17386us; 162us; 17386us; 163us; 17386us; 164us; 17386us; 165us; 17386us; 166us; 17386us; 167us; 17386us; 168us; 17386us; 169us; 17386us; 170us; 17386us; 171us; 17386us; 172us; 17386us; 173us; 17386us; 174us; 17386us; 176us; 17386us; 177us; 17386us; 189us; 17386us; 190us; 17386us; 191us; 17386us; 0us; 16625us; 26us; 32768us; 71us; 1293us; 73us; 1327us; 91us; 1299us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16632us; 130us; 486us; 0us; 16626us; 0us; 16627us; 0us; 16628us; 1us; 32768us; 188us; 1639us; 0us; 16630us; 0us; 16631us; 2us; 32768us; 151us; 488us; 188us; 1639us; 0us; 16633us; 0us; 16634us; 1us; 16540us; 72us; 292us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16635us; 0us; 16636us; 0us; 16637us; 2us; 17363us; 20us; 1703us; 83us; 1704us; 14us; 16540us; 10us; 16639us; 13us; 16639us; 14us; 16639us; 15us; 16639us; 16us; 16639us; 18us; 16639us; 19us; 16639us; 20us; 16639us; 58us; 16639us; 59us; 16639us; 60us; 16639us; 72us; 292us; 110us; 16639us; 140us; 16639us; 0us; 16638us; 3us; 32768us; 46us; 508us; 49us; 509us; 192us; 505us; 4us; 17369us; 46us; 508us; 49us; 509us; 109us; 1718us; 192us; 505us; 3us; 17369us; 108us; 448us; 109us; 1718us; 192us; 504us; 1us; 17357us; 18us; 1713us; 0us; 16640us; 1us; 17357us; 18us; 1713us; 0us; 16641us; 0us; 16642us; 1us; 17369us; 109us; 1718us; 1us; 17357us; 18us; 1713us; 0us; 16643us; 0us; 16644us; 0us; 16645us; 3us; 16620us; 41us; 466us; 42us; 465us; 43us; 467us; 32us; 32768us; 44us; 1640us; 56us; 606us; 66us; 1534us; 73us; 522us; 87us; 1566us; 90us; 1633us; 91us; 519us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 17212us; 76us; 1642us; 152us; 513us; 1us; 32768us; 190us; 514us; 2us; 32768us; 10us; 945us; 192us; 932us; 0us; 16646us; 0us; 16647us; 0us; 16648us; 0us; 16649us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 528us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1580us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16650us; 2us; 16540us; 72us; 292us; 192us; 526us; 5us; 32768us; 10us; 945us; 58us; 1748us; 59us; 1745us; 60us; 1747us; 192us; 932us; 0us; 16651us; 0us; 16652us; 3us; 32768us; 58us; 1748us; 59us; 1745us; 60us; 1747us; 0us; 16653us; 29us; 32768us; 44us; 1640us; 66us; 1569us; 87us; 1566us; 90us; 1633us; 91us; 1570us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16789us; 87us; 530us; 0us; 16654us; 0us; 16655us; 0us; 16656us; 0us; 16657us; 0us; 16658us; 0us; 16659us; 5us; 32768us; 44us; 1640us; 90us; 1633us; 91us; 542us; 185us; 1636us; 188us; 1639us; 3us; 16660us; 32us; 1734us; 76us; 1642us; 157us; 17388us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 1us; 16661us; 76us; 1642us; 0us; 16662us; 0us; 16663us; 1us; 16540us; 72us; 292us; 4us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 96us; 547us; 0us; 16664us; 2us; 16677us; 84us; 565us; 96us; 547us; 1us; 16670us; 96us; 548us; 1us; 16540us; 72us; 292us; 2us; 16540us; 72us; 292us; 141us; 557us; 0us; 16665us; 0us; 16666us; 2us; 32768us; 90us; 1633us; 185us; 1636us; 0us; 16667us; 1us; 32768us; 157us; 554us; 1us; 16540us; 72us; 292us; 1us; 32768us; 158us; 556us; 0us; 16668us; 0us; 16669us; 1us; 32768us; 157us; 559us; 3us; 16540us; 72us; 292us; 84us; 16671us; 158us; 16671us; 1us; 16677us; 84us; 565us; 1us; 32768us; 158us; 562us; 0us; 16672us; 0us; 16673us; 27us; 16675us; 10us; 16818us; 15us; 16818us; 20us; 16818us; 25us; 16818us; 35us; 16818us; 37us; 16818us; 56us; 16818us; 57us; 16818us; 58us; 16818us; 59us; 16818us; 60us; 16818us; 64us; 16818us; 69us; 16818us; 77us; 16818us; 78us; 16818us; 83us; 16818us; 84us; 16818us; 86us; 16818us; 88us; 16818us; 92us; 16818us; 93us; 16818us; 94us; 16818us; 96us; 16818us; 97us; 16818us; 125us; 16818us; 130us; 16818us; 192us; 16818us; 4us; 32768us; 50us; 572us; 90us; 1633us; 91us; 587us; 185us; 1636us; 1us; 16678us; 129us; 569us; 1us; 17184us; 129us; 569us; 1us; 17186us; 129us; 569us; 4us; 32768us; 50us; 572us; 90us; 1633us; 91us; 587us; 185us; 1636us; 0us; 16679us; 0us; 16680us; 2us; 32768us; 90us; 1633us; 185us; 1636us; 1us; 32768us; 77us; 574us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16681us; 2us; 32768us; 77us; 579us; 79us; 577us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16682us; 5us; 32768us; 54us; 580us; 91us; 584us; 145us; 583us; 149us; 594us; 188us; 581us; 0us; 16683us; 3us; 16690us; 32us; 1589us; 54us; 582us; 157us; 1591us; 0us; 16684us; 0us; 16685us; 1us; 16540us; 72us; 292us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16686us; 2us; 32768us; 90us; 1633us; 185us; 1636us; 4us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 101us; 597us; 1us; 32768us; 77us; 590us; 1us; 32768us; 91us; 591us; 1us; 16540us; 72us; 292us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16687us; 2us; 32768us; 32us; 1589us; 157us; 1591us; 0us; 16688us; 0us; 16689us; 2us; 32768us; 90us; 1633us; 185us; 1636us; 0us; 16691us; 0us; 16692us; 1us; 16540us; 72us; 292us; 0us; 16693us; 1us; 32768us; 56us; 606us; 1us; 16540us; 72us; 292us; 0us; 16694us; 2us; 16695us; 20us; 1715us; 56us; 17361us; 0us; 16696us; 1us; 16698us; 56us; 606us; 1us; 16540us; 72us; 292us; 0us; 16697us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 3us; 32768us; 91us; 624us; 99us; 1650us; 188us; 1639us; 4us; 17361us; 20us; 1715us; 69us; 620us; 77us; 617us; 118us; 614us; 0us; 16699us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 73us; 522us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17361us; 20us; 1715us; 0us; 16700us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17361us; 20us; 1715us; 0us; 16701us; 18us; 32768us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17361us; 20us; 1715us; 0us; 16702us; 0us; 16703us; 29us; 32768us; 56us; 1685us; 61us; 1667us; 62us; 1665us; 69us; 1669us; 70us; 627us; 74us; 1673us; 78us; 625us; 82us; 1677us; 88us; 1674us; 89us; 1675us; 95us; 1668us; 101us; 1670us; 141us; 1680us; 142us; 1676us; 152us; 1682us; 155us; 1679us; 157us; 1671us; 158us; 1672us; 178us; 1678us; 179us; 1666us; 180us; 1663us; 181us; 1662us; 182us; 1664us; 183us; 1657us; 184us; 1661us; 185us; 1660us; 186us; 1659us; 187us; 1658us; 192us; 1648us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16704us; 1us; 32768us; 57us; 628us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16705us; 4us; 17294us; 20us; 1715us; 56us; 17361us; 69us; 632us; 118us; 636us; 0us; 16706us; 18us; 32768us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17361us; 20us; 1715us; 45us; 16707us; 10us; 16710us; 13us; 16710us; 14us; 16710us; 15us; 16710us; 16us; 16710us; 18us; 16710us; 19us; 16710us; 20us; 16710us; 29us; 16710us; 31us; 16710us; 35us; 16710us; 36us; 16710us; 37us; 16710us; 38us; 16710us; 39us; 16710us; 41us; 16710us; 42us; 16710us; 43us; 16710us; 45us; 16710us; 46us; 16710us; 48us; 16710us; 49us; 16710us; 50us; 16710us; 52us; 16710us; 67us; 16710us; 72us; 16710us; 83us; 16710us; 86us; 16710us; 87us; 16710us; 92us; 16710us; 93us; 16710us; 94us; 16710us; 100us; 16710us; 107us; 16710us; 108us; 16710us; 110us; 16710us; 117us; 16710us; 119us; 16710us; 129us; 16710us; 135us; 16710us; 140us; 16710us; 147us; 16710us; 148us; 16710us; 159us; 16710us; 192us; 16710us; 0us; 16708us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 73us; 522us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16709us; 1us; 16712us; 95us; 639us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16711us; 1us; 17294us; 77us; 642us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 16713us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 6us; 16714us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 0us; 16715us; 0us; 16716us; 2us; 17363us; 20us; 1703us; 83us; 1704us; 6us; 16540us; 10us; 17362us; 58us; 17362us; 59us; 17362us; 60us; 17362us; 72us; 292us; 192us; 17362us; 0us; 16717us; 0us; 16718us; 1us; 17371us; 116us; 1719us; 0us; 16719us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 1us; 32768us; 188us; 1639us; 1us; 32768us; 77us; 656us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16720us; 1us; 16624us; 86us; 472us; 0us; 16721us; 0us; 16722us; 1us; 16540us; 72us; 292us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 1us; 32768us; 188us; 1639us; 1us; 16726us; 69us; 669us; 0us; 16723us; 1us; 16724us; 118us; 667us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 73us; 522us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16725us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 1us; 16727us; 76us; 1642us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 1us; 16728us; 76us; 1642us; 1us; 17365us; 102us; 1717us; 2us; 16540us; 72us; 292us; 192us; 727us; 0us; 16729us; 0us; 16730us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16731us; 1us; 17365us; 102us; 1717us; 2us; 16540us; 72us; 292us; 192us; 727us; 3us; 32768us; 10us; 945us; 18us; 690us; 192us; 932us; 0us; 16732us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 3us; 32768us; 10us; 945us; 18us; 690us; 192us; 932us; 0us; 16733us; 0us; 16734us; 0us; 16735us; 0us; 16736us; 0us; 16737us; 0us; 16738us; 0us; 16739us; 1us; 16540us; 72us; 292us; 3us; 16614us; 41us; 466us; 42us; 465us; 43us; 467us; 1us; 32768us; 188us; 1639us; 2us; 17386us; 33us; 1733us; 34us; 1732us; 1us; 32768us; 91us; 697us; 4us; 16540us; 72us; 292us; 92us; 16743us; 93us; 16743us; 94us; 16743us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16740us; 1us; 16741us; 96us; 702us; 1us; 16742us; 96us; 704us; 1us; 16540us; 72us; 292us; 0us; 16744us; 1us; 16540us; 72us; 292us; 0us; 16745us; 3us; 32768us; 40us; 716us; 44us; 1640us; 188us; 1639us; 6us; 16746us; 33us; 1733us; 34us; 1732us; 70us; 17386us; 88us; 715us; 95us; 714us; 188us; 1639us; 0us; 16747us; 1us; 16748us; 76us; 1642us; 5us; 16753us; 33us; 1733us; 34us; 1732us; 70us; 17386us; 88us; 715us; 95us; 714us; 1us; 32768us; 70us; 712us; 1us; 32768us; 57us; 713us; 0us; 16749us; 0us; 16750us; 0us; 16751us; 1us; 32768us; 95us; 718us; 1us; 16754us; 95us; 718us; 0us; 16752us; 3us; 32768us; 40us; 717us; 44us; 1640us; 188us; 1639us; 1us; 16757us; 129us; 722us; 0us; 16755us; 2us; 16540us; 72us; 292us; 192us; 727us; 1us; 16757us; 129us; 722us; 0us; 16756us; 1us; 17369us; 109us; 1718us; 0us; 16758us; 0us; 16759us; 1us; 17371us; 116us; 1719us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17187us; 77us; 1462us; 3us; 32768us; 10us; 945us; 69us; 732us; 192us; 932us; 68us; 32768us; 21us; 736us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 734us; 0us; 16760us; 0us; 16761us; 0us; 16762us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16763us; 0us; 16764us; 0us; 16765us; 0us; 16768us; 1us; 16766us; 84us; 744us; 0us; 16767us; 2us; 32768us; 90us; 1633us; 185us; 1636us; 2us; 32768us; 69us; 746us; 129us; 748us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16769us; 2us; 32768us; 90us; 1633us; 185us; 1636us; 0us; 16770us; 0us; 16771us; 2us; 32768us; 54us; 754us; 77us; 752us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16772us; 0us; 16773us; 0us; 16774us; 0us; 16775us; 0us; 16776us; 0us; 16777us; 0us; 16778us; 0us; 16779us; 0us; 16780us; 0us; 16781us; 0us; 16782us; 0us; 16783us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 1us; 16786us; 141us; 843us; 0us; 16787us; 0us; 16788us; 0us; 16789us; 0us; 16790us; 1us; 16791us; 32us; 774us; 1us; 32768us; 157us; 1608us; 0us; 16792us; 5us; 16793us; 56us; 805us; 78us; 806us; 88us; 813us; 96us; 811us; 130us; 803us; 0us; 16794us; 1us; 32768us; 188us; 1639us; 0us; 16795us; 1us; 16797us; 77us; 782us; 2us; 16798us; 77us; 782us; 96us; 785us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16796us; 3us; 32768us; 72us; 292us; 74us; 778us; 188us; 1639us; 3us; 32768us; 72us; 292us; 74us; 778us; 188us; 1639us; 0us; 16799us; 8us; 32768us; 10us; 945us; 72us; 292us; 74us; 778us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 188us; 1639us; 192us; 792us; 5us; 32768us; 10us; 945us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 192us; 932us; 0us; 16800us; 0us; 16801us; 0us; 16802us; 3us; 16882us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16803us; 0us; 16804us; 3us; 16806us; 78us; 806us; 88us; 813us; 96us; 811us; 1us; 16807us; 78us; 806us; 2us; 16811us; 78us; 806us; 88us; 813us; 2us; 16812us; 78us; 806us; 88us; 813us; 1us; 16813us; 78us; 806us; 1us; 16814us; 78us; 806us; 6us; 32768us; 56us; 805us; 69us; 1021us; 78us; 806us; 88us; 813us; 96us; 811us; 130us; 803us; 6us; 32768us; 56us; 805us; 69us; 1027us; 78us; 806us; 88us; 813us; 96us; 811us; 130us; 803us; 1us; 32768us; 188us; 1639us; 0us; 16805us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16808us; 96us; 810us; 0us; 16809us; 0us; 16810us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 17363us; 20us; 1703us; 83us; 1704us; 0us; 16815us; 1us; 17362us; 188us; 1639us; 0us; 16816us; 1us; 32768us; 69us; 820us; 2us; 17333us; 69us; 820us; 76us; 1692us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 16817us; 56us; 884us; 77us; 887us; 78us; 890us; 88us; 895us; 96us; 893us; 130us; 882us; 29us; 16676us; 10us; 16837us; 15us; 16837us; 20us; 16837us; 25us; 16837us; 32us; 1734us; 35us; 16837us; 37us; 16837us; 56us; 16837us; 57us; 16837us; 58us; 16837us; 59us; 16837us; 60us; 16837us; 64us; 16837us; 69us; 16837us; 77us; 16837us; 78us; 16837us; 83us; 16837us; 84us; 16837us; 86us; 16837us; 88us; 16837us; 92us; 16837us; 93us; 16837us; 94us; 16837us; 96us; 16837us; 97us; 16837us; 125us; 16837us; 130us; 16837us; 157us; 17388us; 192us; 16837us; 36us; 32768us; 33us; 825us; 34us; 827us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 832us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16819us; 34us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 832us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16820us; 34us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 832us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16821us; 29us; 32768us; 44us; 1640us; 66us; 1569us; 87us; 1566us; 90us; 1633us; 91us; 1570us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16822us; 76us; 1583us; 0us; 16823us; 62us; 16847us; 10us; 945us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 56us; 1685us; 61us; 1667us; 62us; 1665us; 66us; 854us; 69us; 1669us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 856us; 81us; 829us; 82us; 1677us; 88us; 1674us; 89us; 1675us; 91us; 863us; 95us; 1668us; 99us; 1650us; 101us; 1670us; 105us; 861us; 120us; 860us; 141us; 1680us; 142us; 1676us; 145us; 862us; 152us; 1287us; 155us; 1679us; 157us; 1671us; 158us; 1672us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 178us; 1678us; 179us; 1666us; 180us; 1663us; 181us; 1662us; 182us; 1664us; 183us; 1657us; 184us; 1661us; 185us; 1660us; 186us; 1659us; 187us; 1658us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 867us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16824us; 0us; 16825us; 36us; 16829us; 33us; 840us; 34us; 838us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16826us; 34us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16827us; 34us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16828us; 0us; 16830us; 1us; 32768us; 164us; 844us; 0us; 16831us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 3us; 32768us; 58us; 1748us; 59us; 1745us; 60us; 1747us; 0us; 16832us; 36us; 16864us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 57us; 850us; 0us; 16833us; 36us; 16864us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 64us; 853us; 0us; 16834us; 0us; 16835us; 1us; 32768us; 188us; 1639us; 1us; 17318us; 188us; 1639us; 0us; 16836us; 0us; 16837us; 0us; 16838us; 0us; 16839us; 0us; 16840us; 0us; 16841us; 62us; 16847us; 10us; 945us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 56us; 1685us; 61us; 1667us; 62us; 1665us; 66us; 854us; 69us; 1669us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 856us; 81us; 829us; 82us; 1677us; 88us; 1674us; 89us; 1675us; 91us; 863us; 95us; 1668us; 99us; 1650us; 101us; 1670us; 105us; 861us; 120us; 860us; 141us; 1680us; 142us; 1676us; 145us; 862us; 152us; 1287us; 155us; 1679us; 157us; 1671us; 158us; 1672us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 178us; 1678us; 179us; 1666us; 180us; 1663us; 181us; 1662us; 182us; 1664us; 183us; 1657us; 184us; 1661us; 185us; 1660us; 186us; 1659us; 187us; 1658us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 867us; 5us; 32768us; 10us; 945us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 192us; 932us; 0us; 16842us; 0us; 16843us; 3us; 16882us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 2us; 16844us; 32us; 17298us; 157us; 17298us; 0us; 16845us; 6us; 16846us; 56us; 884us; 77us; 887us; 78us; 890us; 88us; 895us; 96us; 893us; 130us; 882us; 4us; 16849us; 77us; 887us; 78us; 890us; 88us; 895us; 96us; 893us; 3us; 16853us; 77us; 887us; 78us; 890us; 88us; 895us; 2us; 16854us; 77us; 887us; 78us; 890us; 3us; 16856us; 77us; 887us; 78us; 890us; 88us; 895us; 3us; 16857us; 77us; 887us; 78us; 890us; 88us; 895us; 2us; 16858us; 77us; 887us; 78us; 890us; 2us; 16859us; 77us; 887us; 78us; 890us; 6us; 16863us; 56us; 884us; 77us; 887us; 78us; 890us; 88us; 895us; 96us; 893us; 130us; 882us; 8us; 17363us; 20us; 1703us; 56us; 884us; 77us; 887us; 78us; 890us; 83us; 1704us; 88us; 895us; 96us; 893us; 130us; 882us; 15us; 32768us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 56us; 884us; 59us; 1764us; 69us; 1349us; 77us; 887us; 78us; 890us; 88us; 895us; 93us; 1765us; 96us; 893us; 125us; 1345us; 130us; 882us; 192us; 937us; 7us; 16999us; 56us; 884us; 77us; 887us; 78us; 890us; 84us; 1154us; 88us; 895us; 96us; 893us; 130us; 882us; 1us; 32768us; 188us; 1639us; 0us; 16848us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16850us; 96us; 892us; 1us; 16851us; 88us; 894us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16852us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16855us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16860us; 2us; 17363us; 20us; 1703us; 83us; 1704us; 0us; 16861us; 2us; 17362us; 44us; 1640us; 188us; 1639us; 0us; 16862us; 2us; 32768us; 69us; 902us; 76us; 1642us; 36us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16865us; 36us; 16864us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16866us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 16867us; 0us; 16868us; 0us; 16869us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 3us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 0us; 16870us; 25us; 16871us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 1us; 16873us; 17us; 916us; 0us; 16872us; 1us; 16875us; 77us; 918us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16874us; 29us; 16878us; 20us; 1703us; 27us; 927us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 83us; 1704us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 103us; 925us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 30us; 16878us; 20us; 1703us; 27us; 927us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 83us; 1704us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 17063us; 101us; 1094us; 103us; 925us; 126us; 1091us; 141us; 1267us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 30us; 16878us; 20us; 1703us; 27us; 927us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 83us; 1704us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 103us; 925us; 126us; 1091us; 141us; 1340us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 66us; 16877us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16876us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16879us; 1us; 32768us; 21us; 928us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 3us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 0us; 16880us; 69us; 16881us; 20us; 953us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 952us; 0us; 16882us; 2us; 16882us; 18us; 1723us; 136us; 1722us; 2us; 16882us; 18us; 1723us; 136us; 1722us; 2us; 16882us; 18us; 1723us; 136us; 1722us; 2us; 16882us; 29us; 1721us; 135us; 1720us; 2us; 16882us; 18us; 1723us; 136us; 1722us; 1us; 16882us; 57us; 1243us; 1us; 16882us; 57us; 1262us; 1us; 16882us; 153us; 1291us; 1us; 16882us; 64us; 1297us; 3us; 16882us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 3us; 16882us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 3us; 16882us; 58us; 1748us; 59us; 1745us; 60us; 1747us; 0us; 16883us; 1us; 32768us; 125us; 947us; 67us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 949us; 0us; 16884us; 0us; 16885us; 69us; 32768us; 20us; 953us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 952us; 0us; 16886us; 0us; 16887us; 68us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 955us; 0us; 16888us; 0us; 16889us; 0us; 16890us; 0us; 16891us; 0us; 16892us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 4us; 32768us; 10us; 945us; 25us; 1137us; 86us; 1135us; 192us; 932us; 0us; 16893us; 0us; 16894us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 5us; 32768us; 10us; 945us; 25us; 1137us; 86us; 1135us; 127us; 967us; 192us; 932us; 0us; 16895us; 0us; 16896us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16897us; 68us; 32768us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 29us; 32768us; 10us; 945us; 27us; 1160us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 103us; 1159us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 192us; 932us; 0us; 16898us; 0us; 16899us; 0us; 16900us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16901us; 58us; 16903us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 156us; 1020us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16902us; 67us; 32768us; 21us; 911us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16904us; 59us; 16906us; 21us; 911us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 156us; 1020us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16905us; 68us; 32768us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 933us; 29us; 32768us; 10us; 945us; 29us; 1721us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 135us; 1720us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 192us; 932us; 68us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 988us; 4us; 32768us; 10us; 945us; 18us; 1723us; 136us; 1722us; 192us; 932us; 0us; 16907us; 0us; 16908us; 2us; 32768us; 18us; 1723us; 136us; 1722us; 0us; 16909us; 0us; 16910us; 0us; 16911us; 0us; 16912us; 43us; 32768us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 59us; 1764us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 93us; 1765us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 936us; 10us; 17361us; 10us; 945us; 15us; 1766us; 20us; 1715us; 29us; 1721us; 35us; 1762us; 37us; 1763us; 59us; 1764us; 93us; 1765us; 135us; 1720us; 192us; 932us; 74us; 32768us; 10us; 945us; 15us; 1766us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1762us; 37us; 1763us; 39us; 692us; 44us; 1237us; 59us; 1764us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 93us; 1765us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 934us; 9us; 32768us; 10us; 945us; 15us; 1766us; 18us; 1723us; 35us; 1762us; 37us; 1763us; 59us; 1764us; 93us; 1765us; 136us; 1722us; 192us; 932us; 0us; 16913us; 0us; 16914us; 0us; 16915us; 0us; 16916us; 0us; 16917us; 4us; 32768us; 10us; 945us; 29us; 1721us; 135us; 1720us; 192us; 932us; 69us; 32768us; 10us; 945us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 935us; 4us; 32768us; 10us; 945us; 18us; 1723us; 136us; 1722us; 192us; 932us; 0us; 16918us; 0us; 16919us; 0us; 16920us; 0us; 16921us; 0us; 16922us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 32768us; 18us; 1723us; 136us; 1722us; 0us; 16923us; 0us; 16924us; 0us; 16925us; 0us; 16926us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 25us; 16927us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 25us; 16928us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 125us; 1023us; 1us; 17361us; 20us; 1715us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16929us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 3us; 32768us; 10us; 945us; 18us; 690us; 192us; 932us; 1us; 17361us; 20us; 1715us; 68us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1032us; 0us; 16930us; 0us; 16931us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 125us; 1035us; 1us; 17361us; 20us; 1715us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16932us; 67us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 3us; 32768us; 10us; 945us; 18us; 690us; 192us; 932us; 0us; 16933us; 1us; 32768us; 97us; 1343us; 0us; 16934us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16935us; 25us; 16939us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 20us; 16942us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 20us; 16943us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 9us; 16944us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 20us; 16945us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 18us; 16946us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 18us; 16947us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 9us; 16948us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 9us; 16949us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 9us; 16950us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 9us; 16951us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 9us; 16952us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 9us; 16953us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 9us; 16954us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 185us; 1103us; 187us; 1110us; 1us; 16955us; 187us; 1110us; 8us; 16956us; 61us; 1107us; 78us; 1105us; 81us; 1080us; 95us; 1108us; 155us; 1104us; 180us; 1106us; 182us; 1109us; 187us; 1110us; 4us; 16957us; 95us; 1108us; 155us; 1104us; 182us; 1109us; 187us; 1110us; 4us; 16958us; 95us; 1108us; 155us; 1104us; 182us; 1109us; 187us; 1110us; 1us; 16959us; 187us; 1110us; 1us; 16960us; 187us; 1110us; 1us; 16961us; 187us; 1110us; 25us; 16998us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 25us; 17002us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 25us; 17006us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 29us; 32768us; 10us; 945us; 27us; 1160us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 103us; 1159us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 192us; 932us; 23us; 17011us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 23us; 17014us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 25us; 17063us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 101us; 1094us; 126us; 1091us; 141us; 1267us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 24us; 17059us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 24us; 17061us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 26us; 17117us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 141us; 1340us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 26us; 17113us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 141us; 1341us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 25us; 17114us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 27us; 32768us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 104us; 1433us; 126us; 1091us; 137us; 1434us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 25us; 17121us; 61us; 1107us; 62us; 1100us; 69us; 1098us; 78us; 1105us; 79us; 1082us; 80us; 1084us; 81us; 1080us; 82us; 1086us; 88us; 1095us; 89us; 1096us; 95us; 1108us; 96us; 1176us; 101us; 1094us; 126us; 1091us; 142us; 1092us; 155us; 1104us; 157us; 1101us; 158us; 1102us; 180us; 1106us; 181us; 1097us; 182us; 1109us; 184us; 1093us; 185us; 1103us; 186us; 1099us; 187us; 1110us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16936us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16937us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16938us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 16982us; 68us; 1088us; 67us; 32768us; 21us; 911us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16940us; 1us; 16941us; 96us; 1174us; 67us; 32768us; 15us; 1111us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1112us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1113us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1114us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1115us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1116us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1117us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1118us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1119us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1120us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1121us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1122us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1123us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1124us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1125us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1126us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1127us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1128us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1129us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 67us; 32768us; 15us; 1130us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 16962us; 0us; 16963us; 0us; 16964us; 0us; 16965us; 0us; 16966us; 0us; 16967us; 0us; 16968us; 0us; 16969us; 0us; 16970us; 0us; 16971us; 0us; 16972us; 0us; 16973us; 0us; 16974us; 0us; 16975us; 0us; 16976us; 0us; 16977us; 0us; 16978us; 0us; 16979us; 0us; 16980us; 0us; 16981us; 0us; 16983us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 16984us; 38us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 56us; 1142us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1145us; 0us; 16985us; 38us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 56us; 1142us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1145us; 3us; 32768us; 10us; 945us; 19us; 1139us; 192us; 932us; 0us; 16986us; 0us; 16987us; 0us; 16988us; 37us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1144us; 0us; 16989us; 0us; 16990us; 0us; 16991us; 0us; 16992us; 2us; 32768us; 97us; 1155us; 192us; 1153us; 2us; 16993us; 56us; 1149us; 192us; 1152us; 37us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1151us; 0us; 16994us; 0us; 16995us; 0us; 16996us; 0us; 16997us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17000us; 3us; 17005us; 26us; 1166us; 138us; 1165us; 139us; 1171us; 0us; 17001us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 21us; 1161us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 17003us; 0us; 17004us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 21us; 1167us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 5us; 32768us; 10us; 945us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 192us; 932us; 0us; 17007us; 0us; 17008us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17009us; 0us; 17010us; 73us; 32768us; 10us; 945us; 15us; 1766us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1762us; 37us; 1763us; 39us; 692us; 44us; 1237us; 59us; 1764us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 93us; 1765us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 0us; 17012us; 73us; 32768us; 10us; 945us; 15us; 1766us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1762us; 37us; 1763us; 39us; 692us; 44us; 1237us; 59us; 1764us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 93us; 1765us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 0us; 17013us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 42us; 17312us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17015us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 42us; 17308us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17016us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 42us; 17311us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17017us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 42us; 17324us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17018us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 42us; 17319us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17019us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 42us; 17320us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17020us; 30us; 32768us; 44us; 1640us; 66us; 1533us; 87us; 1566us; 90us; 1633us; 91us; 1520us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1205us; 30us; 32768us; 44us; 1640us; 66us; 1533us; 87us; 1566us; 90us; 1633us; 91us; 1520us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1205us; 2us; 17386us; 33us; 1733us; 34us; 1732us; 33us; 17157us; 13us; 17160us; 20us; 17160us; 25us; 17160us; 33us; 1733us; 34us; 1732us; 71us; 17386us; 73us; 17386us; 86us; 17160us; 91us; 17386us; 105us; 17386us; 110us; 17160us; 120us; 17386us; 134us; 17386us; 145us; 17386us; 152us; 17386us; 162us; 17386us; 163us; 17386us; 164us; 17386us; 165us; 17386us; 166us; 17386us; 167us; 17386us; 168us; 17386us; 169us; 17386us; 170us; 17386us; 171us; 17386us; 172us; 17386us; 173us; 17386us; 174us; 17386us; 176us; 17386us; 177us; 17386us; 189us; 17386us; 190us; 17386us; 191us; 17386us; 27us; 32768us; 71us; 1293us; 73us; 1327us; 91us; 1299us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1204us; 27us; 32768us; 71us; 1293us; 73us; 1327us; 91us; 1299us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1204us; 0us; 17021us; 5us; 17021us; 13us; 17159us; 25us; 17159us; 86us; 17159us; 110us; 17159us; 130us; 486us; 0us; 17022us; 0us; 17023us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17024us; 42us; 32768us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 117us; 1196us; 120us; 1274us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17025us; 34us; 17026us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1214us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 37us; 17026us; 25us; 1386us; 44us; 1237us; 69us; 1373us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 86us; 1382us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1214us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17027us; 5us; 17028us; 32us; 1223us; 33us; 1222us; 34us; 1221us; 74us; 1235us; 76us; 1227us; 33us; 32768us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 5us; 17029us; 32us; 1223us; 33us; 1222us; 34us; 1221us; 74us; 1235us; 76us; 1227us; 5us; 17030us; 32us; 1223us; 33us; 1222us; 34us; 1221us; 74us; 1235us; 76us; 1227us; 2us; 17031us; 32us; 1223us; 33us; 1222us; 1us; 17032us; 32us; 1223us; 5us; 17034us; 32us; 1223us; 33us; 1222us; 34us; 1221us; 74us; 1235us; 76us; 1227us; 5us; 17251us; 32us; 1223us; 33us; 1222us; 34us; 1221us; 74us; 1235us; 76us; 1227us; 33us; 32768us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 33us; 32768us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 157us; 1591us; 0us; 17033us; 33us; 32768us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 33us; 17302us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 17047us; 10us; 945us; 70us; 1255us; 91us; 1248us; 99us; 1650us; 188us; 1639us; 192us; 932us; 0us; 17035us; 1us; 32768us; 76us; 1230us; 6us; 17047us; 10us; 945us; 70us; 1255us; 91us; 1248us; 99us; 1650us; 188us; 1639us; 192us; 932us; 0us; 17036us; 3us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 3us; 17318us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 0us; 17037us; 2us; 32768us; 91us; 1132us; 188us; 1131us; 0us; 17038us; 0us; 17039us; 0us; 17040us; 68us; 17110us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 938us; 3us; 32768us; 10us; 945us; 57us; 1241us; 192us; 932us; 0us; 17041us; 0us; 17042us; 0us; 17043us; 0us; 17044us; 0us; 17045us; 0us; 17046us; 0us; 17048us; 85us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 56us; 1685us; 61us; 1179us; 62us; 1665us; 69us; 1669us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1233us; 78us; 1249us; 82us; 1677us; 85us; 982us; 88us; 1191us; 89us; 1194us; 91us; 1301us; 95us; 1668us; 97us; 1043us; 99us; 1650us; 101us; 1670us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 141us; 1680us; 142us; 1676us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1287us; 155us; 1188us; 156us; 1020us; 157us; 1671us; 158us; 1672us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 178us; 1678us; 179us; 1185us; 180us; 1182us; 181us; 1662us; 182us; 1664us; 183us; 1226us; 184us; 1661us; 185us; 1660us; 186us; 1659us; 187us; 1658us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1648us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 1us; 32768us; 76us; 1251us; 1us; 32768us; 174us; 1252us; 0us; 17049us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 17050us; 70us; 32768us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 95us; 1269us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 141us; 1268us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 939us; 3us; 32768us; 10us; 945us; 57us; 1257us; 192us; 932us; 0us; 17051us; 0us; 17052us; 3us; 32768us; 10us; 945us; 57us; 1260us; 192us; 932us; 0us; 17053us; 0us; 17054us; 0us; 17055us; 0us; 17056us; 1us; 17058us; 96us; 1265us; 68us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 95us; 1269us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 141us; 1268us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17057us; 66us; 17060us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17062us; 0us; 17064us; 0us; 17065us; 0us; 17066us; 0us; 17067us; 0us; 17068us; 0us; 17069us; 0us; 17070us; 0us; 17071us; 0us; 17072us; 68us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 140us; 1285us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1283us; 3us; 32768us; 10us; 945us; 140us; 1281us; 192us; 932us; 0us; 17073us; 0us; 17074us; 1us; 32768us; 140us; 1284us; 0us; 17075us; 0us; 17076us; 68us; 32768us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 940us; 69us; 32768us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 153us; 1683us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 940us; 3us; 32768us; 10us; 945us; 153us; 1289us; 192us; 932us; 0us; 17077us; 0us; 17078us; 0us; 17079us; 0us; 17080us; 68us; 17110us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 941us; 3us; 32768us; 10us; 945us; 64us; 1295us; 192us; 932us; 0us; 17081us; 0us; 17082us; 0us; 17083us; 0us; 17084us; 77us; 32768us; 10us; 945us; 15us; 1311us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1308us; 37us; 1309us; 39us; 692us; 44us; 1237us; 59us; 1310us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 87us; 1351us; 88us; 1190us; 89us; 1193us; 91us; 1300us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 942us; 93us; 32768us; 10us; 945us; 15us; 1311us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1308us; 37us; 1309us; 39us; 692us; 44us; 1237us; 56us; 1685us; 59us; 1310us; 61us; 1179us; 62us; 1665us; 69us; 1669us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1233us; 82us; 1677us; 85us; 982us; 87us; 1351us; 88us; 1191us; 89us; 1194us; 91us; 1300us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 95us; 1668us; 97us; 1043us; 99us; 1650us; 101us; 1670us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 141us; 1680us; 142us; 1676us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1287us; 155us; 1188us; 156us; 1020us; 157us; 1671us; 158us; 1672us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 178us; 1678us; 179us; 1185us; 180us; 1182us; 181us; 1662us; 182us; 1664us; 183us; 1226us; 184us; 1661us; 185us; 1637us; 186us; 1659us; 187us; 1658us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 943us; 93us; 32768us; 10us; 945us; 15us; 1311us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1308us; 37us; 1309us; 39us; 692us; 44us; 1237us; 56us; 1685us; 59us; 1310us; 61us; 1179us; 62us; 1665us; 69us; 1669us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1233us; 82us; 1677us; 85us; 982us; 87us; 1351us; 88us; 1191us; 89us; 1194us; 91us; 1300us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 95us; 1668us; 97us; 1043us; 99us; 1650us; 101us; 1670us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 141us; 1680us; 142us; 1676us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1287us; 155us; 1188us; 156us; 1020us; 157us; 1671us; 158us; 1672us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 178us; 1678us; 179us; 1185us; 180us; 1182us; 181us; 1662us; 182us; 1664us; 183us; 1226us; 184us; 1661us; 185us; 1637us; 186us; 1659us; 187us; 1658us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 943us; 0us; 17085us; 9us; 32768us; 10us; 945us; 15us; 1760us; 35us; 1757us; 37us; 1758us; 59us; 1759us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 192us; 932us; 0us; 17086us; 0us; 17087us; 0us; 17088us; 0us; 17088us; 0us; 17089us; 0us; 17090us; 0us; 17091us; 0us; 17092us; 0us; 17093us; 1us; 32768us; 77us; 1314us; 1us; 32768us; 91us; 1315us; 1us; 16540us; 72us; 292us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17094us; 0us; 17095us; 0us; 17096us; 0us; 17097us; 4us; 17097us; 92us; 17100us; 93us; 17100us; 94us; 17100us; 101us; 17100us; 4us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 101us; 1325us; 0us; 17098us; 1us; 32768us; 185us; 1636us; 0us; 17099us; 73us; 32768us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 52us; 1367us; 58us; 1748us; 59us; 1745us; 60us; 1747us; 61us; 1178us; 66us; 1377us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1197us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 944us; 5us; 32768us; 10us; 945us; 58us; 1748us; 59us; 1745us; 60us; 1747us; 192us; 932us; 0us; 17101us; 0us; 17102us; 0us; 17103us; 0us; 17104us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 0us; 17108us; 0us; 17109us; 0us; 17111us; 0us; 17112us; 68us; 32768us; 10us; 945us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17115us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17116us; 73us; 32768us; 10us; 945us; 15us; 1766us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1762us; 37us; 1763us; 39us; 692us; 44us; 1237us; 59us; 1764us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 93us; 1765us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 0us; 17118us; 0us; 17119us; 0us; 17120us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 66us; 32768us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 32768us; 189us; 1731us; 190us; 1730us; 3us; 17127us; 35us; 1735us; 36us; 1738us; 107us; 1739us; 0us; 17124us; 35us; 17129us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 77us; 1363us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1214us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 87us; 1356us; 0us; 17122us; 0us; 17123us; 0us; 17126us; 1us; 32768us; 91us; 1360us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 17128us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1365us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17130us; 34us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1580us; 0us; 17131us; 29us; 32768us; 44us; 1640us; 66us; 1533us; 87us; 1566us; 90us; 1633us; 91us; 1520us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 2us; 17386us; 33us; 1733us; 34us; 1732us; 26us; 17125us; 71us; 1293us; 73us; 1327us; 91us; 1299us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17149us; 2us; 17141us; 20us; 1395us; 83us; 1396us; 0us; 17132us; 67us; 32768us; 21us; 911us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17149us; 2us; 17141us; 20us; 1395us; 83us; 1396us; 0us; 17133us; 1us; 17134us; 69us; 1378us; 67us; 17135us; 21us; 911us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17149us; 2us; 17141us; 20us; 1395us; 83us; 1396us; 0us; 17136us; 3us; 32768us; 44us; 1640us; 66us; 1400us; 188us; 1639us; 0us; 17149us; 2us; 17141us; 20us; 1395us; 83us; 1396us; 0us; 17137us; 5us; 17141us; 20us; 1395us; 44us; 1640us; 66us; 1400us; 83us; 1396us; 188us; 1639us; 1us; 32768us; 19us; 1388us; 0us; 17138us; 0us; 17149us; 2us; 17141us; 20us; 1395us; 83us; 1396us; 1us; 32768us; 19us; 1392us; 0us; 17139us; 0us; 17140us; 3us; 17140us; 44us; 1640us; 66us; 1400us; 188us; 1639us; 1us; 17142us; 83us; 1398us; 1us; 17143us; 20us; 1397us; 0us; 17144us; 0us; 17145us; 1us; 17146us; 76us; 1642us; 0us; 17147us; 0us; 17148us; 8us; 17153us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 59us; 1764us; 69us; 1403us; 93us; 1765us; 192us; 932us; 74us; 17151us; 10us; 945us; 15us; 1766us; 21us; 911us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 35us; 1762us; 37us; 1763us; 39us; 692us; 44us; 1237us; 59us; 1764us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 93us; 1765us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 0us; 17150us; 0us; 17152us; 0us; 17154us; 3us; 17361us; 20us; 1715us; 25us; 1417us; 86us; 1415us; 1us; 17361us; 20us; 1715us; 3us; 17167us; 13us; 535us; 110us; 534us; 192us; 1426us; 0us; 17155us; 2us; 32768us; 13us; 535us; 110us; 534us; 0us; 17156us; 0us; 17158us; 0us; 17161us; 3us; 16540us; 21us; 489us; 72us; 292us; 192us; 727us; 0us; 17163us; 2us; 16540us; 72us; 292us; 192us; 727us; 1us; 32768us; 19us; 1419us; 0us; 17164us; 3us; 17355us; 18us; 1710us; 19us; 1711us; 140us; 1712us; 0us; 17165us; 3us; 17167us; 13us; 535us; 110us; 534us; 192us; 1426us; 0us; 17166us; 3us; 17167us; 13us; 535us; 110us; 534us; 192us; 1426us; 0us; 17168us; 3us; 17167us; 13us; 535us; 110us; 534us; 192us; 1426us; 0us; 17169us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 8us; 17162us; 25us; 1417us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 86us; 1415us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 3us; 17355us; 18us; 1710us; 19us; 1711us; 140us; 1712us; 1us; 17361us; 20us; 1715us; 0us; 17170us; 0us; 17171us; 0us; 17172us; 34us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 32768us; 97us; 1437us; 68us; 32768us; 21us; 906us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1439us; 0us; 17173us; 0us; 17174us; 35us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 66us; 854us; 70us; 848us; 71us; 851us; 73us; 845us; 74us; 855us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1451us; 2us; 32768us; 97us; 1442us; 192us; 1449us; 69us; 32768us; 10us; 945us; 17us; 1446us; 23us; 1440us; 24us; 1455us; 28us; 1038us; 29us; 683us; 30us; 1026us; 31us; 679us; 39us; 692us; 44us; 1237us; 61us; 1178us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 85us; 982us; 88us; 1190us; 89us; 1193us; 91us; 1301us; 97us; 1043us; 99us; 1650us; 105us; 1275us; 106us; 963us; 113us; 974us; 114us; 978us; 115us; 959us; 117us; 1196us; 120us; 1274us; 121us; 993us; 122us; 1435us; 123us; 1453us; 124us; 969us; 128us; 1033us; 131us; 976us; 132us; 980us; 134us; 1279us; 143us; 1206us; 144us; 1208us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 155us; 1187us; 156us; 1020us; 159us; 673us; 160us; 1016us; 161us; 1018us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 179us; 1184us; 180us; 1181us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 3us; 32768us; 10us; 945us; 19us; 1444us; 192us; 932us; 0us; 17175us; 0us; 17176us; 1us; 32768us; 19us; 1447us; 0us; 17177us; 0us; 17178us; 1us; 32768us; 19us; 1450us; 0us; 17179us; 1us; 32768us; 19us; 1452us; 0us; 17180us; 38us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 56us; 1142us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1145us; 0us; 17181us; 38us; 32768us; 41us; 466us; 42us; 465us; 43us; 467us; 44us; 458us; 56us; 1142us; 66us; 854us; 70us; 848us; 71us; 851us; 72us; 292us; 73us; 845us; 74us; 855us; 81us; 829us; 91us; 863us; 99us; 1650us; 105us; 861us; 120us; 860us; 145us; 862us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 768us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1145us; 1us; 32768us; 19us; 1457us; 0us; 17182us; 1us; 17183us; 84us; 1459us; 4us; 32768us; 50us; 572us; 90us; 1633us; 91us; 587us; 185us; 1636us; 1us; 17185us; 84us; 1461us; 4us; 32768us; 50us; 572us; 90us; 1633us; 91us; 587us; 185us; 1636us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17188us; 1us; 17190us; 97us; 1465us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17189us; 1us; 17192us; 95us; 1468us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17191us; 1us; 17194us; 95us; 1471us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 72us; 292us; 74us; 1484us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17193us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 74us; 1477us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 7us; 17197us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 77us; 1475us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 17195us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 1us; 32768us; 188us; 1639us; 1us; 32768us; 77us; 1479us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 17196us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 7us; 17200us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 77us; 1482us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 17198us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 1us; 32768us; 188us; 1639us; 1us; 32768us; 77us; 1486us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 6us; 17199us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 1us; 17202us; 97us; 1489us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17201us; 8us; 17206us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 95us; 1492us; 182us; 1496us; 185us; 1636us; 188us; 1639us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17203us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17204us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17205us; 8us; 17209us; 34us; 1514us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 95us; 1499us; 182us; 1501us; 185us; 1636us; 188us; 1639us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17207us; 29us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17208us; 1us; 17212us; 76us; 1642us; 0us; 17213us; 1us; 17213us; 79us; 1529us; 1us; 17213us; 79us; 1530us; 1us; 17215us; 185us; 1509us; 4us; 17215us; 32us; 1589us; 76us; 1586us; 157us; 1591us; 185us; 1509us; 1us; 32768us; 174us; 1510us; 0us; 17214us; 6us; 32768us; 34us; 1515us; 44us; 1640us; 70us; 1539us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 0us; 17216us; 62us; 17216us; 10us; 17234us; 13us; 17234us; 14us; 17234us; 15us; 17234us; 16us; 17234us; 18us; 17234us; 19us; 17234us; 20us; 17234us; 25us; 17234us; 29us; 17234us; 31us; 17234us; 33us; 17234us; 39us; 17234us; 41us; 17234us; 42us; 17234us; 43us; 17234us; 45us; 17234us; 46us; 17234us; 48us; 17234us; 49us; 17234us; 50us; 17234us; 52us; 17234us; 58us; 17234us; 59us; 17234us; 60us; 17234us; 71us; 17234us; 72us; 17234us; 73us; 17234us; 83us; 17234us; 86us; 17234us; 91us; 17234us; 105us; 17234us; 108us; 17234us; 110us; 17234us; 117us; 17234us; 120us; 17234us; 130us; 17234us; 134us; 17234us; 135us; 17234us; 140us; 17234us; 145us; 17234us; 152us; 17234us; 159us; 17234us; 162us; 17234us; 163us; 17234us; 164us; 17234us; 165us; 17234us; 166us; 17234us; 167us; 17234us; 168us; 17234us; 169us; 17234us; 170us; 17234us; 171us; 17234us; 172us; 17234us; 173us; 17234us; 174us; 17234us; 176us; 17234us; 177us; 17234us; 189us; 17234us; 190us; 17234us; 191us; 17234us; 192us; 17234us; 1us; 32768us; 70us; 1539us; 1us; 32768us; 70us; 1539us; 0us; 17217us; 62us; 17217us; 10us; 17235us; 13us; 17235us; 14us; 17235us; 15us; 17235us; 16us; 17235us; 18us; 17235us; 19us; 17235us; 20us; 17235us; 25us; 17235us; 29us; 17235us; 31us; 17235us; 33us; 17235us; 39us; 17235us; 41us; 17235us; 42us; 17235us; 43us; 17235us; 45us; 17235us; 46us; 17235us; 48us; 17235us; 49us; 17235us; 50us; 17235us; 52us; 17235us; 58us; 17235us; 59us; 17235us; 60us; 17235us; 71us; 17235us; 72us; 17235us; 73us; 17235us; 83us; 17235us; 86us; 17235us; 91us; 17235us; 105us; 17235us; 108us; 17235us; 110us; 17235us; 117us; 17235us; 120us; 17235us; 130us; 17235us; 134us; 17235us; 135us; 17235us; 140us; 17235us; 145us; 17235us; 152us; 17235us; 159us; 17235us; 162us; 17235us; 163us; 17235us; 164us; 17235us; 165us; 17235us; 166us; 17235us; 167us; 17235us; 168us; 17235us; 169us; 17235us; 170us; 17235us; 171us; 17235us; 172us; 17235us; 173us; 17235us; 174us; 17235us; 176us; 17235us; 177us; 17235us; 189us; 17235us; 190us; 17235us; 191us; 17235us; 192us; 17235us; 0us; 17218us; 62us; 17218us; 10us; 17236us; 13us; 17236us; 14us; 17236us; 15us; 17236us; 16us; 17236us; 18us; 17236us; 19us; 17236us; 20us; 17236us; 25us; 17236us; 29us; 17236us; 31us; 17236us; 33us; 17236us; 39us; 17236us; 41us; 17236us; 42us; 17236us; 43us; 17236us; 45us; 17236us; 46us; 17236us; 48us; 17236us; 49us; 17236us; 50us; 17236us; 52us; 17236us; 58us; 17236us; 59us; 17236us; 60us; 17236us; 71us; 17236us; 72us; 17236us; 73us; 17236us; 83us; 17236us; 86us; 17236us; 91us; 17236us; 105us; 17236us; 108us; 17236us; 110us; 17236us; 117us; 17236us; 120us; 17236us; 130us; 17236us; 134us; 17236us; 135us; 17236us; 140us; 17236us; 145us; 17236us; 152us; 17236us; 159us; 17236us; 162us; 17236us; 163us; 17236us; 164us; 17236us; 165us; 17236us; 166us; 17236us; 167us; 17236us; 168us; 17236us; 169us; 17236us; 170us; 17236us; 171us; 17236us; 172us; 17236us; 173us; 17236us; 174us; 17236us; 176us; 17236us; 177us; 17236us; 189us; 17236us; 190us; 17236us; 191us; 17236us; 192us; 17236us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1580us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1580us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 4us; 32768us; 44us; 1640us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 4us; 32768us; 44us; 1640us; 90us; 1633us; 185us; 1636us; 188us; 1639us; 0us; 17219us; 62us; 17219us; 10us; 17237us; 13us; 17237us; 14us; 17237us; 15us; 17237us; 16us; 17237us; 18us; 17237us; 19us; 17237us; 20us; 17237us; 25us; 17237us; 29us; 17237us; 31us; 17237us; 33us; 17237us; 39us; 17237us; 41us; 17237us; 42us; 17237us; 43us; 17237us; 45us; 17237us; 46us; 17237us; 48us; 17237us; 49us; 17237us; 50us; 17237us; 52us; 17237us; 58us; 17237us; 59us; 17237us; 60us; 17237us; 71us; 17237us; 72us; 17237us; 73us; 17237us; 83us; 17237us; 86us; 17237us; 91us; 17237us; 105us; 17237us; 108us; 17237us; 110us; 17237us; 117us; 17237us; 120us; 17237us; 130us; 17237us; 134us; 17237us; 135us; 17237us; 140us; 17237us; 145us; 17237us; 152us; 17237us; 159us; 17237us; 162us; 17237us; 163us; 17237us; 164us; 17237us; 165us; 17237us; 166us; 17237us; 167us; 17237us; 168us; 17237us; 169us; 17237us; 170us; 17237us; 171us; 17237us; 172us; 17237us; 173us; 17237us; 174us; 17237us; 176us; 17237us; 177us; 17237us; 189us; 17237us; 190us; 17237us; 191us; 17237us; 192us; 17237us; 0us; 17220us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17221us; 62us; 17221us; 10us; 17239us; 13us; 17239us; 14us; 17239us; 15us; 17239us; 16us; 17239us; 18us; 17239us; 19us; 17239us; 20us; 17239us; 25us; 17239us; 29us; 17239us; 31us; 17239us; 33us; 17239us; 39us; 17239us; 41us; 17239us; 42us; 17239us; 43us; 17239us; 45us; 17239us; 46us; 17239us; 48us; 17239us; 49us; 17239us; 50us; 17239us; 52us; 17239us; 58us; 17239us; 59us; 17239us; 60us; 17239us; 71us; 17239us; 72us; 17239us; 73us; 17239us; 83us; 17239us; 86us; 17239us; 91us; 17239us; 105us; 17239us; 108us; 17239us; 110us; 17239us; 117us; 17239us; 120us; 17239us; 130us; 17239us; 134us; 17239us; 135us; 17239us; 140us; 17239us; 145us; 17239us; 152us; 17239us; 159us; 17239us; 162us; 17239us; 163us; 17239us; 164us; 17239us; 165us; 17239us; 166us; 17239us; 167us; 17239us; 168us; 17239us; 169us; 17239us; 170us; 17239us; 171us; 17239us; 172us; 17239us; 173us; 17239us; 174us; 17239us; 176us; 17239us; 177us; 17239us; 189us; 17239us; 190us; 17239us; 191us; 17239us; 192us; 17239us; 1us; 17246us; 79us; 1536us; 1us; 17246us; 79us; 1535us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17222us; 62us; 17222us; 10us; 17240us; 13us; 17240us; 14us; 17240us; 15us; 17240us; 16us; 17240us; 18us; 17240us; 19us; 17240us; 20us; 17240us; 25us; 17240us; 29us; 17240us; 31us; 17240us; 33us; 17240us; 39us; 17240us; 41us; 17240us; 42us; 17240us; 43us; 17240us; 45us; 17240us; 46us; 17240us; 48us; 17240us; 49us; 17240us; 50us; 17240us; 52us; 17240us; 58us; 17240us; 59us; 17240us; 60us; 17240us; 71us; 17240us; 72us; 17240us; 73us; 17240us; 83us; 17240us; 86us; 17240us; 91us; 17240us; 105us; 17240us; 108us; 17240us; 110us; 17240us; 117us; 17240us; 120us; 17240us; 130us; 17240us; 134us; 17240us; 135us; 17240us; 140us; 17240us; 145us; 17240us; 152us; 17240us; 159us; 17240us; 162us; 17240us; 163us; 17240us; 164us; 17240us; 165us; 17240us; 166us; 17240us; 167us; 17240us; 168us; 17240us; 169us; 17240us; 170us; 17240us; 171us; 17240us; 172us; 17240us; 173us; 17240us; 174us; 17240us; 176us; 17240us; 177us; 17240us; 189us; 17240us; 190us; 17240us; 191us; 17240us; 192us; 17240us; 2us; 32768us; 57us; 1540us; 96us; 1541us; 0us; 17223us; 2us; 32768us; 57us; 1542us; 96us; 1543us; 0us; 17224us; 2us; 32768us; 57us; 1544us; 96us; 1545us; 0us; 17225us; 1us; 32768us; 57us; 1546us; 0us; 17226us; 1us; 32768us; 96us; 1548us; 30us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17230us; 1us; 17227us; 96us; 1552us; 4us; 32768us; 10us; 945us; 96us; 1552us; 158us; 1595us; 192us; 932us; 30us; 17273us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17228us; 0us; 17229us; 64us; 17231us; 10us; 17241us; 13us; 17241us; 14us; 17241us; 15us; 17241us; 16us; 17241us; 18us; 17241us; 19us; 17241us; 20us; 17241us; 25us; 17241us; 29us; 17241us; 31us; 17241us; 33us; 17241us; 39us; 17241us; 41us; 17241us; 42us; 17241us; 43us; 17241us; 45us; 17241us; 46us; 17241us; 48us; 17241us; 49us; 17241us; 50us; 17241us; 52us; 17241us; 58us; 17241us; 59us; 17241us; 60us; 17241us; 71us; 17241us; 72us; 17241us; 73us; 17241us; 76us; 1583us; 83us; 17241us; 86us; 17241us; 91us; 17241us; 105us; 17241us; 108us; 17241us; 110us; 17241us; 117us; 17241us; 120us; 17241us; 130us; 17241us; 134us; 17241us; 135us; 17241us; 140us; 17241us; 145us; 17241us; 152us; 17241us; 159us; 17241us; 162us; 17241us; 163us; 17241us; 164us; 17241us; 165us; 17241us; 166us; 17241us; 167us; 17241us; 168us; 17241us; 169us; 17241us; 170us; 17241us; 171us; 17241us; 172us; 17241us; 173us; 17241us; 174us; 17241us; 176us; 17241us; 177us; 17241us; 185us; 1558us; 189us; 17241us; 190us; 17241us; 191us; 17241us; 192us; 17241us; 2us; 17231us; 76us; 1583us; 185us; 1557us; 2us; 32768us; 61us; 1561us; 174us; 1559us; 2us; 32768us; 61us; 1562us; 174us; 1560us; 0us; 17232us; 62us; 17232us; 10us; 17242us; 13us; 17242us; 14us; 17242us; 15us; 17242us; 16us; 17242us; 18us; 17242us; 19us; 17242us; 20us; 17242us; 25us; 17242us; 29us; 17242us; 31us; 17242us; 33us; 17242us; 39us; 17242us; 41us; 17242us; 42us; 17242us; 43us; 17242us; 45us; 17242us; 46us; 17242us; 48us; 17242us; 49us; 17242us; 50us; 17242us; 52us; 17242us; 58us; 17242us; 59us; 17242us; 60us; 17242us; 71us; 17242us; 72us; 17242us; 73us; 17242us; 83us; 17242us; 86us; 17242us; 91us; 17242us; 105us; 17242us; 108us; 17242us; 110us; 17242us; 117us; 17242us; 120us; 17242us; 130us; 17242us; 134us; 17242us; 135us; 17242us; 140us; 17242us; 145us; 17242us; 152us; 17242us; 159us; 17242us; 162us; 17242us; 163us; 17242us; 164us; 17242us; 165us; 17242us; 166us; 17242us; 167us; 17242us; 168us; 17242us; 169us; 17242us; 170us; 17242us; 171us; 17242us; 172us; 17242us; 173us; 17242us; 174us; 17242us; 176us; 17242us; 177us; 17242us; 189us; 17242us; 190us; 17242us; 191us; 17242us; 192us; 17242us; 1us; 32768us; 174us; 1563us; 1us; 32768us; 174us; 1564us; 0us; 17233us; 62us; 17233us; 10us; 17243us; 13us; 17243us; 14us; 17243us; 15us; 17243us; 16us; 17243us; 18us; 17243us; 19us; 17243us; 20us; 17243us; 25us; 17243us; 29us; 17243us; 31us; 17243us; 33us; 17243us; 39us; 17243us; 41us; 17243us; 42us; 17243us; 43us; 17243us; 45us; 17243us; 46us; 17243us; 48us; 17243us; 49us; 17243us; 50us; 17243us; 52us; 17243us; 58us; 17243us; 59us; 17243us; 60us; 17243us; 71us; 17243us; 72us; 17243us; 73us; 17243us; 83us; 17243us; 86us; 17243us; 91us; 17243us; 105us; 17243us; 108us; 17243us; 110us; 17243us; 117us; 17243us; 120us; 17243us; 130us; 17243us; 134us; 17243us; 135us; 17243us; 140us; 17243us; 145us; 17243us; 152us; 17243us; 159us; 17243us; 162us; 17243us; 163us; 17243us; 164us; 17243us; 165us; 17243us; 166us; 17243us; 167us; 17243us; 168us; 17243us; 169us; 17243us; 170us; 17243us; 171us; 17243us; 172us; 17243us; 173us; 17243us; 174us; 17243us; 176us; 17243us; 177us; 17243us; 189us; 17243us; 190us; 17243us; 191us; 17243us; 192us; 17243us; 0us; 17238us; 29us; 32768us; 44us; 1640us; 66us; 1569us; 87us; 1566us; 90us; 1633us; 91us; 1570us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 1us; 17244us; 76us; 1583us; 0us; 17245us; 0us; 17246us; 31us; 32768us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 1580us; 5us; 32768us; 10us; 945us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 192us; 932us; 6us; 17268us; 10us; 945us; 69us; 1604us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 192us; 932us; 0us; 17247us; 0us; 17248us; 0us; 17249us; 0us; 17250us; 33us; 32768us; 44us; 1237us; 70us; 1239us; 71us; 1293us; 73us; 1327us; 74us; 1232us; 91us; 1301us; 99us; 1650us; 105us; 1275us; 120us; 1274us; 134us; 1279us; 145us; 1273us; 151us; 1229us; 152us; 1286us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 183us; 1225us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17252us; 0us; 17253us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 17254us; 0us; 17255us; 2us; 32768us; 44us; 1640us; 188us; 1639us; 3us; 17256us; 32us; 1589us; 76us; 1642us; 157us; 1591us; 0us; 17257us; 7us; 32768us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 59us; 1764us; 93us; 1765us; 192us; 932us; 0us; 17258us; 0us; 17259us; 1us; 32768us; 157us; 1591us; 0us; 17260us; 33us; 17273us; 10us; 945us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 158us; 1601us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 1us; 32768us; 96us; 1593us; 37us; 17273us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 44us; 1640us; 59us; 1764us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 93us; 1765us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 192us; 932us; 0us; 17230us; 0us; 17261us; 0us; 17262us; 0us; 17263us; 3us; 17271us; 10us; 945us; 158us; 1599us; 192us; 932us; 0us; 17264us; 0us; 17265us; 0us; 17266us; 0us; 17267us; 1us; 17268us; 69us; 1604us; 30us; 17270us; 44us; 1640us; 66us; 1534us; 87us; 1566us; 90us; 1633us; 91us; 1521us; 105us; 1579us; 112us; 1577us; 120us; 1578us; 145us; 1576us; 162us; 770us; 163us; 769us; 164us; 767us; 165us; 766us; 166us; 765us; 167us; 763us; 168us; 764us; 169us; 762us; 170us; 760us; 171us; 758us; 172us; 756us; 173us; 761us; 174us; 759us; 176us; 757us; 177us; 755us; 182us; 1494us; 185us; 1636us; 188us; 1639us; 189us; 1731us; 190us; 1730us; 191us; 772us; 0us; 17269us; 0us; 17271us; 0us; 17272us; 8us; 32768us; 44us; 1640us; 66us; 1611us; 90us; 1633us; 91us; 1615us; 174us; 1623us; 182us; 1632us; 185us; 1636us; 188us; 1639us; 3us; 32768us; 95us; 1630us; 158us; 1610us; 182us; 1631us; 0us; 17274us; 1us; 32768us; 158us; 1612us; 0us; 17275us; 1us; 17276us; 76us; 1642us; 0us; 17277us; 7us; 32768us; 44us; 1640us; 90us; 1633us; 91us; 1615us; 174us; 1623us; 182us; 1632us; 185us; 1636us; 188us; 1639us; 5us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 95us; 1630us; 182us; 1631us; 0us; 17278us; 1us; 17279us; 185us; 1619us; 2us; 32768us; 61us; 1621us; 174us; 1620us; 0us; 17280us; 1us; 32768us; 174us; 1622us; 0us; 17281us; 0us; 17282us; 6us; 17283us; 44us; 1640us; 90us; 1633us; 91us; 1615us; 174us; 1623us; 185us; 1636us; 188us; 1639us; 0us; 17284us; 0us; 17285us; 0us; 17286us; 0us; 17287us; 0us; 17288us; 7us; 32768us; 44us; 1640us; 90us; 1633us; 91us; 1615us; 174us; 1623us; 182us; 1632us; 185us; 1636us; 188us; 1639us; 7us; 32768us; 44us; 1640us; 90us; 1633us; 91us; 1615us; 174us; 1623us; 182us; 1632us; 185us; 1636us; 188us; 1639us; 7us; 32768us; 44us; 1640us; 90us; 1633us; 91us; 1615us; 174us; 1623us; 182us; 1632us; 185us; 1636us; 188us; 1639us; 1us; 32768us; 188us; 1639us; 0us; 17289us; 0us; 17290us; 1us; 32768us; 188us; 1639us; 1us; 17305us; 188us; 1639us; 0us; 17291us; 0us; 17292us; 0us; 17293us; 0us; 17294us; 8us; 32768us; 10us; 945us; 15us; 1766us; 35us; 1762us; 37us; 1763us; 59us; 1764us; 93us; 1765us; 188us; 1639us; 192us; 932us; 0us; 17295us; 0us; 17296us; 27us; 32768us; 56us; 1685us; 61us; 1667us; 62us; 1665us; 69us; 1669us; 74us; 1673us; 82us; 1677us; 88us; 1674us; 89us; 1675us; 95us; 1668us; 101us; 1670us; 141us; 1680us; 142us; 1676us; 152us; 1682us; 155us; 1679us; 157us; 1671us; 158us; 1672us; 178us; 1678us; 179us; 1666us; 180us; 1663us; 181us; 1662us; 182us; 1664us; 183us; 1657us; 184us; 1661us; 185us; 1660us; 186us; 1659us; 187us; 1658us; 192us; 1648us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 17297us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 17298us; 0us; 17299us; 1us; 32768us; 56us; 1652us; 5us; 32768us; 66us; 1654us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 188us; 1684us; 0us; 17300us; 1us; 32768us; 56us; 1655us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 17301us; 0us; 17302us; 0us; 17303us; 0us; 17304us; 0us; 17305us; 0us; 17306us; 0us; 17307us; 0us; 17308us; 0us; 17309us; 0us; 17310us; 0us; 17311us; 0us; 17312us; 0us; 17313us; 0us; 17314us; 0us; 17315us; 0us; 17316us; 0us; 17317us; 0us; 17318us; 0us; 17319us; 0us; 17320us; 0us; 17321us; 0us; 17322us; 0us; 17323us; 0us; 17324us; 1us; 17325us; 141us; 1681us; 0us; 17326us; 1us; 32768us; 153us; 1683us; 0us; 17327us; 0us; 17328us; 1us; 32768us; 188us; 1684us; 0us; 17329us; 0us; 17330us; 0us; 17331us; 0us; 17332us; 1us; 17333us; 76us; 1692us; 0us; 17334us; 4us; 32768us; 91us; 1645us; 99us; 1650us; 188us; 1639us; 192us; 1694us; 0us; 17335us; 0us; 17336us; 0us; 17337us; 0us; 17338us; 0us; 17339us; 0us; 17340us; 3us; 17341us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 0us; 17342us; 3us; 17344us; 20us; 1698us; 67us; 1697us; 83us; 1696us; 0us; 17343us; 1us; 17345us; 83us; 1705us; 1us; 17346us; 20us; 1706us; 0us; 17347us; 0us; 17348us; 0us; 17349us; 0us; 17350us; 0us; 17351us; 0us; 17352us; 0us; 17353us; 0us; 17354us; 0us; 17356us; 0us; 17358us; 0us; 17360us; 0us; 17362us; 0us; 17364us; 0us; 17368us; 0us; 17370us; 0us; 17372us; 0us; 17373us; 0us; 17374us; 0us; 17375us; 0us; 17376us; 0us; 17377us; 0us; 17378us; 0us; 17379us; 0us; 17380us; 0us; 17381us; 0us; 17382us; 0us; 17383us; 0us; 17384us; 0us; 17385us; 0us; 17387us; 3us; 32768us; 35us; 1735us; 36us; 1738us; 107us; 1739us; 3us; 17409us; 35us; 1735us; 36us; 1738us; 107us; 1739us; 0us; 17389us; 0us; 17390us; 0us; 17391us; 3us; 32768us; 37us; 1740us; 38us; 1743us; 147us; 1744us; 3us; 17410us; 37us; 1740us; 38us; 1743us; 147us; 1744us; 0us; 17392us; 0us; 17393us; 0us; 17394us; 3us; 32768us; 58us; 1748us; 59us; 1745us; 60us; 1747us; 0us; 17395us; 0us; 17396us; 0us; 17397us; 3us; 32768us; 92us; 1752us; 93us; 1749us; 94us; 1751us; 0us; 17398us; 0us; 17399us; 0us; 17400us; 3us; 32768us; 14us; 1756us; 15us; 1753us; 16us; 1755us; 0us; 17401us; 0us; 17402us; 0us; 17403us; 0us; 17404us; 0us; 17405us; 0us; 17406us; 0us; 17407us; 0us; 17408us; 0us; 17409us; 0us; 17410us; 0us; 17411us; 0us; 17412us; 0us; 17413us; 0us; 17414us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 101us; 102us; 110us; 111us; 112us; 113us; 114us; 115us; 116us; 117us; 122us; 123us; 128us; 129us; 134us; 135us; 141us; 142us; 148us; 149us; 155us; 156us; 173us; 174us; 178us; 253us; 279us; 280us; 283us; 284us; 285us; 286us; 288us; 289us; 292us; 293us; 294us; 297us; 298us; 300us; 301us; 306us; 307us; 311us; 314us; 316us; 319us; 321us; 323us; 324us; 326us; 327us; 329us; 346us; 347us; 351us; 360us; 379us; 380us; 381us; 382us; 398us; 404us; 406us; 407us; 408us; 415us; 416us; 417us; 421us; 425us; 441us; 442us; 446us; 451us; 452us; 453us; 454us; 458us; 467us; 470us; 476us; 477us; 478us; 479us; 480us; 483us; 485us; 487us; 489us; 491us; 495us; 499us; 502us; 504us; 536us; 538us; 539us; 607us; 633us; 700us; 729us; 730us; 739us; 743us; 744us; 760us; 762us; 766us; 767us; 783us; 785us; 786us; 788us; 789us; 791us; 793us; 794us; 797us; 805us; 806us; 807us; 859us; 861us; 876us; 878us; 882us; 884us; 885us; 887us; 888us; 889us; 890us; 892us; 924us; 925us; 926us; 943us; 947us; 948us; 949us; 951us; 952us; 967us; 973us; 974us; 975us; 991us; 995us; 996us; 997us; 1012us; 1018us; 1019us; 1020us; 1021us; 1022us; 1025us; 1040us; 1041us; 1045us; 1049us; 1060us; 1103us; 1105us; 1109us; 1113us; 1116us; 1118us; 1150us; 1153us; 1155us; 1156us; 1186us; 1193us; 1223us; 1230us; 1232us; 1233us; 1239us; 1241us; 1242us; 1244us; 1245us; 1247us; 1279us; 1280us; 1284us; 1285us; 1289us; 1292us; 1293us; 1294us; 1296us; 1300us; 1301us; 1302us; 1304us; 1305us; 1307us; 1308us; 1324us; 1328us; 1329us; 1332us; 1333us; 1335us; 1336us; 1341us; 1342us; 1344us; 1345us; 1347us; 1348us; 1350us; 1433us; 1434us; 1439us; 1514us; 1598us; 1599us; 1600us; 1682us; 1688us; 1690us; 1691us; 1692us; 1699us; 1700us; 1701us; 1702us; 1707us; 1782us; 1811us; 1893us; 1894us; 1895us; 1896us; 1918us; 1919us; 2001us; 2002us; 2006us; 2013us; 2018us; 2023us; 2024us; 2025us; 2026us; 2030us; 2042us; 2043us; 2045us; 2046us; 2114us; 2115us; 2117us; 2119us; 2120us; 2121us; 2123us; 2129us; 2130us; 2133us; 2134us; 2135us; 2140us; 2141us; 2143us; 2150us; 2156us; 2157us; 2158us; 2164us; 2165us; 2166us; 2167us; 2168us; 2170us; 2252us; 2256us; 2257us; 2258us; 2259us; 2266us; 2270us; 2271us; 2272us; 2274us; 2275us; 2290us; 2293us; 2302us; 2304us; 2305us; 2307us; 2309us; 2310us; 2311us; 2312us; 2313us; 2323us; 2324us; 2328us; 2355us; 2356us; 2360us; 2364us; 2391us; 2392us; 2395us; 2400us; 2403us; 2430us; 2431us; 2433us; 2434us; 2436us; 2437us; 2439us; 2440us; 2442us; 2443us; 2454us; 2455us; 2456us; 2457us; 2458us; 2462us; 2464us; 2465us; 2467us; 2469us; 2470us; 2511us; 2518us; 2519us; 2520us; 2524us; 2527us; 2529us; 2531us; 2533us; 2540us; 2541us; 2553us; 2555us; 2563us; 2565us; 2571us; 2573us; 2574us; 2575us; 2577us; 2578us; 2579us; 2580us; 2582us; 2614us; 2615us; 2616us; 2622us; 2626us; 2627us; 2628us; 2633us; 2634us; 2641us; 2647us; 2648us; 2649us; 2656us; 2662us; 2663us; 2664us; 2665us; 2666us; 2677us; 2678us; 2681us; 2692us; 2693us; 2695us; 2696us; 2698us; 2701us; 2702us; 2703us; 2705us; 2707us; 2708us; 2710us; 2746us; 2748us; 2750us; 2818us; 2819us; 2855us; 2857us; 2861us; 2929us; 2930us; 2931us; 2933us; 2934us; 2938us; 2942us; 2958us; 3006us; 3007us; 3008us; 3011us; 3013us; 3014us; 3044us; 3052us; 3053us; 3055us; 3059us; 3062us; 3064us; 3096us; 3099us; 3101us; 3102us; 3103us; 3105us; 3106us; 3108us; 3109us; 3111us; 3112us; 3147us; 3149us; 3151us; 3219us; 3221us; 3222us; 3224us; 3225us; 3227us; 3231us; 3233us; 3235us; 3266us; 3267us; 3269us; 3273us; 3275us; 3277us; 3279us; 3347us; 3350us; 3351us; 3382us; 3383us; 3385us; 3389us; 3390us; 3391us; 3395us; 3396us; 3397us; 3398us; 3399us; 3400us; 3401us; 3404us; 3408us; 3409us; 3416us; 3420us; 3421us; 3458us; 3488us; 3489us; 3516us; 3518us; 3519us; 3520us; 3521us; 3523us; 3524us; 3525us; 3528us; 3529us; 3530us; 3532us; 3538us; 3539us; 3540us; 3541us; 3544us; 3559us; 3560us; 3564us; 3569us; 3573us; 3575us; 3576us; 3578us; 3579us; 3580us; 3582us; 3584us; 3585us; 3586us; 3587us; 3591us; 3624us; 3627us; 3629us; 3632us; 3633us; 3634us; 3635us; 3636us; 3668us; 3672us; 3673us; 3676us; 3682us; 3683us; 3684us; 3688us; 3689us; 3719us; 3721us; 3722us; 3723us; 3724us; 3725us; 3726us; 3727us; 3733us; 3737us; 3740us; 3742us; 3743us; 3744us; 3746us; 3751us; 3752us; 3755us; 3757us; 3759us; 3762us; 3763us; 3764us; 3767us; 3768us; 3770us; 3772us; 3774us; 3775us; 3776us; 3778us; 3782us; 3784us; 3786us; 3787us; 3788us; 3816us; 3821us; 3823us; 3825us; 3827us; 3832us; 3833us; 3834us; 3837us; 3839us; 3870us; 3871us; 3874us; 3905us; 3906us; 3912us; 3913us; 3917us; 3918us; 3919us; 3921us; 3925us; 3926us; 3929us; 3934us; 3936us; 3938us; 3940us; 3944us; 3945us; 3948us; 3949us; 3950us; 3953us; 3954us; 3955us; 3957us; 3958us; 3960us; 3962us; 3963us; 3966us; 3967us; 3969us; 3971us; 3972us; 3976us; 3980us; 3985us; 3986us; 4017us; 4019us; 4020us; 4052us; 4054us; 4055us; 4074us; 4076us; 4077us; 4078us; 4108us; 4112us; 4113us; 4115us; 4119us; 4120us; 4125us; 4126us; 4145us; 4147us; 4193us; 4194us; 4225us; 4226us; 4228us; 4258us; 4259us; 4261us; 4291us; 4298us; 4305us; 4306us; 4307us; 4310us; 4317us; 4318us; 4319us; 4321us; 4322us; 4326us; 4328us; 4330us; 4361us; 4362us; 4364us; 4365us; 4366us; 4368us; 4372us; 4374us; 4376us; 4377us; 4379us; 4410us; 4411us; 4414us; 4416us; 4419us; 4421us; 4423us; 4426us; 4427us; 4428us; 4496us; 4497us; 4499us; 4502us; 4506us; 4507us; 4575us; 4579us; 4580us; 4581us; 4582us; 4583us; 4584us; 4585us; 4586us; 4588us; 4592us; 4594us; 4597us; 4599us; 4604us; 4608us; 4609us; 4611us; 4613us; 4615us; 4616us; 4618us; 4619us; 4623us; 4630us; 4631us; 4633us; 4639us; 4641us; 4643us; 4644us; 4645us; 4646us; 4648us; 4650us; 4651us; 4655us; 4657us; 4658us; 4661us; 4663us; 4664us; 4666us; 4667us; 4668us; 4670us; 4706us; 4708us; 4712us; 4781us; 4782us; 4783us; 4784us; 4851us; 4857us; 4858us; 4859us; 4860us; 4861us; 4863us; 4864us; 4867us; 4870us; 4938us; 4939us; 4942us; 4943us; 4944us; 4947us; 4978us; 4979us; 4980us; 4981us; 4982us; 4983us; 4984us; 4985us; 4986us; 4987us; 4988us; 4989us; 4990us; 4991us; 4992us; 4993us; 4995us; 4996us; 4997us; 4998us; 4999us; 5001us; 5003us; 5004us; 5010us; 5011us; 5013us; 5014us; 5016us; 5019us; 5050us; 5051us; 5055us; 5059us; 5060us; 5069us; 5075us; 5076us; 5077us; 5078us; 5082us; 5083us; 5084us; 5088us; 5090us; 5093us; 5096us; 5098us; 5100us; 5107us; 5114us; 5116us; 5117us; 5153us; 5189us; 5191us; 5192us; 5193us; 5229us; 5265us; 5301us; 5337us; 5340us; 5341us; 5343us; 5344us; 5346us; 5349us; 5386us; 5393us; 5423us; 5460us; 5461us; 5496us; 5497us; 5532us; 5533us; 5563us; 5565us; 5566us; 5629us; 5633us; 5634us; 5635us; 5672us; 5673us; 5708us; 5709us; 5744us; 5745us; 5746us; 5748us; 5749us; 5752us; 5756us; 5757us; 5794us; 5796us; 5797us; 5834us; 5836us; 5837us; 5838us; 5840us; 5842us; 5843us; 5844us; 5845us; 5846us; 5847us; 5848us; 5911us; 5917us; 5918us; 5919us; 5923us; 5926us; 5927us; 5934us; 5939us; 5943us; 5946us; 5950us; 5954us; 5957us; 5960us; 5967us; 5976us; 5992us; 6000us; 6002us; 6003us; 6040us; 6042us; 6044us; 6075us; 6076us; 6113us; 6150us; 6151us; 6188us; 6225us; 6262us; 6299us; 6300us; 6303us; 6304us; 6307us; 6308us; 6311us; 6348us; 6349us; 6386us; 6387us; 6454us; 6460us; 6461us; 6462us; 6463us; 6530us; 6534us; 6535us; 6561us; 6563us; 6564us; 6566us; 6597us; 6598us; 6628us; 6659us; 6690us; 6757us; 6758us; 6825us; 6826us; 6828us; 6895us; 6899us; 6900us; 6970us; 6971us; 6974us; 6977us; 6980us; 6983us; 6986us; 6988us; 6990us; 6992us; 6994us; 6998us; 7002us; 7006us; 7007us; 7009us; 7077us; 7078us; 7079us; 7149us; 7150us; 7151us; 7220us; 7221us; 7222us; 7223us; 7224us; 7225us; 7292us; 7297us; 7298us; 7299us; 7366us; 7372us; 7373us; 7374us; 7442us; 7443us; 7512us; 7542us; 7543us; 7544us; 7545us; 7612us; 7613us; 7672us; 7673us; 7741us; 7742us; 7802us; 7803us; 7872us; 7902us; 7971us; 7976us; 7977us; 7978us; 7981us; 7982us; 7983us; 7984us; 7985us; 8029us; 8040us; 8115us; 8125us; 8126us; 8127us; 8128us; 8129us; 8130us; 8135us; 8205us; 8210us; 8211us; 8212us; 8213us; 8214us; 8215us; 8283us; 8286us; 8287us; 8288us; 8289us; 8290us; 8357us; 8383us; 8450us; 8476us; 8512us; 8580us; 8582us; 8584us; 8652us; 8653us; 8689us; 8757us; 8761us; 8763us; 8832us; 8833us; 8834us; 8901us; 8903us; 8905us; 8973us; 8974us; 9042us; 9046us; 9047us; 9049us; 9050us; 9117us; 9118us; 9144us; 9165us; 9186us; 9196us; 9217us; 9236us; 9255us; 9265us; 9275us; 9285us; 9295us; 9305us; 9315us; 9325us; 9327us; 9336us; 9341us; 9346us; 9348us; 9350us; 9352us; 9378us; 9404us; 9430us; 9460us; 9484us; 9508us; 9534us; 9559us; 9584us; 9611us; 9638us; 9664us; 9692us; 9718us; 9749us; 9750us; 9781us; 9782us; 9813us; 9814us; 9881us; 9883us; 9951us; 9952us; 9954us; 10022us; 10090us; 10158us; 10226us; 10294us; 10362us; 10430us; 10498us; 10566us; 10634us; 10702us; 10770us; 10838us; 10906us; 10974us; 11042us; 11110us; 11178us; 11246us; 11314us; 11315us; 11316us; 11317us; 11318us; 11319us; 11320us; 11321us; 11322us; 11323us; 11324us; 11325us; 11326us; 11327us; 11328us; 11329us; 11330us; 11331us; 11332us; 11333us; 11334us; 11335us; 11402us; 11406us; 11407us; 11446us; 11447us; 11486us; 11490us; 11491us; 11492us; 11493us; 11531us; 11532us; 11533us; 11534us; 11535us; 11538us; 11541us; 11579us; 11580us; 11581us; 11582us; 11583us; 11650us; 11717us; 11718us; 11722us; 11723us; 11790us; 11792us; 11859us; 11865us; 11866us; 11867us; 11934us; 11936us; 12003us; 12009us; 12010us; 12011us; 12078us; 12079us; 12080us; 12154us; 12155us; 12229us; 12230us; 12273us; 12316us; 12317us; 12360us; 12403us; 12404us; 12447us; 12490us; 12491us; 12534us; 12577us; 12578us; 12621us; 12664us; 12665us; 12708us; 12751us; 12752us; 12783us; 12814us; 12817us; 12851us; 12879us; 12907us; 12908us; 12914us; 12915us; 12916us; 12959us; 12960us; 13003us; 13004us; 13039us; 13077us; 13078us; 13084us; 13118us; 13124us; 13130us; 13133us; 13135us; 13141us; 13147us; 13181us; 13215us; 13217us; 13218us; 13252us; 13286us; 13293us; 13294us; 13296us; 13303us; 13304us; 13308us; 13312us; 13313us; 13316us; 13317us; 13318us; 13319us; 13388us; 13392us; 13393us; 13394us; 13395us; 13396us; 13397us; 13398us; 13399us; 13485us; 13489us; 13491us; 13493us; 13494us; 13498us; 13499us; 13570us; 13574us; 13575us; 13576us; 13580us; 13581us; 13582us; 13583us; 13584us; 13586us; 13655us; 13656us; 13723us; 13790us; 13791us; 13792us; 13793us; 13794us; 13795us; 13796us; 13797us; 13798us; 13799us; 13800us; 13869us; 13873us; 13874us; 13875us; 13877us; 13878us; 13879us; 13948us; 14018us; 14022us; 14023us; 14024us; 14025us; 14026us; 14095us; 14099us; 14100us; 14101us; 14102us; 14103us; 14181us; 14275us; 14369us; 14370us; 14380us; 14381us; 14382us; 14383us; 14384us; 14385us; 14386us; 14387us; 14388us; 14389us; 14391us; 14393us; 14395us; 14399us; 14466us; 14467us; 14468us; 14469us; 14470us; 14475us; 14480us; 14481us; 14483us; 14484us; 14558us; 14564us; 14565us; 14566us; 14567us; 14568us; 14569us; 14570us; 14571us; 14572us; 14573us; 14574us; 14575us; 14644us; 14711us; 14712us; 14779us; 14780us; 14854us; 14855us; 14856us; 14857us; 14924us; 14991us; 14994us; 14998us; 14999us; 15035us; 15037us; 15038us; 15039us; 15040us; 15042us; 15073us; 15077us; 15078us; 15109us; 15110us; 15145us; 15146us; 15176us; 15179us; 15206us; 15207us; 15210us; 15211us; 15279us; 15280us; 15283us; 15284us; 15286us; 15354us; 15355us; 15358us; 15359us; 15363us; 15364us; 15367us; 15368us; 15374us; 15376us; 15377us; 15378us; 15381us; 15383us; 15384us; 15385us; 15389us; 15391us; 15393us; 15394us; 15395us; 15397us; 15398us; 15399us; 15408us; 15483us; 15484us; 15485us; 15486us; 15490us; 15492us; 15496us; 15497us; 15500us; 15501us; 15502us; 15503us; 15507us; 15508us; 15511us; 15513us; 15514us; 15518us; 15519us; 15523us; 15524us; 15528us; 15529us; 15533us; 15534us; 15564us; 15573us; 15577us; 15579us; 15580us; 15581us; 15582us; 15617us; 15619us; 15688us; 15689us; 15690us; 15726us; 15729us; 15799us; 15803us; 15804us; 15805us; 15807us; 15808us; 15809us; 15811us; 15812us; 15814us; 15815us; 15854us; 15855us; 15894us; 15896us; 15897us; 15899us; 15904us; 15906us; 15911us; 15943us; 15944us; 15946us; 15978us; 15979us; 15981us; 16013us; 16014us; 16016us; 16048us; 16049us; 16080us; 16088us; 16118us; 16125us; 16127us; 16129us; 16159us; 16166us; 16174us; 16204us; 16211us; 16213us; 16215us; 16245us; 16252us; 16254us; 16285us; 16286us; 16295us; 16325us; 16326us; 16356us; 16357us; 16387us; 16388us; 16397us; 16427us; 16428us; 16458us; 16459us; 16461us; 16462us; 16464us; 16466us; 16468us; 16473us; 16475us; 16476us; 16483us; 16484us; 16547us; 16549us; 16551us; 16552us; 16615us; 16616us; 16679us; 16711us; 16743us; 16747us; 16751us; 16756us; 16761us; 16762us; 16825us; 16826us; 16857us; 16888us; 16889us; 16952us; 16954us; 16956us; 16987us; 17018us; 17019us; 17082us; 17085us; 17086us; 17089us; 17090us; 17093us; 17094us; 17096us; 17097us; 17099us; 17130us; 17131us; 17133us; 17138us; 17169us; 17170us; 17171us; 17236us; 17239us; 17242us; 17245us; 17246us; 17309us; 17311us; 17313us; 17314us; 17377us; 17378us; 17408us; 17410us; 17411us; 17412us; 17444us; 17450us; 17457us; 17458us; 17459us; 17460us; 17461us; 17495us; 17496us; 17497us; 17501us; 17502us; 17503us; 17506us; 17510us; 17511us; 17519us; 17520us; 17521us; 17523us; 17524us; 17558us; 17560us; 17598us; 17599us; 17600us; 17601us; 17602us; 17606us; 17607us; 17608us; 17609us; 17610us; 17612us; 17643us; 17644us; 17645us; 17646us; 17655us; 17659us; 17660us; 17662us; 17663us; 17665us; 17666us; 17674us; 17680us; 17681us; 17683us; 17686us; 17687us; 17689us; 17690us; 17691us; 17698us; 17699us; 17700us; 17701us; 17702us; 17703us; 17711us; 17719us; 17727us; 17729us; 17730us; 17731us; 17733us; 17735us; 17736us; 17737us; 17738us; 17739us; 17748us; 17749us; 17750us; 17778us; 17782us; 17783us; 17787us; 17788us; 17789us; 17791us; 17797us; 17798us; 17800us; 17804us; 17805us; 17806us; 17807us; 17808us; 17809us; 17810us; 17811us; 17812us; 17813us; 17814us; 17815us; 17816us; 17817us; 17818us; 17819us; 17820us; 17821us; 17822us; 17823us; 17824us; 17825us; 17826us; 17827us; 17828us; 17830us; 17831us; 17833us; 17834us; 17835us; 17837us; 17838us; 17839us; 17840us; 17841us; 17843us; 17844us; 17849us; 17850us; 17851us; 17852us; 17853us; 17854us; 17855us; 17859us; 17860us; 17864us; 17865us; 17867us; 17869us; 17870us; 17871us; 17872us; 17873us; 17874us; 17875us; 17876us; 17877us; 17878us; 17879us; 17880us; 17881us; 17882us; 17883us; 17884us; 17885us; 17886us; 17887us; 17888us; 17889us; 17890us; 17891us; 17892us; 17893us; 17894us; 17895us; 17896us; 17897us; 17898us; 17899us; 17903us; 17907us; 17908us; 17909us; 17910us; 17914us; 17918us; 17919us; 17920us; 17921us; 17925us; 17926us; 17927us; 17928us; 17932us; 17933us; 17934us; 17935us; 17939us; 17940us; 17941us; 17942us; 17943us; 17944us; 17945us; 17946us; 17947us; 17948us; 17949us; 17950us; 17951us; 17952us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 0us; 2us; 1us; 2us; 3us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 1us; 1us; 5us; 5us; 3us; 3us; 2us; 12us; 0us; 2us; 4us; 3us; 5us; 3us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 2us; 3us; 0us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 1us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 5us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 4us; 6us; 6us; 6us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 2us; 2us; 5us; 2us; 1us; 5us; 1us; 3us; 0us; 2us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 7us; 7us; 7us; 5us; 3us; 4us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 5us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 1us; 1us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 4us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 1us; 3us; 4us; 2us; 1us; 1us; 3us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 4us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 3us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 9us; 10us; 10us; 11us; 12us; 12us; 13us; 14us; 14us; 14us; 15us; 16us; 17us; 17us; 18us; 18us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 23us; 24us; 24us; 24us; 24us; 24us; 24us; 24us; 25us; 26us; 26us; 26us; 27us; 27us; 27us; 28us; 29us; 29us; 30us; 30us; 31us; 31us; 32us; 32us; 32us; 33us; 33us; 33us; 33us; 34us; 34us; 34us; 34us; 35us; 35us; 35us; 36us; 36us; 37us; 38us; 38us; 38us; 38us; 38us; 38us; 38us; 39us; 39us; 39us; 39us; 40us; 40us; 41us; 41us; 41us; 42us; 43us; 43us; 44us; 44us; 44us; 45us; 45us; 46us; 46us; 47us; 48us; 48us; 49us; 49us; 49us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 51us; 52us; 52us; 52us; 52us; 52us; 53us; 53us; 54us; 54us; 54us; 54us; 54us; 54us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 57us; 58us; 59us; 59us; 60us; 60us; 61us; 61us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 64us; 64us; 64us; 64us; 65us; 65us; 65us; 65us; 66us; 67us; 67us; 68us; 68us; 68us; 68us; 69us; 69us; 69us; 70us; 70us; 70us; 71us; 71us; 71us; 71us; 72us; 72us; 73us; 73us; 73us; 74us; 74us; 74us; 75us; 76us; 76us; 76us; 77us; 77us; 78us; 79us; 79us; 80us; 80us; 81us; 81us; 81us; 81us; 81us; 81us; 81us; 81us; 81us; 81us; 81us; 82us; 83us; 84us; 84us; 85us; 85us; 85us; 86us; 86us; 87us; 87us; 87us; 88us; 88us; 89us; 89us; 90us; 90us; 91us; 91us; 91us; 92us; 92us; 93us; 94us; 94us; 95us; 95us; 96us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 100us; 101us; 101us; 101us; 102us; 103us; 103us; 103us; 104us; 104us; 105us; 105us; 105us; 106us; 106us; 107us; 107us; 108us; 109us; 110us; 110us; 110us; 111us; 112us; 112us; 113us; 113us; 114us; 114us; 115us; 115us; 116us; 116us; 116us; 116us; 116us; 116us; 116us; 116us; 116us; 116us; 117us; 117us; 118us; 118us; 118us; 119us; 120us; 120us; 121us; 121us; 121us; 121us; 122us; 122us; 122us; 123us; 123us; 123us; 124us; 124us; 125us; 125us; 126us; 126us; 127us; 127us; 128us; 128us; 129us; 130us; 131us; 132us; 133us; 134us; 134us; 135us; 135us; 136us; 137us; 137us; 138us; 139us; 140us; 141us; 141us; 141us; 141us; 142us; 142us; 143us; 144us; 144us; 144us; 145us; 145us; 146us; 146us; 147us; 147us; 147us; 147us; 147us; 148us; 148us; 149us; 150us; 150us; 151us; 151us; 152us; 152us; 152us; 153us; 153us; 153us; 154us; 155us; 155us; 156us; 157us; 157us; 158us; 158us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 160us; 160us; 161us; 162us; 162us; 162us; 162us; 163us; 163us; 164us; 164us; 164us; 164us; 164us; 165us; 165us; 165us; 165us; 165us; 165us; 166us; 166us; 167us; 167us; 168us; 168us; 169us; 170us; 170us; 170us; 170us; 170us; 170us; 171us; 171us; 172us; 172us; 172us; 172us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 174us; 174us; 175us; 175us; 175us; 175us; 175us; 175us; 175us; 175us; 176us; 176us; 177us; 177us; 178us; 179us; 179us; 180us; 181us; 181us; 181us; 182us; 182us; 182us; 183us; 183us; 184us; 184us; 185us; 185us; 186us; 186us; 186us; 186us; 186us; 186us; 187us; 187us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 188us; 189us; 189us; 190us; 190us; 190us; 191us; 191us; 191us; 191us; 192us; 193us; 193us; 193us; 193us; 193us; 194us; 194us; 195us; 196us; 197us; 197us; 197us; 198us; 198us; 198us; 198us; 198us; 198us; 199us; 199us; 199us; 199us; 200us; 200us; 200us; 200us; 200us; 200us; 200us; 200us; 200us; 200us; 200us; 200us; 201us; 201us; 202us; 202us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 203us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 205us; 205us; 206us; 206us; 206us; 206us; 206us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 208us; 208us; 208us; 208us; 209us; 209us; 209us; 209us; 210us; 210us; 210us; 210us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 212us; 212us; 212us; 213us; 213us; 214us; 214us; 215us; 215us; 215us; 215us; 215us; 216us; 216us; 216us; 217us; 217us; 218us; 218us; 219us; 219us; 219us; 220us; 221us; 221us; 221us; 221us; 222us; 223us; 224us; 224us; 225us; 225us; 226us; 226us; 227us; 227us; 227us; 228us; 228us; 228us; 228us; 228us; 228us; 228us; 228us; 229us; 229us; 230us; 230us; 230us; 230us; 231us; 231us; 232us; 232us; 233us; 233us; 233us; 233us; 233us; 234us; 234us; 234us; 235us; 235us; 235us; 236us; 236us; 237us; 237us; 237us; 238us; 239us; 239us; 239us; 240us; 241us; 241us; 242us; 242us; 242us; 242us; 242us; 242us; 242us; 242us; 243us; 243us; 244us; 244us; 245us; 245us; 246us; 246us; 247us; 247us; 248us; 248us; 249us; 249us; 250us; 250us; 250us; 250us; 250us; 250us; 251us; 251us; 252us; 252us; 252us; 252us; 253us; 253us; 253us; 254us; 254us; 255us; 255us; 256us; 256us; 257us; 257us; 257us; 257us; 257us; 257us; 257us; 258us; 258us; 258us; 258us; 259us; 260us; 260us; 260us; 261us; 261us; 261us; 262us; 262us; 262us; 262us; 262us; 262us; 262us; 263us; 263us; 263us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 265us; 265us; 266us; 266us; 266us; 266us; 266us; 266us; 266us; 267us; 267us; 267us; 268us; 268us; 269us; 270us; 270us; 271us; 271us; 271us; 272us; 272us; 272us; 272us; 273us; 273us; 274us; 274us; 274us; 274us; 275us; 275us; 276us; 277us; 278us; 278us; 278us; 278us; 279us; 279us; 279us; 279us; 279us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 280us; 281us; 282us; 282us; 283us; 283us; 284us; 284us; 284us; 284us; 285us; 286us; 286us; 286us; 287us; 287us; 288us; 288us; 289us; 289us; 289us; 289us; 290us; 290us; 290us; 291us; 291us; 291us; 291us; 292us; 292us; 293us; 293us; 294us; 294us; 295us; 295us; 296us; 296us; 297us; 297us; 298us; 298us; 299us; 299us; 300us; 300us; 301us; 301us; 302us; 302us; 303us; 303us; 304us; 304us; 305us; 305us; 306us; 306us; 306us; 307us; 307us; 308us; 308us; 308us; 309us; 309us; 309us; 310us; 310us; 310us; 311us; 311us; 311us; 312us; 312us; 312us; 313us; 313us; 313us; 313us; 313us; 314us; 314us; 314us; 314us; 314us; 314us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16387us; 16388us; 16389us; 16390us; 16391us; 16392us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 16398us; 65535us; 16400us; 65535us; 65535us; 65535us; 16402us; 65535us; 16404us; 16405us; 16406us; 65535us; 65535us; 65535us; 16409us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 16418us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 16421us; 16422us; 16423us; 65535us; 65535us; 65535us; 16424us; 16425us; 65535us; 16426us; 16427us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 16431us; 16433us; 16434us; 65535us; 65535us; 65535us; 65535us; 16435us; 16436us; 16437us; 16438us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 65535us; 16443us; 65535us; 65535us; 16444us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 65535us; 16450us; 16451us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16452us; 65535us; 16453us; 16454us; 16455us; 65535us; 65535us; 16456us; 16457us; 65535us; 65535us; 16458us; 16459us; 65535us; 16460us; 65535us; 65535us; 16461us; 16462us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16465us; 16466us; 16467us; 16468us; 65535us; 65535us; 16470us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16471us; 65535us; 65535us; 65535us; 65535us; 65535us; 16474us; 65535us; 65535us; 16475us; 65535us; 16476us; 65535us; 65535us; 16477us; 65535us; 16479us; 65535us; 65535us; 16480us; 16481us; 65535us; 65535us; 16483us; 16484us; 65535us; 16486us; 65535us; 16487us; 65535us; 65535us; 16488us; 65535us; 16490us; 65535us; 16491us; 65535us; 16492us; 65535us; 16494us; 65535us; 16495us; 65535us; 65535us; 16497us; 65535us; 65535us; 65535us; 16498us; 16499us; 65535us; 65535us; 65535us; 16500us; 16501us; 65535us; 16502us; 16503us; 16504us; 65535us; 65535us; 65535us; 65535us; 16506us; 16509us; 16510us; 65535us; 16511us; 65535us; 16512us; 65535us; 65535us; 65535us; 65535us; 16515us; 16516us; 16517us; 65535us; 65535us; 16518us; 65535us; 16519us; 65535us; 16520us; 65535us; 65535us; 16521us; 16522us; 65535us; 65535us; 16523us; 65535us; 16524us; 16525us; 65535us; 16526us; 65535us; 65535us; 65535us; 16528us; 16529us; 65535us; 16530us; 16531us; 16532us; 16533us; 65535us; 65535us; 65535us; 16535us; 16536us; 16537us; 65535us; 65535us; 16538us; 16539us; 65535us; 16542us; 65535us; 65535us; 65535us; 65535us; 16543us; 65535us; 65535us; 16544us; 16545us; 16546us; 16547us; 65535us; 16548us; 65535us; 65535us; 16549us; 65535us; 65535us; 65535us; 16550us; 65535us; 65535us; 65535us; 65535us; 16551us; 65535us; 16552us; 65535us; 16553us; 65535us; 16554us; 65535us; 16555us; 65535us; 16556us; 16557us; 16558us; 16559us; 65535us; 65535us; 16560us; 65535us; 65535us; 16561us; 65535us; 65535us; 16564us; 16565us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16566us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16567us; 16568us; 65535us; 16569us; 16570us; 16571us; 65535us; 65535us; 16572us; 16573us; 65535us; 65535us; 16574us; 16575us; 65535us; 16576us; 65535us; 65535us; 16577us; 16578us; 65535us; 65535us; 16579us; 16580us; 16581us; 16582us; 65535us; 16583us; 65535us; 65535us; 16585us; 65535us; 16586us; 65535us; 65535us; 16587us; 16588us; 65535us; 65535us; 16590us; 65535us; 65535us; 65535us; 65535us; 65535us; 16591us; 65535us; 65535us; 65535us; 65535us; 16592us; 16593us; 65535us; 16595us; 65535us; 65535us; 65535us; 65535us; 16596us; 16597us; 65535us; 65535us; 16598us; 65535us; 65535us; 16599us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16600us; 16601us; 65535us; 16602us; 65535us; 16603us; 65535us; 16604us; 65535us; 65535us; 65535us; 65535us; 65535us; 16605us; 65535us; 16606us; 65535us; 65535us; 65535us; 65535us; 65535us; 16607us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16608us; 65535us; 16610us; 65535us; 65535us; 16611us; 16612us; 65535us; 16613us; 16615us; 16616us; 16617us; 16618us; 16619us; 65535us; 65535us; 16621us; 65535us; 65535us; 16623us; 65535us; 65535us; 16625us; 65535us; 65535us; 16626us; 16627us; 16628us; 65535us; 16630us; 16631us; 65535us; 16633us; 16634us; 65535us; 65535us; 16635us; 16636us; 16637us; 65535us; 65535us; 16638us; 65535us; 65535us; 65535us; 65535us; 16640us; 65535us; 16641us; 16642us; 65535us; 65535us; 16643us; 16644us; 16645us; 65535us; 65535us; 65535us; 65535us; 65535us; 16646us; 16647us; 16648us; 16649us; 65535us; 65535us; 16650us; 65535us; 65535us; 16651us; 16652us; 65535us; 16653us; 65535us; 65535us; 16654us; 16655us; 16656us; 16657us; 16658us; 16659us; 65535us; 65535us; 65535us; 65535us; 16662us; 16663us; 65535us; 65535us; 16664us; 65535us; 65535us; 65535us; 65535us; 16665us; 16666us; 65535us; 16667us; 65535us; 65535us; 65535us; 16668us; 16669us; 65535us; 65535us; 65535us; 65535us; 16672us; 16673us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16679us; 16680us; 65535us; 65535us; 65535us; 16681us; 65535us; 65535us; 16682us; 65535us; 16683us; 65535us; 16684us; 16685us; 65535us; 65535us; 16686us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16687us; 65535us; 16688us; 16689us; 65535us; 16691us; 16692us; 65535us; 16693us; 65535us; 65535us; 16694us; 65535us; 16696us; 65535us; 65535us; 16697us; 65535us; 65535us; 65535us; 16699us; 65535us; 65535us; 16700us; 65535us; 65535us; 16701us; 65535us; 65535us; 16702us; 16703us; 65535us; 65535us; 16704us; 65535us; 65535us; 16705us; 65535us; 16706us; 65535us; 65535us; 65535us; 16708us; 65535us; 16709us; 65535us; 65535us; 16711us; 65535us; 65535us; 65535us; 65535us; 16715us; 16716us; 65535us; 65535us; 16717us; 16718us; 65535us; 16719us; 65535us; 65535us; 65535us; 65535us; 16720us; 65535us; 16721us; 16722us; 65535us; 65535us; 65535us; 65535us; 16723us; 65535us; 65535us; 16725us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16729us; 16730us; 65535us; 16731us; 65535us; 65535us; 65535us; 16732us; 65535us; 65535us; 16733us; 16734us; 16735us; 16736us; 16737us; 16738us; 16739us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16740us; 65535us; 65535us; 65535us; 16744us; 65535us; 16745us; 65535us; 65535us; 16747us; 65535us; 65535us; 65535us; 65535us; 16749us; 16750us; 16751us; 65535us; 65535us; 16752us; 65535us; 65535us; 16755us; 65535us; 65535us; 16756us; 65535us; 16758us; 16759us; 65535us; 65535us; 65535us; 65535us; 65535us; 16760us; 16761us; 16762us; 65535us; 65535us; 16763us; 16764us; 16765us; 65535us; 65535us; 16767us; 65535us; 65535us; 65535us; 16769us; 65535us; 16770us; 16771us; 65535us; 65535us; 16772us; 16773us; 16774us; 16775us; 16776us; 16777us; 16778us; 16779us; 16780us; 16781us; 16782us; 16783us; 16784us; 16785us; 16786us; 65535us; 16787us; 16788us; 16789us; 16790us; 65535us; 65535us; 16792us; 65535us; 16794us; 65535us; 16795us; 65535us; 65535us; 65535us; 16796us; 65535us; 65535us; 16799us; 65535us; 65535us; 16800us; 16801us; 16802us; 65535us; 16803us; 16804us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16805us; 65535us; 65535us; 65535us; 65535us; 16810us; 65535us; 65535us; 65535us; 65535us; 65535us; 16815us; 65535us; 16816us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16819us; 65535us; 16820us; 65535us; 16821us; 65535us; 65535us; 16823us; 65535us; 65535us; 16824us; 16825us; 65535us; 16826us; 65535us; 16827us; 65535us; 16828us; 16830us; 65535us; 16831us; 65535us; 65535us; 16832us; 65535us; 65535us; 16833us; 65535us; 65535us; 16834us; 16835us; 65535us; 65535us; 16836us; 16837us; 16838us; 16839us; 16840us; 16841us; 65535us; 65535us; 16842us; 16843us; 65535us; 65535us; 16845us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16848us; 65535us; 65535us; 65535us; 65535us; 16852us; 65535us; 65535us; 16855us; 65535us; 65535us; 65535us; 65535us; 16860us; 65535us; 16861us; 65535us; 16862us; 65535us; 65535us; 16865us; 65535us; 16866us; 65535us; 65535us; 16867us; 16868us; 16869us; 65535us; 65535us; 16870us; 65535us; 65535us; 16872us; 65535us; 65535us; 16874us; 65535us; 65535us; 65535us; 65535us; 16876us; 65535us; 16879us; 65535us; 65535us; 65535us; 16880us; 65535us; 16882us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16883us; 65535us; 65535us; 16884us; 16885us; 65535us; 16886us; 16887us; 65535us; 16888us; 16889us; 16890us; 16891us; 16892us; 65535us; 65535us; 16893us; 16894us; 65535us; 65535us; 16895us; 16896us; 65535us; 16897us; 65535us; 65535us; 16898us; 16899us; 16900us; 65535us; 65535us; 65535us; 65535us; 65535us; 16904us; 65535us; 16905us; 65535us; 65535us; 65535us; 65535us; 16907us; 16908us; 65535us; 16909us; 16910us; 16911us; 16912us; 65535us; 65535us; 65535us; 65535us; 16913us; 16914us; 16915us; 16916us; 16917us; 65535us; 65535us; 65535us; 16918us; 16919us; 16920us; 16921us; 16922us; 65535us; 65535us; 16923us; 16924us; 16925us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16929us; 65535us; 65535us; 65535us; 65535us; 65535us; 16930us; 16931us; 65535us; 65535us; 65535us; 65535us; 16932us; 65535us; 65535us; 16933us; 65535us; 16934us; 65535us; 16935us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16936us; 65535us; 16937us; 65535us; 16938us; 65535us; 65535us; 65535us; 16940us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16962us; 16963us; 16964us; 16965us; 16966us; 16967us; 16968us; 16969us; 16970us; 16971us; 16972us; 16973us; 16974us; 16975us; 16976us; 16977us; 16978us; 16979us; 16980us; 16981us; 16983us; 65535us; 65535us; 16984us; 65535us; 16985us; 65535us; 65535us; 16986us; 16987us; 16988us; 65535us; 16989us; 16990us; 16991us; 16992us; 65535us; 65535us; 65535us; 16994us; 16995us; 16996us; 16997us; 65535us; 65535us; 17000us; 65535us; 17001us; 65535us; 65535us; 65535us; 65535us; 17003us; 17004us; 65535us; 65535us; 65535us; 65535us; 17007us; 17008us; 65535us; 17009us; 17010us; 65535us; 17012us; 65535us; 17013us; 65535us; 65535us; 17015us; 65535us; 65535us; 17016us; 65535us; 65535us; 17017us; 65535us; 65535us; 17018us; 65535us; 65535us; 17019us; 65535us; 65535us; 17020us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17021us; 65535us; 17022us; 17023us; 65535us; 17024us; 65535us; 17025us; 65535us; 65535us; 17027us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17033us; 65535us; 65535us; 65535us; 17035us; 65535us; 65535us; 17036us; 65535us; 65535us; 17037us; 65535us; 17038us; 17039us; 17040us; 65535us; 65535us; 17041us; 17042us; 17043us; 17044us; 17045us; 17046us; 17048us; 65535us; 65535us; 65535us; 65535us; 17049us; 65535us; 17050us; 65535us; 65535us; 17051us; 17052us; 65535us; 17053us; 17054us; 17055us; 17056us; 65535us; 65535us; 17057us; 65535us; 65535us; 17062us; 17064us; 17065us; 17066us; 17067us; 17068us; 17069us; 17070us; 17071us; 17072us; 65535us; 65535us; 17073us; 17074us; 65535us; 17075us; 17076us; 65535us; 65535us; 65535us; 17077us; 17078us; 17079us; 17080us; 65535us; 65535us; 17081us; 17082us; 17083us; 17084us; 65535us; 65535us; 65535us; 17085us; 65535us; 17086us; 17087us; 17088us; 65535us; 17089us; 17090us; 17091us; 17092us; 17093us; 65535us; 65535us; 65535us; 65535us; 65535us; 17094us; 17095us; 17096us; 17097us; 65535us; 65535us; 17098us; 65535us; 17099us; 65535us; 65535us; 17101us; 17102us; 17103us; 17104us; 17105us; 17106us; 17107us; 17108us; 17109us; 17111us; 17112us; 65535us; 65535us; 17115us; 65535us; 17116us; 65535us; 17118us; 17119us; 17120us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17122us; 17123us; 17126us; 65535us; 65535us; 65535us; 17128us; 65535us; 17130us; 65535us; 17131us; 65535us; 65535us; 65535us; 65535us; 65535us; 17132us; 65535us; 65535us; 65535us; 17133us; 65535us; 65535us; 65535us; 65535us; 17136us; 65535us; 65535us; 65535us; 17137us; 65535us; 65535us; 17138us; 65535us; 65535us; 65535us; 17139us; 17140us; 65535us; 65535us; 65535us; 17144us; 17145us; 65535us; 17147us; 17148us; 65535us; 65535us; 17150us; 17152us; 17154us; 65535us; 65535us; 65535us; 17155us; 65535us; 17156us; 17158us; 17161us; 65535us; 17163us; 65535us; 65535us; 17164us; 65535us; 17165us; 65535us; 17166us; 65535us; 17168us; 65535us; 17169us; 65535us; 65535us; 65535us; 65535us; 17170us; 17171us; 17172us; 65535us; 65535us; 65535us; 17173us; 17174us; 65535us; 65535us; 65535us; 65535us; 17175us; 17176us; 65535us; 17177us; 17178us; 65535us; 17179us; 65535us; 17180us; 65535us; 17181us; 65535us; 65535us; 17182us; 65535us; 65535us; 65535us; 65535us; 65535us; 17188us; 65535us; 65535us; 17189us; 65535us; 65535us; 17191us; 65535us; 65535us; 17193us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17201us; 65535us; 65535us; 17203us; 65535us; 17204us; 65535us; 17205us; 65535us; 65535us; 17207us; 65535us; 17208us; 65535us; 17213us; 65535us; 65535us; 65535us; 65535us; 65535us; 17214us; 65535us; 17216us; 65535us; 65535us; 65535us; 17217us; 65535us; 17218us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17219us; 65535us; 17220us; 65535us; 65535us; 17221us; 65535us; 65535us; 65535us; 65535us; 65535us; 17222us; 65535us; 65535us; 17223us; 65535us; 17224us; 65535us; 17225us; 65535us; 17226us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17228us; 17229us; 65535us; 65535us; 65535us; 65535us; 17232us; 65535us; 65535us; 65535us; 17233us; 65535us; 17238us; 65535us; 65535us; 17245us; 17246us; 65535us; 65535us; 65535us; 17247us; 17248us; 17249us; 17250us; 65535us; 17252us; 17253us; 65535us; 17254us; 17255us; 65535us; 65535us; 17257us; 65535us; 17258us; 17259us; 65535us; 17260us; 65535us; 65535us; 65535us; 65535us; 17261us; 17262us; 17263us; 65535us; 17264us; 17265us; 17266us; 17267us; 65535us; 65535us; 17269us; 17271us; 17272us; 65535us; 65535us; 17274us; 65535us; 17275us; 65535us; 17277us; 65535us; 65535us; 17278us; 65535us; 65535us; 17280us; 65535us; 17281us; 17282us; 65535us; 17284us; 17285us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17289us; 17290us; 65535us; 65535us; 17291us; 17292us; 17293us; 17294us; 65535us; 17295us; 17296us; 65535us; 65535us; 17297us; 65535us; 17298us; 17299us; 65535us; 65535us; 17300us; 65535us; 65535us; 17301us; 17302us; 17303us; 17304us; 17305us; 17306us; 17307us; 17308us; 17309us; 17310us; 17311us; 17312us; 17313us; 17314us; 17315us; 17316us; 17317us; 17318us; 17319us; 17320us; 17321us; 17322us; 17323us; 17324us; 65535us; 17326us; 65535us; 17327us; 17328us; 65535us; 17329us; 17330us; 17331us; 17332us; 65535us; 17334us; 65535us; 17335us; 17336us; 17337us; 17338us; 17339us; 17340us; 65535us; 17342us; 65535us; 17343us; 65535us; 65535us; 17347us; 17348us; 17349us; 17350us; 17351us; 17352us; 17353us; 17354us; 17356us; 17358us; 17360us; 17362us; 17364us; 17368us; 17370us; 17372us; 17373us; 17374us; 17375us; 17376us; 17377us; 17378us; 17379us; 17380us; 17381us; 17382us; 17383us; 17384us; 17385us; 17387us; 65535us; 65535us; 17389us; 17390us; 17391us; 65535us; 65535us; 17392us; 17393us; 17394us; 65535us; 17395us; 17396us; 17397us; 65535us; 17398us; 17399us; 17400us; 65535us; 17401us; 17402us; 17403us; 17404us; 17405us; 17406us; 17407us; 17408us; 17409us; 17410us; 17411us; 17412us; 17413us; 17414us; |]
let _fsyacc_reductions ()  =    [| 
# 2703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
# 2712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
# 2721 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedFsiInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
# 2730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 488 "../pars.fsy"
                            IDefns (_1,lhs parseState) 
                   )
# 488 "../pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2741 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 491 "../pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(),rhs parseState 1));
                            IDefns ([],lhs parseState) 
                   )
# 491 "../pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 495 "../pars.fsy"
                            IDefns ([],lhs parseState) 
                   )
# 495 "../pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 "../pars.fsy"
                                              
                   )
# 500 "../pars.fsy"
                 : 'interactiveTerminator));
# 2772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 "../pars.fsy"
                                  
                   )
# 501 "../pars.fsy"
                 : 'interactiveTerminator));
# 2783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 515 "../pars.fsy"
                            [] 
                   )
# 515 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 518 "../pars.fsy"
                            _1 
                   )
# 518 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 521 "../pars.fsy"
                            _1 
                   )
# 521 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 524 "../pars.fsy"
                            _1 
                   )
# 524 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 "../pars.fsy"
                            _1 @ _3 
                   )
# 527 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 530 "../pars.fsy"
                            _1 @ _3 
                   )
# 530 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 533 "../pars.fsy"
                            _1 @ _3 
                   )
# 533 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 539 "../pars.fsy"
                             _1 
                   )
# 539 "../pars.fsy"
                 : 'interactiveDefns));
# 2880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 542 "../pars.fsy"
                             _1 @ _2 
                   )
# 542 "../pars.fsy"
                 : 'interactiveDefns));
# 2892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 548 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
# 548 "../pars.fsy"
                 : 'interactiveExpr));
# 2907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 556 "../pars.fsy"
                             [SynModuleDecl.HashDirective(_1,rhs parseState 1)] 
                   )
# 556 "../pars.fsy"
                 : 'interactiveHash));
# 2918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 561 "../pars.fsy"
                                                                    
                   )
# 561 "../pars.fsy"
                 : 'interactiveSeparators));
# 2929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 "../pars.fsy"
                                                                      
                   )
# 562 "../pars.fsy"
                 : 'interactiveSeparators));
# 2941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 567 "../pars.fsy"
                                     
                   )
# 567 "../pars.fsy"
                 : 'interactiveSeparator));
# 2951 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 568 "../pars.fsy"
                                     
                   )
# 568 "../pars.fsy"
                 : 'interactiveSeparator));
# 2961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 578 "../pars.fsy"
                            ParsedHashDirective (_2,_3,lhs parseState) 
                   )
# 578 "../pars.fsy"
                 : 'hashDirective));
# 2973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 584 "../pars.fsy"
                            [] 
                   )
# 584 "../pars.fsy"
                 : 'hashDirectiveArgs));
# 2983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 587 "../pars.fsy"
                            _1 @ [_2] 
                   )
# 587 "../pars.fsy"
                 : 'hashDirectiveArgs));
# 2995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 "../pars.fsy"
                             _1 
                   )
# 593 "../pars.fsy"
                 : 'hashDirectiveArg));
# 3006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 602 "../pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 602 "../pars.fsy"
                 : Ast.ParsedSigFile));
# 3018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 605 "../pars.fsy"
                            _1 
                   )
# 605 "../pars.fsy"
                 : Ast.ParsedSigFile));
# 3030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 611 "../pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedSigFile([],[emptySigFileFrag]) 
                   )
# 611 "../pars.fsy"
                 : Ast.ParsedSigFile));
# 3042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 619 "../pars.fsy"
                             _3.Lid,grabXmlDoc(parseState,1),_2 
                   )
# 619 "../pars.fsy"
                 : 'moduleIntro));
# 3055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 625 "../pars.fsy"
                             _2.Lid,grabXmlDoc(parseState,1)  
                   )
# 625 "../pars.fsy"
                 : 'namespaceIntro));
# 3066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 631 "../pars.fsy"
                             ParsedSigFile([],[ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 631 "../pars.fsy"
                 : 'fileNamespaceSpecs));
# 3077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 634 "../pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_,_, decls, _,_,_) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedSigFile(decls, _2) 
                   )
# 634 "../pars.fsy"
                 : 'fileNamespaceSpecs));
# 3102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 652 "../pars.fsy"
                            _1 :: _2 
                   )
# 652 "../pars.fsy"
                 : 'fileNamespaceSpecList));
# 3114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 655 "../pars.fsy"
                            [_1] 
                   )
# 655 "../pars.fsy"
                 : 'fileNamespaceSpecList));
# 3125 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 659 "../pars.fsy"
                            let path,xml = _1 in (_3 (path,xml)) 
                   )
# 659 "../pars.fsy"
                 : 'fileNamespaceSpec));
# 3138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 665 "../pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 3 4)
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid,true, _4, xml,_1,vis,m)))  
                   )
# 665 "../pars.fsy"
                 : 'fileModuleSpec));
# 3159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 675 "../pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedSigFileFragment.NamespaceFragment(path,false, _1, xml,[],m))  
                   )
# 675 "../pars.fsy"
                 : 'fileModuleSpec));
# 3174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 684 "../pars.fsy"
                             _1 
                   )
# 684 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 687 "../pars.fsy"
                             _2 
                   )
# 687 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3198 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 690 "../pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                              _2 
                            
                   )
# 690 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3213 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 696 "../pars.fsy"
                              [] 
                   )
# 696 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 701 "../pars.fsy"
                             _1 
                   )
# 701 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 704 "../pars.fsy"
                             [] 
                   )
# 704 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 707 "../pars.fsy"
                             [] 
                   )
# 707 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 712 "../pars.fsy"
                            _1 :: _3 
                   )
# 712 "../pars.fsy"
                 : 'moduleSpfns));
# 3268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 715 "../pars.fsy"
                            (* silent recovery *) _3 
                   )
# 715 "../pars.fsy"
                 : 'moduleSpfns));
# 3280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 718 "../pars.fsy"
                            [_1] 
                   )
# 718 "../pars.fsy"
                 : 'moduleSpfns));
# 3292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 723 "../pars.fsy"
                             SynModuleSigDecl.HashDirective (_1,rhs2 parseState 1 1)  
                   )
# 723 "../pars.fsy"
                 : 'moduleSpfn));
# 3303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 726 "../pars.fsy"
                             _1 
                   )
# 726 "../pars.fsy"
                 : 'moduleSpfn));
# 3314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 729 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                             if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                             if isSome(vis)           then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate());
                             SynModuleSigDecl.ModuleAbbrev(List.head path,_5,rhs2 parseState 3 5) 
                   )
# 729 "../pars.fsy"
                 : 'moduleSpfn));
# 3334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 737 "../pars.fsy"
                             let path,xml,vis = _3 
                             if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName());
                             let info = ComponentInfo(_1,[],[],path,xml,false,vis,rhs parseState 3)
                             if isSome(_2) then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             SynModuleSigDecl.NestedModule(info,_5,rhs2 parseState 3 5) 
                   )
# 737 "../pars.fsy"
                 : 'moduleSpfn));
# 3353 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 744 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (TypeDefnSig(ComponentInfo(cas,a,cs,b,c,d,d2,d3),e,f,g)),rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h::t -> h,t 
                             let tc = (TypeDefnSig(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))in 
                             SynModuleSigDecl.Types (tc::rest,rhs parseState 3) 
                   )
# 744 "../pars.fsy"
                 : 'moduleSpfn));
# 3372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 753 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionSig(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let ec = (ExceptionSig(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
# 753 "../pars.fsy"
                 : 'moduleSpfn));
# 3388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 759 "../pars.fsy"
                             SynModuleSigDecl.Open (_2.Lid, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 759 "../pars.fsy"
                 : 'moduleSpfn));
# 3399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 763 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attr1,attr2,isInline,isMutable,vis2,id,doc,explicitValTyparDecls,(ty,arity),konst = (_1),(_4),(_5),(_6),(_7),(_8),grabXmlDoc(parseState,3),(_9),(_11),(_12) 
                             if nonNil attr2 then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(),rhs parseState 4));
                             let m = rhs2 parseState 3 11 
                             let valSpfn = ValSpfn((attr1@attr2),id,explicitValTyparDecls,ty,arity,isInline,isMutable,doc, vis2,konst,m) 
                             SynModuleSigDecl.Val(valSpfn,m)
                           
                   )
# 763 "../pars.fsy"
                 : 'valSpfn));
# 3425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 774 "../pars.fsy"
                             None 
                   )
# 774 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 777 "../pars.fsy"
                             Some(_2) 
                   )
# 777 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 780 "../pars.fsy"
                             Some(_3) 
                   )
# 780 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 788 "../pars.fsy"
                             _2 
                   )
# 788 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 792 "../pars.fsy"
                             _3 
                   )
# 792 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 796 "../pars.fsy"
                             _2 
                   )
# 796 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 802 "../pars.fsy"
                            _2 
                   )
# 802 "../pars.fsy"
                 : Ast.SynTypeDefnSig list));
# 3507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 807 "../pars.fsy"
                            _1 :: _3 
                   )
# 807 "../pars.fsy"
                 : 'tyconSpfnList));
# 3519 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 810 "../pars.fsy"
                            [_1] 
                   )
# 810 "../pars.fsy"
                 : 'tyconSpfnList));
# 3530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 816 "../pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
# 816 "../pars.fsy"
                 : 'tyconSpfn));
# 3543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 819 "../pars.fsy"
                             TypeDefnSig(_1,SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState),lhs parseState),_2,lhs parseState) 
                   )
# 819 "../pars.fsy"
                 : 'tyconSpfn));
# 3555 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 833 "../pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 833 "../pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 838 "../pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
# 838 "../pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 846 "../pars.fsy"
                            let m = _1.Range 
                            (fun lhsm nameInfo augmentation -> 
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.Simple (_1,m),augmentation,m)) 
                   )
# 846 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 851 "../pars.fsy"
                            let m = lhs parseState 
                            let needsCheck,(kind,decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then 
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (kind,decls,m),augmentation,m)) 
                   )
# 851 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 859 "../pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            let invoke = SynMemberSig.Member(ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m),AbstractMemberFlags MemberKind.Member,m) 
                            (fun nameRange nameInfo augmentation -> 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[],m)) 
                   )
# 859 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 870 "../pars.fsy"
                            let needsCheck,decls = _1 
                            needsCheck,(TyconUnspecified, decls) 
                   )
# 870 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 874 "../pars.fsy"
                            false,(_1,_2) 
                   )
# 874 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3656 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 877 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct());
                            false,(_1,_2) 
                   )
# 877 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 881 "../pars.fsy"
                            // silent recovery 
                            false,(_1,[]) 
                   )
# 881 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 888 "../pars.fsy"
                            true, _2 
                   )
# 888 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 891 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature());
                            false, _2 
                   )
# 891 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 896 "../pars.fsy"
                            false, _2 
                   )
# 896 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 899 "../pars.fsy"
                            false, _2 
                   )
# 899 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 905 "../pars.fsy"
                             _2 
                   )
# 905 "../pars.fsy"
                 : 'classSpfnBlock));
# 3742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 908 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature());
                             _2 
                   )
# 908 "../pars.fsy"
                 : 'classSpfnBlock));
# 3755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 911 "../pars.fsy"
                             _1 
                   )
# 911 "../pars.fsy"
                 : 'classSpfnBlock));
# 3766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 916 "../pars.fsy"
                            _1 
                   )
# 916 "../pars.fsy"
                 : 'classSpfnMembers));
# 3777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 919 "../pars.fsy"
                            [] 
                   )
# 919 "../pars.fsy"
                 : 'classSpfnMembers));
# 3787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 925 "../pars.fsy"
                            _1 :: _3 
                   )
# 925 "../pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
# 3800 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 931 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let isInline,doc,vis2,id,explicitValTyparDecls,(ty,arity),optLiteralValue = _4,grabXmlDoc(parseState,3),_5,_6,_7,_9,_11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, vis2,optLiteralValue,wholeRange)
                            let _,flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity),wholeRange) 
                   )
# 931 "../pars.fsy"
                 : 'classMemberSpfn));
# 3831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 945 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Interface (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 945 "../pars.fsy"
                 : 'classMemberSpfn));
# 3846 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 949 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.Inherit (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 949 "../pars.fsy"
                 : 'classMemberSpfn));
# 3860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 953 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let fld = _4 _1 false 
                            SynMemberSig.ValField(fld,rhs2 parseState 3 4) 
                   )
# 953 "../pars.fsy"
                 : 'classMemberSpfn));
# 3875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 958 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.ValField(_5 _1 true,rhs2 parseState 3 5) 
                   )
# 958 "../pars.fsy"
                 : 'classMemberSpfn));
# 3889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 962 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            SynMemberSig.NestedType(_5,rhs2 parseState 3 5) 
                   )
# 962 "../pars.fsy"
                 : 'classMemberSpfn));
# 3904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 966 "../pars.fsy"
                            let vis,doc,(ty,valSynInfo) = _2,grabXmlDoc(parseState,3),_5 
                            let m = unionRanges (rhs parseState 3) ty.Range 
                            let isInline = false 
                            let valSpfn = ValSpfn (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags,m) 
                   )
# 966 "../pars.fsy"
                 : 'classMemberSpfn));
# 3921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 976 "../pars.fsy"
                           None, MemberKind.Member 
                   )
# 976 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 979 "../pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 979 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 982 "../pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 982 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 985 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            Some (rhs2 parseState 1 2), _2 
                   )
# 985 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 992 "../pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 992 "../pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 998 "../pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired());
                           MemberKind.PropertyGetSet 
                   )
# 998 "../pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 3995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1006 "../pars.fsy"
                                       _1 
                   )
# 1006 "../pars.fsy"
                 : 'memberSpecFlags));
# 4006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1007 "../pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1007 "../pars.fsy"
                 : 'memberSpecFlags));
# 4016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1008 "../pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1008 "../pars.fsy"
                 : 'memberSpecFlags));
# 4026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1014 "../pars.fsy"
                            ExceptionSig(_1,_2,lhs parseState) 
                   )
# 1014 "../pars.fsy"
                 : 'exconSpfn));
# 4038 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1020 "../pars.fsy"
                            _2 
                   )
# 1020 "../pars.fsy"
                 : 'opt_classSpfn));
# 4050 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1023 "../pars.fsy"
                            [] 
                   )
# 1023 "../pars.fsy"
                 : 'opt_classSpfn));
# 4060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1032 "../pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 1032 "../pars.fsy"
                 : Ast.ParsedImplFile));
# 4072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1035 "../pars.fsy"
                            _1 
                   )
# 1035 "../pars.fsy"
                 : Ast.ParsedImplFile));
# 4084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1041 "../pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedImplFile([],[emptyImplFileFrag]) 
                   )
# 1041 "../pars.fsy"
                 : Ast.ParsedImplFile));
# 4096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1048 "../pars.fsy"
                             ParsedImplFile([], [ (_1 ([],PreXmlDoc.Empty)) ]) 
                   )
# 1048 "../pars.fsy"
                 : 'fileNamespaceImpls));
# 4107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1051 "../pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 ([],PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_,_, decls, _,_,_) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed());
                                          [])
                             ParsedImplFile(decls, _2) 
                   )
# 1051 "../pars.fsy"
                 : 'fileNamespaceImpls));
# 4132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1070 "../pars.fsy"
                            _1 :: _2 
                   )
# 1070 "../pars.fsy"
                 : 'fileNamespaceImplList));
# 4144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1073 "../pars.fsy"
                            [_1] 
                   )
# 1073 "../pars.fsy"
                 : 'fileNamespaceImplList));
# 4155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1079 "../pars.fsy"
                            let path,xml = _1 in (_3 (path,xml)) 
                   )
# 1079 "../pars.fsy"
                 : 'fileNamespaceImpl));
# 4168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1085 "../pars.fsy"
                           if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                           let m2 = rhs parseState 3
                           let m = (m2, _4) ||> unionRangeWithListBy (fun modu -> modu.Range)
                           (fun (path,_) -> 
                             if nonNil path then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2));
                             let path2,xml,vis = _3 
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid,true, _4, xml,_1,vis,m))) 
                   )
# 1085 "../pars.fsy"
                 : 'fileModuleImpl));
# 4189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1095 "../pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (path,xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1,m)  
                             | _ -> ParsedImplFileFragment.NamespaceFragment(path,false, _1, xml,[],m)) 
                   )
# 1095 "../pars.fsy"
                 : 'fileModuleImpl));
# 4204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1105 "../pars.fsy"
                            _2 
                   )
# 1105 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1108 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                            _2 
                   )
# 1108 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1113 "../pars.fsy"
                            []  
                   )
# 1113 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4242 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1116 "../pars.fsy"
                            _1 
                   )
# 1116 "../pars.fsy"
                 : Ast.SynModuleDecl list));
# 4253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1122 "../pars.fsy"
                            _1 
                   )
# 1122 "../pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1125 "../pars.fsy"
                            [] 
                   )
# 1125 "../pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1132 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
# 1132 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1137 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1137 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1142 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(),rhs parseState 3));
                             let attrDecls = if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1142 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1147 "../pars.fsy"
                             _1 
                   )
# 1147 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4333 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1150 "../pars.fsy"
                            if nonNil _1 then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
# 1150 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1156 "../pars.fsy"
                             _1 @ _2 
                   )
# 1156 "../pars.fsy"
                 : 'moduleDefns));
# 4356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1159 "../pars.fsy"
                             _1 @ _3 
                   )
# 1159 "../pars.fsy"
                 : 'moduleDefns));
# 4369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1162 "../pars.fsy"
                             _1 
                   )
# 1162 "../pars.fsy"
                 : 'moduleDefns));
# 4380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1165 "../pars.fsy"
                             _1 
                   )
# 1165 "../pars.fsy"
                 : 'moduleDefns));
# 4392 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1168 "../pars.fsy"
                             _3 
                   )
# 1168 "../pars.fsy"
                 : 'moduleDefns));
# 4404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1174 "../pars.fsy"
                             _1  
                   )
# 1174 "../pars.fsy"
                 : 'moduleDefnOrDirective));
# 4415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1177 "../pars.fsy"
                             [ SynModuleDecl.HashDirective (_1,rhs2 parseState 1 1) ] 
                   )
# 1177 "../pars.fsy"
                 : 'moduleDefnOrDirective));
# 4426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1186 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             parseState.ResetSynArgNameGenerator();
                             let (BindingSetPreAttrs(_,_,_,_,mWhole)) = _3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole)  
                   )
# 1186 "../pars.fsy"
                 : 'moduleDefn));
# 4442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1193 "../pars.fsy"
                             let hwlb,m = _3
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             parseState.ResetSynArgNameGenerator();
                             mkDefnBindings (m,hwlb,_1,_2,m)  
                   )
# 1193 "../pars.fsy"
                 : 'moduleDefn));
# 4458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1200 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole) 
                   )
# 1200 "../pars.fsy"
                 : 'moduleDefn));
# 4473 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1206 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let      (TypeDefn(ComponentInfo(cas   ,a,cs,b,c,d,d2,d3),e,f,g)) = _4
                             let tc = (TypeDefn(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 1206 "../pars.fsy"
                 : 'moduleDefn));
# 4492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1214 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let (ExceptionDefn(ExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let ec = (ExceptionDefn(ExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
# 1214 "../pars.fsy"
                 : 'moduleDefn));
# 4509 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1222 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             let attribs,(path,xml,vis) = _1,_3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 if List.length _1 <> 0   then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation());
                                 if isSome vis            then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate());
                                 [ SynModuleDecl.ModuleAbbrev(List.head path,eqn,(rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if List.length path <> 1 then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName());
                                 let info = ComponentInfo(attribs,[],[],path,xml,false,vis,rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info,def,false,(rhs2 parseState 3 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
# 1222 "../pars.fsy"
                 : 'moduleDefn));
# 4535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1238 "../pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(),rhs parseState 1))
                             [] 
                   )
# 1238 "../pars.fsy"
                 : 'moduleDefn));
# 4548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1243 "../pars.fsy"
                             [SynModuleDecl.Open(_1, _1.Range)] 
                   )
# 1243 "../pars.fsy"
                 : 'moduleDefn));
# 4559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1251 "../pars.fsy"
                            _2.Lid 
                   )
# 1251 "../pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1254 "../pars.fsy"
                            _1.Lid  
                   )
# 1254 "../pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1260 "../pars.fsy"
                            Choice2Of2 _2  
                   )
# 1260 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1263 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            Choice2Of2 _2 
                   )
# 1263 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1267 "../pars.fsy"
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              //
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation , the first a module containing a single expression.
                              // The resolution is in favour of the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_,LongOrSingleIdent(false,LongIdentWithDots(path,_),None,_),_) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
# 1267 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1293 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight());   
                            Choice2Of2 _2 
                   )
# 1293 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1298 "../pars.fsy"
                            Choice2Of2 [] 
                   )
# 1298 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1301 "../pars.fsy"
                            Choice2Of2 _1 
                   )
# 1301 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1304 "../pars.fsy"
                            Choice1Of2 _1.Lid 
                   )
# 1304 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1310 "../pars.fsy"
                            _2 
                   )
# 1310 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1313 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct());  
                            _2 
                   )
# 1313 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1317 "../pars.fsy"
                            [] 
                   )
# 1317 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4725 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1322 "../pars.fsy"
                            _2 
                   )
# 1322 "../pars.fsy"
                 : Ast.SynMemberDefns));
# 4737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1328 "../pars.fsy"
                             _1 
                   )
# 1328 "../pars.fsy"
                 : 'opt_attributes));
# 4748 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1331 "../pars.fsy"
                             [] 
                   )
# 1331 "../pars.fsy"
                 : 'opt_attributes));
# 4758 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1336 "../pars.fsy"
                            _1 
                   )
# 1336 "../pars.fsy"
                 : 'attributes));
# 4769 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1339 "../pars.fsy"
                            _1 @ _2 
                   )
# 1339 "../pars.fsy"
                 : 'attributes));
# 4781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1345 "../pars.fsy"
                              _2 
                   )
# 1345 "../pars.fsy"
                 : 'attributeList));
# 4794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1348 "../pars.fsy"
                              [] 
                   )
# 1348 "../pars.fsy"
                 : 'attributeList));
# 4805 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1351 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             _2 
                   )
# 1351 "../pars.fsy"
                 : 'attributeList));
# 4819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1355 "../pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess());
                             [] 
                   )
# 1355 "../pars.fsy"
                 : 'attributeList));
# 4831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1362 "../pars.fsy"
                            [_1] 
                   )
# 1362 "../pars.fsy"
                 : 'attributeListElements));
# 4842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1365 "../pars.fsy"
                            _1 @ [_3] 
                   )
# 1365 "../pars.fsy"
                 : 'attributeListElements));
# 4855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1372 "../pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 1372 "../pars.fsy"
                 : 'attribute));
# 4869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1377 "../pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 1377 "../pars.fsy"
                 : 'attribute));
# 4884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1382 "../pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 1382 "../pars.fsy"
                 : 'attribute));
# 4900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1389 "../pars.fsy"
                             Some(ident("module",(rhs parseState 1))) 
                   )
# 1389 "../pars.fsy"
                 : 'attributeTarget));
# 4911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1392 "../pars.fsy"
                             Some(ident("type",(rhs parseState 1))) 
                   )
# 1392 "../pars.fsy"
                 : 'attributeTarget));
# 4922 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1394 "../pars.fsy"
                                       Some(_1) 
                   )
# 1394 "../pars.fsy"
                 : 'attributeTarget));
# 4933 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1398 "../pars.fsy"
                             if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError());
                             Some(ident("return",(rhs parseState 1))) 
                   )
# 1398 "../pars.fsy"
                 : 'attributeTarget));
# 4945 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1403 "../pars.fsy"
                                           (true,StaticMemberFlags) 
                   )
# 1403 "../pars.fsy"
                 : 'memberFlags));
# 4955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1404 "../pars.fsy"
                                           (false,NonVirtualMemberFlags) 
                   )
# 1404 "../pars.fsy"
                 : 'memberFlags));
# 4965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1405 "../pars.fsy"
                                           (false,OverrideMemberFlags) 
                   )
# 1405 "../pars.fsy"
                 : 'memberFlags));
# 4975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1406 "../pars.fsy"
                                          (false,OverrideMemberFlags) 
                   )
# 1406 "../pars.fsy"
                 : 'memberFlags));
# 4985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1411 "../pars.fsy"
                            let typars,lid,fixity,tpcs1,vis,xmlDoc = _2 
                            let tpcs2 = _3 
                            ComponentInfo(_1,typars,(tpcs1 @ tpcs2),lid,xmlDoc,fixity,vis,rangeOfLid lid)  
                   )
# 1411 "../pars.fsy"
                 : 'typeNameInfo));
# 5000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1418 "../pars.fsy"
                            _2 :: _3 
                   )
# 1418 "../pars.fsy"
                 : 'tyconDefnList));
# 5012 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1420 "../pars.fsy"
                            [] 
                   )
# 1420 "../pars.fsy"
                 : 'tyconDefnList));
# 5022 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1425 "../pars.fsy"
                            TypeDefn(_1,SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range),_1.Range),[],_1.Range) 
                   )
# 1425 "../pars.fsy"
                 : 'tyconDefn));
# 5033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1428 "../pars.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr),members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
# 1428 "../pars.fsy"
                 : 'tyconDefn));
# 5049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1435 "../pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            TypeDefn(_1,SynTypeDefnRepr.ObjectModel(TyconAugmentation,[],m),_2,m) 
                   )
# 1435 "../pars.fsy"
                 : 'tyconDefn));
# 5062 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1439 "../pars.fsy"
                            let vis,spats, az = _3,_5,_6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr,members) = _8 nameRange
                            let (ComponentInfo(_,_,_,lid,_,_,_,_)) = _1 
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis,_2,spats,az,rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k,cspec,m) -> SynTypeDefnRepr.ObjectModel (k,memberCtorPattern::cspec,m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                           
                            TypeDefn(_1,tcDefRepr,members, unionRanges (rhs parseState 1) tcDefRepr.Range)  
                   )
# 1439 "../pars.fsy"
                 : 'tyconDefn));
# 5089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1463 "../pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 1463 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1467 "../pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
# 1467 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1472 "../pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
# 1472 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1481 "../pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation) 
                   )
# 1481 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1486 "../pars.fsy"
                            let needsCheck,(kind,decls),mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition());
                                SynTypeDefnRepr.ObjectModel (kind,decls,m),augmentation) 
                   )
# 1486 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1497 "../pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags MemberKind.Member,m) 
                                if nonNil augmentation then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType());
                                SynTypeDefnRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[]) 
                   )
# 1497 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1509 "../pars.fsy"
                            let needsCheck,decls,mopt = _1 
                            needsCheck,(TyconUnspecified, decls),mopt 
                   )
# 1509 "../pars.fsy"
                 : 'tyconClassDefn));
# 5195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1513 "../pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1513 "../pars.fsy"
                 : 'tyconClassDefn));
# 5208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1517 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1517 "../pars.fsy"
                 : 'tyconClassDefn));
# 5223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1522 "../pars.fsy"
                            // silent recovery 
                            false,(_1,[]),Some(rhs parseState 1) 
                   )
# 1522 "../pars.fsy"
                 : 'tyconClassDefn));
# 5235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1529 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false,_2,mopt 
                   )
# 1529 "../pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1537 "../pars.fsy"
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
# 1537 "../pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1547 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition());
                             _2 
                   )
# 1547 "../pars.fsy"
                 : 'classDefnBlock));
# 5281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1551 "../pars.fsy"
                             _2 
                   )
# 1551 "../pars.fsy"
                 : 'classDefnBlock));
# 5293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1554 "../pars.fsy"
                             _1 
                   )
# 1554 "../pars.fsy"
                 : 'classDefnBlock));
# 5304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1560 "../pars.fsy"
                            _1 
                   )
# 1560 "../pars.fsy"
                 : 'classDefnMembers));
# 5315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1564 "../pars.fsy"
                            _2 
                   )
# 1564 "../pars.fsy"
                 : 'classDefnMembers));
# 5326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1567 "../pars.fsy"
                            [] 
                   )
# 1567 "../pars.fsy"
                 : 'classDefnMembers));
# 5336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1573 "../pars.fsy"
                            _1 @  _3 
                   )
# 1573 "../pars.fsy"
                 : 'classDefnMembersAtLeastOne));
# 5349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1579 "../pars.fsy"
                            _2  
                   )
# 1579 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1582 "../pars.fsy"
                            _2  
                   )
# 1582 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1585 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith());
                            _2  
                   )
# 1585 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1591 "../pars.fsy"
                            [_1]  
                   )
# 1591 "../pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5394 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1593 "../pars.fsy"
                            [_1;_3] 
                   )
# 1593 "../pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1597 "../pars.fsy"
                            let mRhs = (_6 : SynExpr).Range 
                            (_1,_2,_3,_4,_6,mRhs) 
                   )
# 1597 "../pars.fsy"
                 : 'classDefnMemberGetSetElement));
# 5422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1605 "../pars.fsy"
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder attrs -> 
                                  [ SynMemberDefn.Member (bindingBuilder (vis,_1,false,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,_5,mRhs,[],attrs,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole mBindLhs) ]) 
                   )
# 1605 "../pars.fsy"
                 : 'memberCore));
# 5441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1614 "../pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_,_,_,_,_,m2) -> m2) 
                            let propertyNameBindingBuilder,_ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline,optAttrs,(bindingBuilder,mBindLhs),optReturnType,expr,exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs = optAttrs |> List.map (fun (a:SynAttribute) -> { a with AppliesToGetterAndSetter=true })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed,optInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some (memFlagsBuilder MemberKind.Member))
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id],_),_,_,_,_,_) ->  id.idText
                                                        | SynPat.Named (_,nm,_,_,_) ->  nm.idText
                                                        | SynPat.Typed (p,_,_) ->  go p
                                                        | SynPat.Attrib (p,_,_) ->  go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then (
                                                  if !hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet := true
                                                      Some MemberKind.PropertyGet
                                              ) else if getset = "set" then (
                                                  if !hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet := true
                                                      Some MemberKind.PropertySet
                                              ) else 
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it, 
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(),mBindLhs))
                                        | None -> ()
                                        end;
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | MemberKind.PropertySet,_ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis,isInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder memberKind)) 
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, mBindLhs, spBind)) = binding 
                                     
                                        let (SynValData(_,valSynInfo,_)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = if List.length valueArg = 1 then valueArg else SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | MemberKind.PropertyGet,SynValInfo ([],_ret),         false
                                            | MemberKind.PropertyGet,SynValInfo ([_],_ret), true  -> 
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet,SynValInfo (thisArg::indexOrUnitArgs::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([thisArg; indexOrUnitArgs],ret)
                                            | MemberKind.PropertyGet,SynValInfo (indexOrUnitArgs::rest,ret),          false ->
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([indexOrUnitArgs],ret)
                                            | MemberKind.PropertySet,SynValInfo ([thisArg;valueArg],ret),                 true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (thisArg::indexArgs::valueArg::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo ([valueArg],ret),                         false -> 
                                                SynValInfo ([adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (indexArgs::valueArg::rest,ret),          _     -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg],ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidProperty())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo,None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding, 
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis,optInline,isMutable,mBindLhs,spBind,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder MemberKind.Member))
                                            let (Binding (_,_,_,_,_,doc2,_,bindingPatOuter,_,_,_,_)) = bindingOuter 
                                            
                                        
                                            let lidOuter,lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid,None,None, SynConstructorArgs.Pats [],lidVisOuter,m) ->  lid,lidVisOuter
                                                | SynPat.Named (_,id,_,visOuter,m) -> LongIdentWithDots([id],[]),visOuter
                                                | p -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner,lidVisOuter with 
                                                | None,None -> None
                                                | Some lidVisInner,None | None,Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(),mBindLhs));
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id],_),_,tyargs,SynConstructorArgs.Pats args,lidVisInner,m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (indexPats,_),indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(indexPats@[valuePat],unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(args,unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText,id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter,Some(id),tyargs, SynConstructorArgs.Pats args,mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Named (_,nm,_,lidVisInner,m) ->  SynPat.LongIdent (lidOuter,None,None, SynConstructorArgs.Pats [], mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Typed (p,ty,m) ->  SynPat.Typed(go p,ty,m)
                                                | SynPat.Attrib (p,attribs,m) ->  SynPat.Attrib(go p,attribs,m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv,PreXmlDoc.Merge doc2 doc
                                        Some <| SynMemberDefn.Member (Binding (vis, NormalBinding, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, mBindLhs, spBind),mWhole)))
                            
                   )
# 1614 "../pars.fsy"
                 : 'memberCore));
# 5600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1788 "../pars.fsy"
                                   
                   )
# 1788 "../pars.fsy"
                 : 'abstractMemberFlags));
# 5610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1789 "../pars.fsy"
                                          
                   )
# 1789 "../pars.fsy"
                 : 'abstractMemberFlags));
# 5620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1795 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(false,None,_1,_2,_3)] 
                   )
# 1795 "../pars.fsy"
                 : 'classDefnMember));
# 5634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1799 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            [mkClassMemberLocalBindings(true,Some (rhs parseState 3),_1,_2,_4)] 
                   )
# 1799 "../pars.fsy"
                 : 'classDefnMember));
# 5648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1803 "../pars.fsy"
                            if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                            let _,flags = _3
                            _4 _2 flags _1 
                   )
# 1803 "../pars.fsy"
                 : 'classDefnMember));
# 5665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1808 "../pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(),rhs parseState 3));
                             let mWhole = 
                                 match _5 with
                                 | None -> rhs2 parseState 3 4
                                 | Some(mems) -> (rhs2 parseState 3 4, mems) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                             [ SynMemberDefn.Interface (_4, _5, mWhole) ] 
                   )
# 1808 "../pars.fsy"
                 : 'classDefnMember));
# 5686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1817 "../pars.fsy"
                            let ty,arity = _8
                            let isInline,doc,id,explicitValTyparDecls = _4,grabXmlDoc(parseState,3),_5,_6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(),wholeRange));
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, None,None,wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
# 1817 "../pars.fsy"
                 : 'classDefnMember));
# 5716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1831 "../pars.fsy"
                             if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(),rhs parseState 1));
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(),rhs parseState 1));
                             [ _3 ] 
                   )
# 1831 "../pars.fsy"
                 : 'classDefnMember));
# 5731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1836 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             _3 None _1 false 
                   )
# 1836 "../pars.fsy"
                 : 'classDefnMember));
# 5746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1840 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             _4 (Some (rhs parseState 3)) _1 true  
                   )
# 1840 "../pars.fsy"
                 : 'classDefnMember));
# 5761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1844 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let isStatic, flags = _3
                             _4 _1 isStatic flags 
                   )
# 1844 "../pars.fsy"
                 : 'classDefnMember));
# 5778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1849 "../pars.fsy"
                             let m = unionRanges (rhs2 parseState 3 6) _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4],SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"],[]),None,Some noInferredTypars, SynConstructorArgs.Pats [_4],vis,rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false);
                             [ SynMemberDefn.Member(Binding (None,NormalBinding,false,false,_1,grabXmlDoc(parseState,3),valSynData, declPat,None,expr,m,NoSequencePointAtInvisibleBinding),m) ] 
                   )
# 1849 "../pars.fsy"
                 : 'classDefnMember));
# 5801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1859 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2));
                             [ SynMemberDefn.NestedType(_5,None,rhs2 parseState 3 5) ] 
                   )
# 1859 "../pars.fsy"
                 : 'classDefnMember));
# 5816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1866 "../pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let doc = grabXmlDoc(parseState,4)
                             let mValDecl = rhs2 parseState 1 6
                             (fun mLeft attribs isStatic -> 
                                 let mValDecl = match mLeft with None -> mValDecl | Some m -> unionRanges m mValDecl
                                 let fld = Field(attribs,isStatic,Some _4,_6,_2,doc,_3,mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
# 1866 "../pars.fsy"
                 : 'valDefnDecl));
# 5836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1878 "../pars.fsy"
                             let doc = grabXmlDoc(parseState,5)
                             let mValDecl = unionRanges (rhs parseState 1) _7.Range
                             let mGetSetOpt, getSet = _8
                             if _2 then errorR(Error(FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet(),rhs parseState 3))
                             (fun attribs isStatic flags -> 
                                 [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, doc, _3, _7, mGetSetOpt, mValDecl) ]) 
                   )
# 1878 "../pars.fsy"
                 : 'autoPropsDefnDecl));
# 5857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1888 "../pars.fsy"
                                        None 
                   )
# 1888 "../pars.fsy"
                 : 'opt_typ));
# 5867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1889 "../pars.fsy"
                                      Some _2 
                   )
# 1889 "../pars.fsy"
                 : 'opt_typ));
# 5878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1893 "../pars.fsy"
                                              let (LongIdentWithDots(lid,dotms)) = _3 in (None,LongIdentWithDots(ident(MangledGlobalName,rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 1893 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 5889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1894 "../pars.fsy"
                                  (None,_1) 
                   )
# 1894 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 5900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1895 "../pars.fsy"
                                         (Some(_1), _2) 
                   )
# 1895 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 5912 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1899 "../pars.fsy"
                                       None 
                   )
# 1899 "../pars.fsy"
                 : 'opt_access));
# 5922 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1900 "../pars.fsy"
                                  Some(_1) 
                   )
# 1900 "../pars.fsy"
                 : 'opt_access));
# 5933 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1904 "../pars.fsy"
                                    SynAccess.Private 
                   )
# 1904 "../pars.fsy"
                 : 'access));
# 5943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1905 "../pars.fsy"
                                    SynAccess.Public 
                   )
# 1905 "../pars.fsy"
                 : 'access));
# 5953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1906 "../pars.fsy"
                                    SynAccess.Internal 
                   )
# 1906 "../pars.fsy"
                 : 'access));
# 5963 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1910 "../pars.fsy"
                                       Some(_1) 
                   )
# 1910 "../pars.fsy"
                 : 'opt_declVisibility));
# 5974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1911 "../pars.fsy"
                                       None 
                   )
# 1911 "../pars.fsy"
                 : 'opt_declVisibility));
# 5984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1915 "../pars.fsy"
                                                                  Some(_2) 
                   )
# 1915 "../pars.fsy"
                 : 'opt_interfaceImplDefn));
# 5996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1916 "../pars.fsy"
                                                                  None 
                   )
# 1916 "../pars.fsy"
                 : 'opt_interfaceImplDefn));
# 6006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1920 "../pars.fsy"
                                                       _2 
                   )
# 1920 "../pars.fsy"
                 : 'opt_classDefn));
# 6018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1921 "../pars.fsy"
                                                       [] 
                   )
# 1921 "../pars.fsy"
                 : 'opt_classDefn));
# 6028 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1927 "../pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2,_3,mDecl) 
                   )
# 1927 "../pars.fsy"
                 : 'inheritsDefn));
# 6041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1931 "../pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2,_4,_5,mDecl) 
                   )
# 1931 "../pars.fsy"
                 : 'inheritsDefn));
# 6056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1935 "../pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None,mDecl) 
                   )
# 1935 "../pars.fsy"
                 : 'inheritsDefn));
# 6069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1940 "../pars.fsy"
                                  Some(_1) 
                   )
# 1940 "../pars.fsy"
                 : 'optAsSpec));
# 6080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1941 "../pars.fsy"
                                  None 
                   )
# 1941 "../pars.fsy"
                 : 'optAsSpec));
# 6090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1944 "../pars.fsy"
                                    _2 
                   )
# 1944 "../pars.fsy"
                 : 'asSpec));
# 6101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1948 "../pars.fsy"
                                    Some(_1) 
                   )
# 1948 "../pars.fsy"
                 : 'optBaseSpec));
# 6112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1949 "../pars.fsy"
                                  None 
                   )
# 1949 "../pars.fsy"
                 : 'optBaseSpec));
# 6122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1954 "../pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1954 "../pars.fsy"
                 : 'baseSpec));
# 6135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1959 "../pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)); 
                             ident("base",rhs parseState 2) 
                   )
# 1959 "../pars.fsy"
                 : 'baseSpec));
# 6146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1966 "../pars.fsy"
                             _2 
                   )
# 1966 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6158 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1969 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers());
                             _2 
                   )
# 1969 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1973 "../pars.fsy"
                             _1 
                   )
# 1973 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1979 "../pars.fsy"
                             _1 @  _3 
                   )
# 1979 "../pars.fsy"
                 : 'objectImplementationMembers));
# 6195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1982 "../pars.fsy"
                             _1 
                   )
# 1982 "../pars.fsy"
                 : 'objectImplementationMembers));
# 6207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1988 "../pars.fsy"
                            _3 None OverrideMemberFlags _1 
                   )
# 1988 "../pars.fsy"
                 : 'objectImplementationMember));
# 6221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1991 "../pars.fsy"
                            _3 _1 false OverrideMemberFlags 
                   )
# 1991 "../pars.fsy"
                 : 'objectImplementationMember));
# 6235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1994 "../pars.fsy"
                             [] 
                   )
# 1994 "../pars.fsy"
                 : 'objectImplementationMember));
# 6247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1997 "../pars.fsy"
                             [] 
                   )
# 1997 "../pars.fsy"
                 : 'objectImplementationMember));
# 6260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2001 "../pars.fsy"
                                    
                   )
# 2001 "../pars.fsy"
                 : 'memberOrOverride));
# 6270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2002 "../pars.fsy"
                                      
                   )
# 2002 "../pars.fsy"
                 : 'memberOrOverride));
# 6280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2010 "../pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ThereWereSignificantParseErrorsSoDoNotTypecheckThisNode, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
# 2010 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2015 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            if isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 2015 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2021 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(UnionCase(_,_,_,_,_,m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(),m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2, 
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
# 2021 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2039 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            SynTypeDefnSimpleRepr.Record (_2,_3,lhs parseState) 
                   )
# 2039 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6353 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyTyconRepr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2044 "../pars.fsy"
                            if nonNil _1 then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1));
                            libraryOnlyError (lhs parseState);
                            if isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            _4 
                   )
# 2044 "../pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2053 "../pars.fsy"
                            _2 
                   )
# 2053 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2056 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()); 
                            _2 
                   )
# 2056 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2060 "../pars.fsy"
                            [] 
                   )
# 2060 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2064 "../pars.fsy"
                            libraryOnlyError (lhs parseState);
                            let lhsm = lhs parseState 
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (ParseAssemblyCodeType _2 (rhs parseState 2),lhsm) 
                   )
# 2064 "../pars.fsy"
                 : 'inlineAssemblyTyconRepr));
# 6419 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2069 "../pars.fsy"
                                     TyconClass 
                   )
# 2069 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2070 "../pars.fsy"
                                     TyconInterface 
                   )
# 2070 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2071 "../pars.fsy"
                                     TyconStruct 
                   )
# 2071 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2074 "../pars.fsy"
                                     
                   )
# 2074 "../pars.fsy"
                 : 'interfaceMember));
# 6459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2075 "../pars.fsy"
                                                
                   )
# 2075 "../pars.fsy"
                 : 'interfaceMember));
# 6469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2079 "../pars.fsy"
                             [], _2.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 2079 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2082 "../pars.fsy"
                             _2, _3.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 2082 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2085 "../pars.fsy"
                             let tps,tpcs = _3 
                             tps, _2.Lid,true,tpcs,_1,grabXmlDoc(parseState,2) 
                   )
# 2085 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2089 "../pars.fsy"
                                 [ TyparDecl([],_1) ] 
                   )
# 2089 "../pars.fsy"
                 : 'prefixTyparDecls));
# 6519 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2090 "../pars.fsy"
                                                        List.rev _2 
                   )
# 2090 "../pars.fsy"
                 : 'prefixTyparDecls));
# 6531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2093 "../pars.fsy"
                                                         _3 :: _1 
                   )
# 2093 "../pars.fsy"
                 : 'typarDeclList));
# 6543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2094 "../pars.fsy"
                                     [_1] 
                   )
# 2094 "../pars.fsy"
                 : 'typarDeclList));
# 6554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2098 "../pars.fsy"
                             TyparDecl(_1,_2) 
                   )
# 2098 "../pars.fsy"
                 : 'typarDecl));
# 6566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2104 "../pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             List.rev _3, _4 
                   )
# 2104 "../pars.fsy"
                 : 'postfixTyparDecls));
# 6582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2111 "../pars.fsy"
                             (List.rev _1,true) 
                   )
# 2111 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2113 "../pars.fsy"
                             (List.rev _1,false) 
                   )
# 2113 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2115 "../pars.fsy"
                             ([],false) 
                   )
# 2115 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2119 "../pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5));
                             let tps,flex = _3 
                             SynValTyparDecls(tps,flex,_4) 
                   )
# 2119 "../pars.fsy"
                 : 'explicitValTyparDecls));
# 6631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2125 "../pars.fsy"
                             _1 
                   )
# 2125 "../pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2127 "../pars.fsy"
                             SynValTyparDecls([],true,[]) 
                   )
# 2127 "../pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2131 "../pars.fsy"
                             Some _1 
                   )
# 2131 "../pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2133 "../pars.fsy"
                             None 
                   )
# 2133 "../pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2139 "../pars.fsy"
                            [] 
                   )
# 2139 "../pars.fsy"
                 : 'opt_typeConstraints));
# 6683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2141 "../pars.fsy"
                            List.rev _2 
                   )
# 2141 "../pars.fsy"
                 : 'opt_typeConstraints));
# 6694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2146 "../pars.fsy"
                                                              _3 :: _1 
                   )
# 2146 "../pars.fsy"
                 : 'typeConstraints));
# 6706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2147 "../pars.fsy"
                                          [_1] 
                   )
# 2147 "../pars.fsy"
                 : 'typeConstraints));
# 6717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2153 "../pars.fsy"
                             libraryOnlyError (lhs parseState); WhereTyparDefaultsToType(_2,_4,lhs parseState) 
                   )
# 2153 "../pars.fsy"
                 : 'typeConstraint));
# 6729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2156 "../pars.fsy"
                             WhereTyparSubtypeOfType(_1,_3,lhs parseState) 
                   )
# 2156 "../pars.fsy"
                 : 'typeConstraint));
# 6741 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2159 "../pars.fsy"
                             WhereTyparIsValueType(_1,lhs parseState) 
                   )
# 2159 "../pars.fsy"
                 : 'typeConstraint));
# 6752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2162 "../pars.fsy"
                             if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3));  
                             WhereTyparIsReferenceType(_1,lhs parseState) 
                   )
# 2162 "../pars.fsy"
                 : 'typeConstraint));
# 6765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2166 "../pars.fsy"
                             WhereTyparSupportsNull(_1,lhs parseState) 
                   )
# 2166 "../pars.fsy"
                 : 'typeConstraint));
# 6776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2169 "../pars.fsy"
                             WhereTyparSupportsMember([ _1 ],_4,lhs parseState) 
                   )
# 2169 "../pars.fsy"
                 : 'typeConstraint));
# 6789 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2172 "../pars.fsy"
                             WhereTyparSupportsMember(List.rev(_2),_6,lhs parseState) 
                   )
# 2172 "../pars.fsy"
                 : 'typeConstraint));
# 6803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2175 "../pars.fsy"
                             let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
# 2175 "../pars.fsy"
                 : 'typeConstraint));
# 6815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2178 "../pars.fsy"
                             match _3 with 
                             | "enum" -> let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2178 "../pars.fsy"
                 : 'typeConstraint));
# 6830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2183 "../pars.fsy"
                             match _3 with 
                             | "comparison" -> WhereTyparIsComparable(_1,lhs parseState)
                             | "equality" -> WhereTyparIsEquatable(_1,lhs parseState)
                             | "unmanaged" -> WhereTyparIsUnmanaged(_1,lhs parseState)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2183 "../pars.fsy"
                 : 'typeConstraint));
# 6846 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2190 "../pars.fsy"
                                             _3::_1 
                   )
# 2190 "../pars.fsy"
                 : 'typarAlts));
# 6858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2191 "../pars.fsy"
                                [_1] 
                   )
# 2191 "../pars.fsy"
                 : 'typarAlts));
# 6869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2198 "../pars.fsy"
                            _2 _1 
                   )
# 2198 "../pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2201 "../pars.fsy"
                            _1 :: _3 _2 
                   )
# 2201 "../pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2204 "../pars.fsy"
                            [_1] 
                   )
# 2204 "../pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2207 "../pars.fsy"
                               grabXmlDoc(parseState,1) 
                   )
# 2207 "../pars.fsy"
                 : 'barAndgrabXmlDoc));
# 6915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2210 "../pars.fsy"
                                                                                  (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
# 2210 "../pars.fsy"
                 : 'attrUnionCaseDecls));
# 6928 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2211 "../pars.fsy"
                                             (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
# 2211 "../pars.fsy"
                 : 'attrUnionCaseDecls));
# 6939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2216 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields [],xmlDoc,None,mDecl))) 
                           
                   )
# 2216 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 6956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2222 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields _5,xmlDoc,None,mDecl))) 
                           
                   )
# 2222 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 6974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2228 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             libraryOnlyWarning(lhs parseState);
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFullType _5,xmlDoc,None,mDecl))) 
                           
                   )
# 2228 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 6993 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2235 "../pars.fsy"
                             if isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice1Of2 (EnumCase ( _1, _3,_5,xmlDoc,mDecl))) 
                           
                   )
# 2235 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2243 "../pars.fsy"
                             _1 
                   )
# 2243 "../pars.fsy"
                 : 'unionCaseName));
# 7022 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2246 "../pars.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 2246 "../pars.fsy"
                 : 'unionCaseName));
# 7033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2249 "../pars.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 2249 "../pars.fsy"
                 : 'unionCaseName));
# 7044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2253 "../pars.fsy"
                             Choice2Of2 (UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,rhs parseState 1)) 
                   )
# 2253 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2256 "../pars.fsy"
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3)) 
                   )
# 2256 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2259 "../pars.fsy"
                             _1 
                   )
# 2259 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2263 "../pars.fsy"
                            Choice2Of2 (UnionCase ( [],_1,UnionCaseFields _3,PreXmlDoc.Empty,None,rhs2 parseState 1 3)) 
                   )
# 2263 "../pars.fsy"
                 : 'firstUnionCaseDecl));
# 7093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2266 "../pars.fsy"
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3))  
                   )
# 2266 "../pars.fsy"
                 : 'firstUnionCaseDecl));
# 7106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2269 "../pars.fsy"
                                                                           _1::_3 
                   )
# 2269 "../pars.fsy"
                 : 'unionCaseReprElements));
# 7118 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2270 "../pars.fsy"
                                                                                [_1] 
                   )
# 2270 "../pars.fsy"
                 : 'unionCaseReprElements));
# 7129 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2273 "../pars.fsy"
                                               mkNamedField(_1, _3) 
                   )
# 2273 "../pars.fsy"
                 : 'unionCaseReprElement));
# 7141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2274 "../pars.fsy"
                                   mkAnonField _1 
                   )
# 2274 "../pars.fsy"
                 : 'unionCaseReprElement));
# 7152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2278 "../pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs parseState)); 
                            _1 
                   )
# 2278 "../pars.fsy"
                 : 'unionCaseRepr));
# 7164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2282 "../pars.fsy"
                            _1 
                   )
# 2282 "../pars.fsy"
                 : 'unionCaseRepr));
# 7175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2287 "../pars.fsy"
                            _1 :: _3 
                   )
# 2287 "../pars.fsy"
                 : 'recdFieldDeclList));
# 7188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2290 "../pars.fsy"
                            [_1] 
                   )
# 2290 "../pars.fsy"
                 : 'recdFieldDeclList));
# 7200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2295 "../pars.fsy"
                            let fld = _2 _1 false 
                            let (Field(a,b,c,d,e,f,vis,g)) = fld 
                            if isSome vis then errorR(Error(FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2));
                            Field(a,b,c,d,e,f,None,g)  
                   )
# 2295 "../pars.fsy"
                 : 'recdFieldDecl));
# 7215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2303 "../pars.fsy"
                            let mRhs = rhs2 parseState 3 5 
                            let xmlDoc = grabXmlDoc(parseState,3)
                            (fun attrs stat -> Field(attrs, stat,Some _3,_5,_1,xmlDoc,_2,mRhs)) 
                   )
# 2303 "../pars.fsy"
                 : 'fieldDecl));
# 7231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2311 "../pars.fsy"
                            ExceptionDefn(_1,_2, (_1.Range,_2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
# 2311 "../pars.fsy"
                 : Ast.SynExceptionDefn));
# 7243 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2315 "../pars.fsy"
                                     grabXmlDoc(parseState,1) 
                   )
# 2315 "../pars.fsy"
                 : 'exceptionAndGrabDoc));
# 7253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2320 "../pars.fsy"
                            ExceptionDefnRepr(_2,_4,_5,_1,_3,(match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
# 2320 "../pars.fsy"
                 : Ast.SynExceptionRepr));
# 7268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2325 "../pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2325 "../pars.fsy"
                 : 'exconIntro));
# 7279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2328 "../pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields _3,PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2328 "../pars.fsy"
                 : 'exconIntro));
# 7291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2331 "../pars.fsy"
                                       None 
                   )
# 2331 "../pars.fsy"
                 : 'exconRepr));
# 7301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2332 "../pars.fsy"
                                       Some (_2.Lid) 
                   )
# 2332 "../pars.fsy"
                 : 'exconRepr));
# 7312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2335 "../pars.fsy"
                                     _2 
                   )
# 2335 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 7323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2344 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                                 (fun attrs vis -> 
                                     // apply the builder
                                     let binds = localBindingsBuilder attrs vis mLetKwd 
                                     if not isRec && List.length binds > 1 then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                                     [],binds), 
                                 bindingSetRange) 
                   )
# 2344 "../pars.fsy"
                 : 'defnBindings));
# 7354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2366 "../pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false,false,_1,bindRange)  
                   )
# 2366 "../pars.fsy"
                 : 'defnBindings));
# 7366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2373 "../pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,mWhole)]), mWhole) 
                   )
# 2373 "../pars.fsy"
                 : 'doBinding));
# 7381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2383 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd;  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                               (fun attrs vis -> 
                                 let binds = localBindingsBuilder attrs vis mLetKwd 
                                 if not isRec && List.length binds > 1 then 
                                         reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings()); 
                                 [],binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
# 2383 "../pars.fsy"
                 : 'hardwhiteLetBindings));
# 7414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2409 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,bindingSetRange)]),bindingSetRange), _2 
                   )
# 2409 "../pars.fsy"
                 : 'hardwhiteDoBinding));
# 7431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2419 "../pars.fsy"
                                        _1 
                   )
# 2419 "../pars.fsy"
                 : 'classDefnBindings));
# 7442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2420 "../pars.fsy"
                                     _1 
                   )
# 2420 "../pars.fsy"
                 : 'classDefnBindings));
# 7453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2421 "../pars.fsy"
                                                let b,m = _1 in b 
                   )
# 2421 "../pars.fsy"
                 : 'classDefnBindings));
# 7464 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2422 "../pars.fsy"
                                               fst _1 
                   )
# 2422 "../pars.fsy"
                 : 'classDefnBindings));
# 7475 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2428 "../pars.fsy"
                            (fun _ m -> ()) 
                   )
# 2428 "../pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2430 "../pars.fsy"
                            (fun kwd m -> reportParseErrorAt m (match kwd with 
                                                                | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                                                | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                                                | "use" -> FSComp.SR.parsUnmatchedUse() 
                                                                | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()))  
                   )
# 2430 "../pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2439 "../pars.fsy"
                             let rty,vis,nm,args  = _2,_3,_4,_7 
                             let xmlDoc = grabXmlDoc(parseState,1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App(ExprAtomicFlag.NonAtomic,
                                                       false, 
                                                       SynExpr.Ident(ident("failwith",rhs parseState 6)),
                                                       SynExpr.Const(SynConst.String("extern was not given a DllImport attribute",rhs parseState 8),rhs parseState 8),
                                                       mRhs)
                             (fun attrs vis -> 
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm],[]), None, Some noInferredTypars, SynConstructorArgs.Pats [SynPat.Tuple(args,argsm)], vis, nmm)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mBindLhs, NoSequencePointAtInvisibleBinding, Some rty ,rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
# 2439 "../pars.fsy"
                 : 'cPrototype));
# 7533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2461 "../pars.fsy"
                            List.rev _1 
                   )
# 2461 "../pars.fsy"
                 : 'cArgs));
# 7544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2464 "../pars.fsy"
                            [_1] 
                   )
# 2464 "../pars.fsy"
                 : 'cArgs));
# 7555 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2466 "../pars.fsy"
                            [] 
                   )
# 2466 "../pars.fsy"
                 : 'cArgs));
# 7565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2472 "../pars.fsy"
                            _3 :: _1 
                   )
# 2472 "../pars.fsy"
                 : 'cMoreArgs));
# 7577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2475 "../pars.fsy"
                            [_3; _1] 
                   )
# 2475 "../pars.fsy"
                 : 'cMoreArgs));
# 7589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2481 "../pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m,_2,m) |> addAttribs _1 
                   )
# 2481 "../pars.fsy"
                 : 'cArg));
# 7601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2484 "../pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (SynPat.Wild m,_3,false,None,m),_2,m) |> addAttribs _1 
                   )
# 2484 "../pars.fsy"
                 : 'cArg));
# 7614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2489 "../pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1),None,[],[],None,false,m) 
                   )
# 2489 "../pars.fsy"
                 : 'cType));
# 7626 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2493 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2493 "../pars.fsy"
                 : 'cType));
# 7639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2497 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2497 "../pars.fsy"
                 : 'cType));
# 7651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2501 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2501 "../pars.fsy"
                 : 'cType));
# 7663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2505 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint",m)],[])),None,[],[],None,true,m) 
                   )
# 2505 "../pars.fsy"
                 : 'cType));
# 7674 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2512 "../pars.fsy"
                            SynReturnInfo((_2,SynArgInfo(_1,false,None)),rhs parseState 2) 
                   )
# 2512 "../pars.fsy"
                 : 'cRetType));
# 7686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2515 "../pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit",m)],[])),None,[],[],None,false,m),SynArgInfo(_1,false,None)),m) 
                   )
# 2515 "../pars.fsy"
                 : 'cRetType));
# 7698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2521 "../pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange,attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun attrs vis mLetKwd -> attrLocalBindingBuilder attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _attrs _vis _letm -> moreBindings) 
                   )
# 2521 "../pars.fsy"
                 : 'localBindings));
# 7720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2536 "../pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange,attrLocalBindingBuilder) -> (attrLocalBindingBuilder [] None mLetKwd false,localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 2536 "../pars.fsy"
                 : 'moreLocalBindings));
# 7735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2542 "../pars.fsy"
                             [] 
                   )
# 2542 "../pars.fsy"
                 : 'moreLocalBindings));
# 7745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2548 "../pars.fsy"
                             let attrs2 = _1
                             let localBindingRange,localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun attrs vis mLetKwd _ -> localBindingBuilder (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange,attrLocalBindingBuilder) 
                   )
# 2548 "../pars.fsy"
                 : 'attr_localBinding));
# 7760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2554 "../pars.fsy"
                             None 
                   )
# 2554 "../pars.fsy"
                 : 'attr_localBinding));
# 7770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2560 "../pars.fsy"
                             let (expr:SynExpr),opts = _6
                             let eqm = rhs parseState 5 
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let mWhole = unionRanges mLetKwd mRhs
                                 let spBind = if IsControlFlowExpression expr then NoSequencePointAtLetBinding else SequencePointAtBinding(mWhole)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,expr,mRhs,opts,attrs,None))
                             localBindingRange,localBindingBuilder 
                   )
# 2560 "../pars.fsy"
                 : 'localBinding));
# 7796 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2574 "../pars.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding1",zeroWidthAtEnd),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2574 "../pars.fsy"
                 : 'localBinding));
# 7820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2587 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding2",mRhs),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2587 "../pars.fsy"
                 : 'localBinding));
# 7844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2602 "../pars.fsy"
                             _2 
                   )
# 2602 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2605 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile());
                             let a,b = _2
                             (exprFromParseError a, b) 
                   )
# 2605 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2610 "../pars.fsy"
                             _1 
                   )
# 2610 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2613 "../pars.fsy"
                                                                _1, List.rev _2 
                   )
# 2613 "../pars.fsy"
                 : 'typedExprWithStaticOptimizations));
# 7893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2616 "../pars.fsy"
                                                                      _2 :: _1 
                   )
# 2616 "../pars.fsy"
                 : 'opt_staticOptimizations));
# 7905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2617 "../pars.fsy"
                           [] 
                   )
# 2617 "../pars.fsy"
                 : 'opt_staticOptimizations));
# 7915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2620 "../pars.fsy"
                                                                                      (_2,_4) 
                   )
# 2620 "../pars.fsy"
                 : 'staticOptimization));
# 7927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2623 "../pars.fsy"
                                                                                        _3 :: _1 
                   )
# 2623 "../pars.fsy"
                 : 'staticOptimizationConditions));
# 7939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2624 "../pars.fsy"
                                                       [_1 ] 
                   )
# 2624 "../pars.fsy"
                 : 'staticOptimizationConditions));
# 7950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2627 "../pars.fsy"
                                           WhenTyparTyconEqualsTycon(_1,_3,lhs parseState) 
                   )
# 2627 "../pars.fsy"
                 : 'staticOptimizationCondition));
# 7962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2628 "../pars.fsy"
                                        WhenTyparIsStruct(_1,lhs parseState) 
                   )
# 2628 "../pars.fsy"
                 : 'staticOptimizationCondition));
# 7973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2631 "../pars.fsy"
                                if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState));
                                SynConst.SByte (fst _1) 
                   )
# 2631 "../pars.fsy"
                 : 'rawConstant));
# 7985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2633 "../pars.fsy"
                                 SynConst.Byte _1 
                   )
# 2633 "../pars.fsy"
                 : 'rawConstant));
# 7996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2634 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState));
                                 SynConst.Int16 (fst _1) 
                   )
# 2634 "../pars.fsy"
                 : 'rawConstant));
# 8008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2636 "../pars.fsy"
                                  SynConst.UInt16 _1 
                   )
# 2636 "../pars.fsy"
                 : 'rawConstant));
# 8019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2637 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState));
                                 SynConst.Int32 (fst _1) 
                   )
# 2637 "../pars.fsy"
                 : 'rawConstant));
# 8031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2639 "../pars.fsy"
                                  SynConst.UInt32 _1 
                   )
# 2639 "../pars.fsy"
                 : 'rawConstant));
# 8042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2640 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState));
                                 SynConst.Int64 (fst _1) 
                   )
# 2640 "../pars.fsy"
                 : 'rawConstant));
# 8054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2642 "../pars.fsy"
                                  SynConst.UInt64 _1 
                   )
# 2642 "../pars.fsy"
                 : 'rawConstant));
# 8065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2643 "../pars.fsy"
                                     SynConst.IntPtr _1 
                   )
# 2643 "../pars.fsy"
                 : 'rawConstant));
# 8076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2644 "../pars.fsy"
                                      SynConst.UIntPtr _1 
                   )
# 2644 "../pars.fsy"
                 : 'rawConstant));
# 8087 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2645 "../pars.fsy"
                                  SynConst.Single _1 
                   )
# 2645 "../pars.fsy"
                 : 'rawConstant));
# 8098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2646 "../pars.fsy"
                                  SynConst.Double _1 
                   )
# 2646 "../pars.fsy"
                 : 'rawConstant));
# 8109 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2647 "../pars.fsy"
                                SynConst.Char _1 
                   )
# 2647 "../pars.fsy"
                 : 'rawConstant));
# 8120 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2648 "../pars.fsy"
                                   SynConst.Decimal _1 
                   )
# 2648 "../pars.fsy"
                 : 'rawConstant));
# 8131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2649 "../pars.fsy"
                                  SynConst.UserNum _1 
                   )
# 2649 "../pars.fsy"
                 : 'rawConstant));
# 8142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2650 "../pars.fsy"
                                                 SynConst.String (_1,lhs parseState) 
                   )
# 2650 "../pars.fsy"
                 : 'rawConstant));
# 8153 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[])) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2651 "../pars.fsy"
                                     SynConst.Bytes (_1,lhs parseState) 
                   )
# 2651 "../pars.fsy"
                 : 'rawConstant));
# 8164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2654 "../pars.fsy"
                                       _1 
                   )
# 2654 "../pars.fsy"
                 : 'constant));
# 8175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2655 "../pars.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 2655 "../pars.fsy"
                 : 'constant));
# 8187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2659 "../pars.fsy"
                              let xmlDoc = grabXmlDoc(parseState,1)
                              mkSynBinding (xmlDoc,_1), rhs parseState 1 
                   )
# 2659 "../pars.fsy"
                 : 'bindingPattern));
# 8199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2665 "../pars.fsy"
                             SynSimplePat.Id (_1,None,false,false,false,rhs parseState 1) 
                   )
# 2665 "../pars.fsy"
                 : 'simplePattern));
# 8210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2667 "../pars.fsy"
                             SynSimplePat.Id (_2,None,false,false,true,rhs parseState 2) 
                   )
# 2667 "../pars.fsy"
                 : 'simplePattern));
# 8221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2669 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Typed(_1,_3,lhsm) 
                   )
# 2669 "../pars.fsy"
                 : 'simplePattern));
# 8234 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2672 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Attrib(_2,_1,lhsm) 
                   )
# 2672 "../pars.fsy"
                 : 'simplePattern));
# 8247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2677 "../pars.fsy"
                             [_1] 
                   )
# 2677 "../pars.fsy"
                 : 'simplePatternCommaList));
# 8258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2679 "../pars.fsy"
                             _1 :: _3 
                   )
# 2679 "../pars.fsy"
                 : 'simplePatternCommaList));
# 8270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2683 "../pars.fsy"
                             _2 
                   )
# 2683 "../pars.fsy"
                 : 'simplePatterns));
# 8282 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2685 "../pars.fsy"
                             [] 
                   )
# 2685 "../pars.fsy"
                 : 'simplePatterns));
# 8293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2687 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             [] 
                   )
# 2687 "../pars.fsy"
                 : 'simplePatterns));
# 8306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2690 "../pars.fsy"
                             (* silent recovery *) [] 
                   )
# 2690 "../pars.fsy"
                 : 'simplePatterns));
# 8317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2692 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             [] 
                   )
# 2692 "../pars.fsy"
                 : 'simplePatterns));
# 8329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2698 "../pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2698 "../pars.fsy"
                 : Ast.SynPat));
# 8341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2700 "../pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2700 "../pars.fsy"
                 : Ast.SynPat));
# 8353 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2702 "../pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None, SynConstructorArgs.Pats [SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],None,lhs parseState) 
                   )
# 2702 "../pars.fsy"
                 : Ast.SynPat));
# 8365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2704 "../pars.fsy"
                             SynPat.Tuple(List.rev _1, lhs parseState) 
                   )
# 2704 "../pars.fsy"
                 : Ast.SynPat));
# 8376 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2706 "../pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 2706 "../pars.fsy"
                 : Ast.SynPat));
# 8387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2708 "../pars.fsy"
                             _1 
                   )
# 2708 "../pars.fsy"
                 : Ast.SynPat));
# 8398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2712 "../pars.fsy"
                             _3 :: _1 
                   )
# 2712 "../pars.fsy"
                 : 'tuplePatternElements));
# 8410 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2714 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2714 "../pars.fsy"
                 : 'tuplePatternElements));
# 8422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2718 "../pars.fsy"
                             _3 :: _1 
                   )
# 2718 "../pars.fsy"
                 : 'conjPatternElements));
# 8434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2720 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2720 "../pars.fsy"
                 : 'conjPatternElements));
# 8446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2723 "../pars.fsy"
                                                 [_1], lhs parseState 
                   )
# 2723 "../pars.fsy"
                 : 'namePatPairs));
# 8458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2724 "../pars.fsy"
                                                          let (rs, _) = _3 in (_1::rs), lhs parseState 
                   )
# 2724 "../pars.fsy"
                 : 'namePatPairs));
# 8471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2727 "../pars.fsy"
                                                      (_1, _3) 
                   )
# 2727 "../pars.fsy"
                 : 'namePatPair));
# 8483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2731 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,Some _2, SynConstructorArgs.Pats [],vis,lhs parseState) 
                   )
# 2731 "../pars.fsy"
                 : 'constrPattern));
# 8495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2733 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _3,vis,lhs parseState) 
                   )
# 2733 "../pars.fsy"
                 : 'constrPattern));
# 8508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2735 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _4,vis,lhs parseState) 
                   )
# 2735 "../pars.fsy"
                 : 'constrPattern));
# 8521 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2737 "../pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _4,vis,lhs parseState) 
                   )
# 2737 "../pars.fsy"
                 : 'constrPattern));
# 8534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2739 "../pars.fsy"
                             SynPat.IsInst(_2,lhs parseState) 
                   )
# 2739 "../pars.fsy"
                 : 'constrPattern));
# 8545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2741 "../pars.fsy"
                             _1 
                   )
# 2741 "../pars.fsy"
                 : 'constrPattern));
# 8556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2744 "../pars.fsy"
                                                      SynConstructorArgs.NamePatPairs _2 
                   )
# 2744 "../pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2745 "../pars.fsy"
                                          SynConstructorArgs.Pats _1 
                   )
# 2745 "../pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2749 "../pars.fsy"
                             _1 :: _2 
                   )
# 2749 "../pars.fsy"
                 : 'atomicPatterns));
# 8591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2751 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2751 "../pars.fsy"
                 : 'atomicPatterns));
# 8604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2754 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled());
                             _1 :: _3 
                   )
# 2754 "../pars.fsy"
                 : 'atomicPatterns));
# 8617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2756 "../pars.fsy"
                                         [_1] 
                   )
# 2756 "../pars.fsy"
                 : 'atomicPatterns));
# 8628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2761 "../pars.fsy"
                             SynPat.QuoteExpr(_1,lhs parseState) 
                   )
# 2761 "../pars.fsy"
                 : 'atomicPattern));
# 8639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2762 "../pars.fsy"
                                             SynPat.DeprecatedCharRange (_1,_3,rhs2 parseState 1 3) 
                   )
# 2762 "../pars.fsy"
                 : 'atomicPattern));
# 8651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2764 "../pars.fsy"
                             _2 
                   )
# 2764 "../pars.fsy"
                 : 'atomicPattern));
# 8663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2766 "../pars.fsy"
                             SynPat.ArrayOrList(false,_2,lhs parseState) 
                   )
# 2766 "../pars.fsy"
                 : 'atomicPattern));
# 8674 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2768 "../pars.fsy"
                             SynPat.ArrayOrList(true,_2, lhs parseState) 
                   )
# 2768 "../pars.fsy"
                 : 'atomicPattern));
# 8685 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2770 "../pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 2770 "../pars.fsy"
                 : 'atomicPattern));
# 8695 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2772 "../pars.fsy"
                             SynPat.OptionalVal(_2,lhs parseState) 
                   )
# 2772 "../pars.fsy"
                 : 'atomicPattern));
# 8706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2774 "../pars.fsy"
                             let vis,lidwd = _1 
                             if List.length lidwd.Lid > 1 || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
# 2774 "../pars.fsy"
                 : 'atomicPattern));
# 8720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2779 "../pars.fsy"
                             SynPat.Const (_1,_1.Range (lhs parseState)) 
                   )
# 2779 "../pars.fsy"
                 : 'atomicPattern));
# 8731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2781 "../pars.fsy"
                             SynPat.Const(SynConst.Bool false,lhs parseState) 
                   )
# 2781 "../pars.fsy"
                 : 'atomicPattern));
# 8741 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2783 "../pars.fsy"
                             SynPat.Const(SynConst.Bool true,lhs parseState) 
                   )
# 2783 "../pars.fsy"
                 : 'atomicPattern));
# 8751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2785 "../pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 2785 "../pars.fsy"
                 : 'atomicPattern));
# 8761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2787 "../pars.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m,m) 
                   )
# 2787 "../pars.fsy"
                 : 'atomicPattern));
# 8774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2790 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 2790 "../pars.fsy"
                 : 'atomicPattern));
# 8787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2793 "../pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 2793 "../pars.fsy"
                 : 'atomicPattern));
# 8798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2795 "../pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 2795 "../pars.fsy"
                 : 'atomicPattern));
# 8810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2802 "../pars.fsy"
                             (fun m -> _1) 
                   )
# 2802 "../pars.fsy"
                 : 'parenPatternBody));
# 8821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2804 "../pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 2804 "../pars.fsy"
                 : 'parenPatternBody));
# 8831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2833 "../pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2833 "../pars.fsy"
                 : 'parenPattern));
# 8843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2835 "../pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2835 "../pars.fsy"
                 : 'parenPattern));
# 8855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2837 "../pars.fsy"
                             SynPat.Tuple(List.rev _1,lhs parseState) 
                   )
# 2837 "../pars.fsy"
                 : 'parenPattern));
# 8866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2839 "../pars.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 2839 "../pars.fsy"
                 : 'parenPattern));
# 8877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2841 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 2841 "../pars.fsy"
                 : 'parenPattern));
# 8890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2844 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2,_1,lhsm) 
                   )
# 2844 "../pars.fsy"
                 : 'parenPattern));
# 8903 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2847 "../pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None, SynConstructorArgs.Pats [ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],None,lhs parseState) 
                   )
# 2847 "../pars.fsy"
                 : 'parenPattern));
# 8915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2848 "../pars.fsy"
                                         _1 
                   )
# 2848 "../pars.fsy"
                 : 'parenPattern));
# 8926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2852 "../pars.fsy"
                             _3 :: _1 
                   )
# 2852 "../pars.fsy"
                 : 'tupleParenPatternElements));
# 8938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2854 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2854 "../pars.fsy"
                 : 'tupleParenPatternElements));
# 8950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2858 "../pars.fsy"
                             _3 :: _1 
                   )
# 2858 "../pars.fsy"
                 : 'conjParenPatternElements));
# 8962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2860 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2860 "../pars.fsy"
                 : 'conjParenPatternElements));
# 8974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2863 "../pars.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 2863 "../pars.fsy"
                 : 'recordPatternElements));
# 8985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2867 "../pars.fsy"
                             [_1],lhs parseState 
                   )
# 2867 "../pars.fsy"
                 : 'recordPatternElementsAux));
# 8997 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2869 "../pars.fsy"
                             let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs parseState 
                   )
# 2869 "../pars.fsy"
                 : 'recordPatternElementsAux));
# 9010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2872 "../pars.fsy"
                                                    (List.frontAndBack _1.Lid,_3) 
                   )
# 2872 "../pars.fsy"
                 : 'recordPatternElement));
# 9022 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2876 "../pars.fsy"
                             [] 
                   )
# 2876 "../pars.fsy"
                 : 'listPatternElements));
# 9032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2878 "../pars.fsy"
                             [_1] 
                   )
# 2878 "../pars.fsy"
                 : 'listPatternElements));
# 9044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2880 "../pars.fsy"
                             _1 :: _3 
                   )
# 2880 "../pars.fsy"
                 : 'listPatternElements));
# 9057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2885 "../pars.fsy"
                             _2 
                   )
# 2885 "../pars.fsy"
                 : Ast.SynExpr));
# 9069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2887 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                             exprFromParseError _2 
                   )
# 2887 "../pars.fsy"
                 : Ast.SynExpr));
# 9082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2890 "../pars.fsy"
                             _1 
                   )
# 2890 "../pars.fsy"
                 : Ast.SynExpr));
# 9093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2895 "../pars.fsy"
                             _2 
                   )
# 2895 "../pars.fsy"
                 : Ast.SynExpr));
# 9105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2897 "../pars.fsy"
                             _1 
                   )
# 2897 "../pars.fsy"
                 : Ast.SynExpr));
# 9116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2902 "../pars.fsy"
                                                         _1 
                   )
# 2902 "../pars.fsy"
                 : 'typedSeqExprBlockR));
# 9127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2903 "../pars.fsy"
                                        _1 
                   )
# 2903 "../pars.fsy"
                 : 'typedSeqExprBlockR));
# 9138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2906 "../pars.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2906 "../pars.fsy"
                 : 'typedSeqExpr));
# 9150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2907 "../pars.fsy"
                                   _1 
                   )
# 2907 "../pars.fsy"
                 : 'typedSeqExpr));
# 9161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2911 "../pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 2911 "../pars.fsy"
                 : 'seqExpr));
# 9174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2913 "../pars.fsy"
                             _1 
                   )
# 2913 "../pars.fsy"
                 : 'seqExpr));
# 9186 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2915 "../pars.fsy"
                             _1 
                   )
# 2915 "../pars.fsy"
                 : 'seqExpr));
# 9197 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2917 "../pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 2917 "../pars.fsy"
                 : 'seqExpr));
# 9209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2919 "../pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 2919 "../pars.fsy"
                 : 'seqExpr));
# 9222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2921 "../pars.fsy"
                            let hwlb,m = _1
                            let mLetKwd,isUse = match hwlb with (BindingSetPreAttrs(m,_,isUse,_,_))  -> m,isUse
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedStatementAfterLet(if isUse then "use" else "let"))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m,hwlb,arbExpr("seqExpr",fauxRange)) 
                   )
# 2921 "../pars.fsy"
                 : 'seqExpr));
# 9237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2932 "../pars.fsy"
                                  debugPrint("recovering via error"); true 
                   )
# 2932 "../pars.fsy"
                 : 'recover));
# 9247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2933 "../pars.fsy"
                                debugPrint("recovering via EOF"); false 
                   )
# 2933 "../pars.fsy"
                 : 'recover));
# 9258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2938 "../pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 2938 "../pars.fsy"
                 : Ast.SynExpr));
# 9270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2941 "../pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr("declExpr1",(rhs parseState 3))) 
                   )
# 2941 "../pars.fsy"
                 : Ast.SynExpr));
# 9281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2947 "../pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 2947 "../pars.fsy"
                 : Ast.SynExpr));
# 9294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2951 "../pars.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 2951 "../pars.fsy"
                 : Ast.SynExpr));
# 9307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2956 "../pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 2956 "../pars.fsy"
                 : Ast.SynExpr));
# 9320 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2960 "../pars.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 2960 "../pars.fsy"
                 : Ast.SynExpr));
# 9333 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2965 "../pars.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 2965 "../pars.fsy"
                 : Ast.SynExpr));
# 9345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2969 "../pars.fsy"
                             _1 
                   )
# 2969 "../pars.fsy"
                 : Ast.SynExpr));
# 9356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2972 "../pars.fsy"
                             _1 
                   )
# 2972 "../pars.fsy"
                 : Ast.SynExpr));
# 9367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2975 "../pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 2975 "../pars.fsy"
                 : Ast.SynExpr));
# 9382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2981 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch());
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 2981 "../pars.fsy"
                 : Ast.SynExpr));
# 9396 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2986 "../pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = SequencePointAtTry(mTry) 
                             let mWith,(clauses,mLast) = _3 
                             let spWith = SequencePointAtWith(mWith) 
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith(_2, mTryToWith, clauses,mWithToLast, mTryToLast,spTry,spWith) 
                   )
# 2986 "../pars.fsy"
                 : Ast.SynExpr));
# 9415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2996 "../pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry());
                             exprFromParseError _2 
                   )
# 2996 "../pars.fsy"
                 : Ast.SynExpr));
# 9430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3002 "../pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = SequencePointAtTry(mTry) 
                             let spFinally = SequencePointAtFinally(rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally(_2, _4,mTryToLast,spTry,spFinally) 
                   )
# 3002 "../pars.fsy"
                 : Ast.SynExpr));
# 9446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3009 "../pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 3009 "../pars.fsy"
                 : Ast.SynExpr));
# 9459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3013 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()); 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 3013 "../pars.fsy"
                 : Ast.SynExpr));
# 9476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3021 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = (rhs parseState 1)
                             let mEnd = m.EndRange
                             let spIfToThen = SequencePointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse(arbExpr("ifGuard1",mEnd),arbExpr("thenBody1",mEnd),None,spIfToThen,true,m,m)) 
                   )
# 3021 "../pars.fsy"
                 : Ast.SynExpr));
# 9493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3030 "../pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3030 "../pars.fsy"
                 : Ast.SynExpr));
# 9504 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3033 "../pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3033 "../pars.fsy"
                 : Ast.SynExpr));
# 9515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3036 "../pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3036 "../pars.fsy"
                 : Ast.SynExpr));
# 9525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3039 "../pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3039 "../pars.fsy"
                 : Ast.SynExpr));
# 9536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3042 "../pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3042 "../pars.fsy"
                 : Ast.SynExpr));
# 9547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3045 "../pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3045 "../pars.fsy"
                 : Ast.SynExpr));
# 9557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3048 "../pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While(spWhile,_2,_4,mWhileAll) 
                   )
# 3048 "../pars.fsy"
                 : Ast.SynExpr));
# 9574 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3054 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While(spWhile,_2,_4,mWhileAll)) 
                   )
# 3054 "../pars.fsy"
                 : Ast.SynExpr));
# 9592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3061 "../pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While(spWhile,_2,arbExpr("whileBody1",mWhileBodyArb),mWhileAll) 
                   )
# 3061 "../pars.fsy"
                 : Ast.SynExpr));
# 9610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3069 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,_2,arbExpr("whileBody2",mWhileBodyArb),mWhileAll))  
                   )
# 3069 "../pars.fsy"
                 : Ast.SynExpr));
# 9627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3077 "../pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile());
                             arbExpr("whileLoop1",rhs parseState 1)  
                   )
# 3077 "../pars.fsy"
                 : Ast.SynExpr));
# 9639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3081 "../pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,arbExpr("whileGuard1",mWhileHeader),arbExpr("whileBody3",mWhileBodyArb),mWhileAll))  
                   )
# 3081 "../pars.fsy"
                 : Ast.SynExpr));
# 9655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3089 "../pars.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3089 "../pars.fsy"
                 : Ast.SynExpr));
# 9671 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3094 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,mForLoopAll) 
                   )
# 3094 "../pars.fsy"
                 : Ast.SynExpr));
# 9689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3101 "../pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2a",mForLoopBodyArb),mForLoopAll) 
                   )
# 3101 "../pars.fsy"
                 : Ast.SynExpr));
# 9708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3110 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2",mForLoopBodyArb),mForLoopAll) 
                   )
# 3110 "../pars.fsy"
                 : Ast.SynExpr));
# 9727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3119 "../pars.fsy"
                             let (a,b,ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody1",mForLoopBodyArb),mForLoopAll) 
                   )
# 3119 "../pars.fsy"
                 : Ast.SynExpr));
# 9745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3128 "../pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll) 
                   )
# 3128 "../pars.fsy"
                 : Ast.SynExpr));
# 9763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3135 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll)) 
                   )
# 3135 "../pars.fsy"
                 : Ast.SynExpr));
# 9783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3144 "../pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll) 
                   )
# 3144 "../pars.fsy"
                 : Ast.SynExpr));
# 9802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3153 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3153 "../pars.fsy"
                 : Ast.SynExpr));
# 9821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3162 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3162 "../pars.fsy"
                 : Ast.SynExpr));
# 9839 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3172 "../pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = SequencePointAtForLoop(mForLoopHeader)
                             SynExpr.For(spBind,mkSynId mForLoopHeader "_loopVar",arbExpr("startLoopRange1",mForLoopHeader),true,arbExpr("endLoopRange1",rhs parseState 3),_4,mForLoopAll) 
                   )
# 3172 "../pars.fsy"
                 : Ast.SynExpr));
# 9856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3191 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12",(rhs parseState 1)) 
                   )
# 3191 "../pars.fsy"
                 : Ast.SynExpr));
# 9868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3195 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll) 
                   )
# 3195 "../pars.fsy"
                 : Ast.SynExpr));
# 9885 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3203 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor());
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3203 "../pars.fsy"
                 : Ast.SynExpr));
# 9902 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3212 "../pars.fsy"
                            SynExpr.YieldOrReturn((_1,not _1),_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3212 "../pars.fsy"
                 : Ast.SynExpr));
# 9914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3215 "../pars.fsy"
                            SynExpr.YieldOrReturnFrom((_1,not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3215 "../pars.fsy"
                 : Ast.SynExpr));
# 9926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3218 "../pars.fsy"
                            let spBind = SequencePointAtBinding(rhs2 parseState 1 5)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 3218 "../pars.fsy"
                 : Ast.SynExpr));
# 9943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3223 "../pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1);  // report unterminated error 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 3223 "../pars.fsy"
                 : Ast.SynExpr));
# 9962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3229 "../pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range) 
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4, SynExpr.ImplicitZero m, mAll) 
                   )
# 3229 "../pars.fsy"
                 : Ast.SynExpr));
# 9981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3236 "../pars.fsy"
                            let spBind = NoSequencePointAtDoBinding
                            SynExpr.LetOrUseBang(spBind,false,true,SynPat.Const(SynConst.Unit,_2.Range),_2,_5, unionRanges (rhs parseState 1) _5.Range) 
                   )
# 3236 "../pars.fsy"
                 : Ast.SynExpr));
# 9995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3240 "../pars.fsy"
                            SynExpr.DoBang(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3240 "../pars.fsy"
                 : Ast.SynExpr));
# 10007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3243 "../pars.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let (a,b,_) = _2 in SynExpr.ForEach(spBind,SeqExprOnly true,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3243 "../pars.fsy"
                 : Ast.SynExpr));
# 10021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3247 "../pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(),lhs parseState));
                            SynExpr.YieldOrReturn((true,true),_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
# 3247 "../pars.fsy"
                 : Ast.SynExpr));
# 10033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3252 "../pars.fsy"
                                                             SynExpr.TypeTest(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3252 "../pars.fsy"
                 : Ast.SynExpr));
# 10045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3253 "../pars.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3253 "../pars.fsy"
                 : Ast.SynExpr));
# 10057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3254 "../pars.fsy"
                                                             SynExpr.Downcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3254 "../pars.fsy"
                 : Ast.SynExpr));
# 10069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3257 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 3257 "../pars.fsy"
                 : Ast.SynExpr));
# 10081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3258 "../pars.fsy"
                                                                         mkSynAssign _1 _3 
                   )
# 3258 "../pars.fsy"
                 : Ast.SynExpr));
# 10093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3260 "../pars.fsy"
                                                        let exprs,commas = _1 in SynExpr.Tuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 3260 "../pars.fsy"
                 : Ast.SynExpr));
# 10104 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3261 "../pars.fsy"
                                                                    SynExpr.JoinIn(_1,rhs parseState 2,_3,unionRanges _1.Range _3.Range) 
                   )
# 3261 "../pars.fsy"
                 : Ast.SynExpr));
# 10116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3262 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 3262 "../pars.fsy"
                 : Ast.SynExpr));
# 10128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3263 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3263 "../pars.fsy"
                 : Ast.SynExpr));
# 10141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3264 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 3264 "../pars.fsy"
                 : Ast.SynExpr));
# 10153 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3265 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 3265 "../pars.fsy"
                 : Ast.SynExpr));
# 10165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3266 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 3266 "../pars.fsy"
                 : Ast.SynExpr));
# 10177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3267 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3267 "../pars.fsy"
                 : Ast.SynExpr));
# 10190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3268 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 3268 "../pars.fsy"
                 : Ast.SynExpr));
# 10202 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3269 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3269 "../pars.fsy"
                 : Ast.SynExpr));
# 10215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3270 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 3270 "../pars.fsy"
                 : Ast.SynExpr));
# 10227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3271 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 3271 "../pars.fsy"
                 : Ast.SynExpr));
# 10240 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3272 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 3272 "../pars.fsy"
                 : Ast.SynExpr));
# 10253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3273 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3273 "../pars.fsy"
                 : Ast.SynExpr));
# 10266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3274 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3274 "../pars.fsy"
                 : Ast.SynExpr));
# 10279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3275 "../pars.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],[rhs parseState 2],unionRanges _1.Range _3.Range),unionRanges _1.Range _3.Range) 
                   )
# 3275 "../pars.fsy"
                 : Ast.SynExpr));
# 10291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3276 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3276 "../pars.fsy"
                 : Ast.SynExpr));
# 10304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3277 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 3277 "../pars.fsy"
                 : Ast.SynExpr));
# 10316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3278 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 3278 "../pars.fsy"
                 : Ast.SynExpr));
# 10328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3279 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3279 "../pars.fsy"
                 : Ast.SynExpr));
# 10341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3280 "../pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3280 "../pars.fsy"
                 : Ast.SynExpr));
# 10354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3282 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3282 "../pars.fsy"
                 : Ast.SynExpr));
# 10366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3284 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3284 "../pars.fsy"
                 : Ast.SynExpr));
# 10378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3286 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3286 "../pars.fsy"
                 : Ast.SynExpr));
# 10391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3288 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3288 "../pars.fsy"
                 : Ast.SynExpr));
# 10403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3290 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3290 "../pars.fsy"
                 : Ast.SynExpr));
# 10415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3292 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3292 "../pars.fsy"
                 : Ast.SynExpr));
# 10427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3294 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3294 "../pars.fsy"
                 : Ast.SynExpr));
# 10440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3296 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3296 "../pars.fsy"
                 : Ast.SynExpr));
# 10452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3298 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3298 "../pars.fsy"
                 : Ast.SynExpr));
# 10465 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3300 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3300 "../pars.fsy"
                 : Ast.SynExpr));
# 10477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3302 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3302 "../pars.fsy"
                 : Ast.SynExpr));
# 10490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3304 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3304 "../pars.fsy"
                 : Ast.SynExpr));
# 10503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3306 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3306 "../pars.fsy"
                 : Ast.SynExpr));
# 10516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3308 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3308 "../pars.fsy"
                 : Ast.SynExpr));
# 10529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3310 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")); 
                                                                                 SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;(arbExpr("declExprInfix",(rhs parseState 3).StartRange))],[rhs parseState 2],unionRanges _1.Range (rhs parseState 3).StartRange),unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
# 3310 "../pars.fsy"
                 : Ast.SynExpr));
# 10541 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3312 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3312 "../pars.fsy"
                 : Ast.SynExpr));
# 10554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3314 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3314 "../pars.fsy"
                 : Ast.SynExpr));
# 10566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3316 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3316 "../pars.fsy"
                 : Ast.SynExpr));
# 10578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3318 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3318 "../pars.fsy"
                 : Ast.SynExpr));
# 10591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3320 "../pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)); 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3320 "../pars.fsy"
                 : Ast.SynExpr));
# 10604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3323 "../pars.fsy"
                                                                  _1 
                   )
# 3323 "../pars.fsy"
                 : Ast.SynExpr));
# 10615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3327 "../pars.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 3327 "../pars.fsy"
                 : 'dynamicArg));
# 10628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3331 "../pars.fsy"
                             _2 
                   )
# 3331 "../pars.fsy"
                 : 'dynamicArg));
# 10640 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3335 "../pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3335 "../pars.fsy"
                 : 'withClauses));
# 10651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3337 "../pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3337 "../pars.fsy"
                 : 'withClauses));
# 10662 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3339 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith());
                             rhs parseState 1, _2 
                   )
# 3339 "../pars.fsy"
                 : 'withClauses));
# 10675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3344 "../pars.fsy"
                             _1 
                   )
# 3344 "../pars.fsy"
                 : 'withPatternClauses));
# 10686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3346 "../pars.fsy"
                              _2 
                   )
# 3346 "../pars.fsy"
                 : 'withPatternClauses));
# 10697 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3348 "../pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 3348 "../pars.fsy"
                 : 'withPatternClauses));
# 10709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3352 "../pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 3352 "../pars.fsy"
                 : 'withPatternClauses));
# 10721 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3359 "../pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 3359 "../pars.fsy"
                 : 'patternAndGuard));
# 10733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3363 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 3363 "../pars.fsy"
                 : 'patternClauses));
# 10747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3367 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 3367 "../pars.fsy"
                 : 'patternClauses));
# 10762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3371 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 3371 "../pars.fsy"
                 : 'patternClauses));
# 10777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3376 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 3376 "../pars.fsy"
                 : 'patternClauses));
# 10792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3381 "../pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat,guard,SynExpr.Const(SynConst.Unit,mLast.EndRange),patm,SequencePointAtTarget)], mLast 
                   )
# 3381 "../pars.fsy"
                 : 'patternClauses));
# 10806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3388 "../pars.fsy"
                            Some _2 
                   )
# 3388 "../pars.fsy"
                 : 'patternGuard));
# 10817 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3390 "../pars.fsy"
                            None 
                   )
# 3390 "../pars.fsy"
                 : 'patternGuard));
# 10827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3394 "../pars.fsy"
                            _2 
                   )
# 3394 "../pars.fsy"
                 : Ast.SynExpr));
# 10838 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3398 "../pars.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,false,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 3398 "../pars.fsy"
                 : 'ifExprCases));
# 10856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3408 "../pars.fsy"
                             _2, rhs parseState 1 
                   )
# 3408 "../pars.fsy"
                 : 'ifExprThen));
# 10867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3410 "../pars.fsy"
                             _3,rhs parseState 1 
                   )
# 3410 "../pars.fsy"
                 : 'ifExprThen));
# 10879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3412 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen());
                             exprFromParseError _3,rhs parseState 1 
                   )
# 3412 "../pars.fsy"
                 : 'ifExprThen));
# 10892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3417 "../pars.fsy"
                             None 
                   )
# 3417 "../pars.fsy"
                 : 'ifExprElifs));
# 10902 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3419 "../pars.fsy"
                             Some _2 
                   )
# 3419 "../pars.fsy"
                 : 'ifExprElifs));
# 10913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3421 "../pars.fsy"
                             Some _3 
                   )
# 3421 "../pars.fsy"
                 : 'ifExprElifs));
# 10925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3423 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse());
                             Some (exprFromParseError _3) 
                   )
# 3423 "../pars.fsy"
                 : 'ifExprElifs));
# 10938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3426 "../pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 3426 "../pars.fsy"
                 : 'ifExprElifs));
# 10951 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3429 "../pars.fsy"
                             Some (exprFromParseError _2) 
                   )
# 3429 "../pars.fsy"
                 : 'ifExprElifs));
# 10963 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3433 "../pars.fsy"
                             let exprs,commas = _1 in (_3 :: exprs),((rhs parseState 2)::commas) 
                   )
# 3433 "../pars.fsy"
                 : 'tupleExpr));
# 10975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3435 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs,commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1",zeroWidthAtNextToken)) :: exprs), (rhs parseState 2)::commas 
                   )
# 3435 "../pars.fsy"
                 : 'tupleExpr));
# 10990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3440 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2",zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
# 3440 "../pars.fsy"
                 : 'tupleExpr));
# 11004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3444 "../pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 3444 "../pars.fsy"
                 : 'tupleExpr));
# 11016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3448 "../pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 3448 "../pars.fsy"
                 : Ast.SynExpr));
# 11027 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3450 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3450 "../pars.fsy"
                 : Ast.SynExpr));
# 11040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3453 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if _1 = "&" then 
                                 SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             elif _1 = "&&" then 
                                 SynExpr.AddressOf(false,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             else
                                 mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3453 "../pars.fsy"
                 : Ast.SynExpr));
# 11058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3461 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3461 "../pars.fsy"
                 : Ast.SynExpr));
# 11071 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3464 "../pars.fsy"
                             SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3464 "../pars.fsy"
                 : Ast.SynExpr));
# 11082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3466 "../pars.fsy"
                             SynExpr.AddressOf(false,_2,rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3466 "../pars.fsy"
                 : Ast.SynExpr));
# 11093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3468 "../pars.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3468 "../pars.fsy"
                 : Ast.SynExpr));
# 11106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3470 "../pars.fsy"
                             SynExpr.New(false,_2,arbExpr("minusExpr",(rhs parseState 4)),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 3470 "../pars.fsy"
                 : Ast.SynExpr));
# 11118 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3472 "../pars.fsy"
                             arbExpr("minusExpr2",(rhs parseState 1)) 
                   )
# 3472 "../pars.fsy"
                 : Ast.SynExpr));
# 11128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3474 "../pars.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3474 "../pars.fsy"
                 : Ast.SynExpr));
# 11139 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3476 "../pars.fsy"
                             SynExpr.InferredDowncast(_2,unionRanges (rhs parseState 1) _2.Range)
                   )
# 3476 "../pars.fsy"
                 : Ast.SynExpr));
# 11150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3478 "../pars.fsy"
                             _1 
                   )
# 3478 "../pars.fsy"
                 : Ast.SynExpr));
# 11161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3482 "../pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 3482 "../pars.fsy"
                 : Ast.SynExpr));
# 11173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3484 "../pars.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 3484 "../pars.fsy"
                 : Ast.SynExpr));
# 11185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3489 "../pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 3489 "../pars.fsy"
                 : Ast.SynExpr));
# 11200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3494 "../pars.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled());
                             arg 
                   )
# 3494 "../pars.fsy"
                 : Ast.SynExpr));
# 11213 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3501 "../pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3501 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3506 "../pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3506 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3511 "../pars.fsy"
                             let arg1,_ = _1 
                             let mLessThan,mGreaterThan,_,args,commas,mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp(arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 3511 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3517 "../pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator());
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 3517 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3522 "../pars.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2),hpa1 
                   )
# 3522 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3525 "../pars.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2),false 
                   )
# 3525 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3528 "../pars.fsy"
                             SynExpr.LongIdent (true,LongIdentWithDots([_2],[]),None,rhs parseState 2),false 
                   )
# 3528 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3530 "../pars.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 3530 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11319 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3533 "../pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 3533 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3535 "../pars.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 3535 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3537 "../pars.fsy"
                             _2 (lhs parseState) false,false 
                   )
# 3537 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3539 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 3539 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3542 "../pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs parseState),false  
                   )
# 3542 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3545 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList(false,[ ], rhs parseState 1)),false  
                   )
# 3545 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3549 "../pars.fsy"
                             _1,false 
                   )
# 3549 "../pars.fsy"
                 : Ast.SynExpr * bool));
# 11399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3553 "../pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 3553 "../pars.fsy"
                 : 'atomicExprQualification));
# 11411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3556 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 3556 "../pars.fsy"
                 : 'atomicExprQualification));
# 11424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3561 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()); 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot(e,fixedLhsm)) 
                   )
# 3561 "../pars.fsy"
                 : 'atomicExprQualification));
# 11439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3567 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs parseState);
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e,mkSynCaseName lhsm opNameCons,(fst _5),lhsm)) 
                   )
# 3567 "../pars.fsy"
                 : 'atomicExprQualification));
# 11453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3572 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState); 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 3572 "../pars.fsy"
                 : 'atomicExprQualification));
# 11467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3577 "../pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 3577 "../pars.fsy"
                 : 'atomicExprQualification));
# 11478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3580 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
# 3580 "../pars.fsy"
                 : 'atomicExprQualification));
# 11491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3584 "../pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSeqSliceGet lhsm dotm e _2) 
                   )
# 3584 "../pars.fsy"
                 : 'atomicExprQualification));
# 11502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3587 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()); 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackSeqSliceGet lhsm dotm e _2)) 
                   )
# 3587 "../pars.fsy"
                 : 'atomicExprQualification));
# 11515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3591 "../pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1",mArg))) 
                   )
# 3591 "../pars.fsy"
                 : 'atomicExprQualification));
# 11526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3595 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2",mArg)))) 
                   )
# 3595 "../pars.fsy"
                 : 'atomicExprQualification));
# 11539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3600 "../pars.fsy"
                                                                            _1::_3 
                   )
# 3600 "../pars.fsy"
                 : 'optRangeSeqExpr));
# 11551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3601 "../pars.fsy"
                                    [_1] 
                   )
# 3601 "../pars.fsy"
                 : 'optRangeSeqExpr));
# 11562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3605 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3)) 
                   )
# 3605 "../pars.fsy"
                 : 'optRange));
# 11574 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3607 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None) 
                   )
# 3607 "../pars.fsy"
                 : 'optRange));
# 11585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3609 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2)) 
                   )
# 3609 "../pars.fsy"
                 : 'optRange));
# 11596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3611 "../pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None) 
                   )
# 3611 "../pars.fsy"
                 : 'optRange));
# 11606 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3613 "../pars.fsy"
                             SynIndexerArg.One(_1) 
                   )
# 3613 "../pars.fsy"
                 : 'optRange));
# 11617 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3618 "../pars.fsy"
                             SynExpr.Const (_1,_1.Range (lhs parseState)) 
                   )
# 3618 "../pars.fsy"
                 : Ast.SynExpr));
# 11628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3620 "../pars.fsy"
                             _1 
                   )
# 3620 "../pars.fsy"
                 : Ast.SynExpr));
# 11639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3622 "../pars.fsy"
                             _1 
                   )
# 3622 "../pars.fsy"
                 : Ast.SynExpr));
# 11650 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3624 "../pars.fsy"
                             SynExpr.Null(lhs parseState) 
                   )
# 3624 "../pars.fsy"
                 : Ast.SynExpr));
# 11660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3626 "../pars.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs parseState) 
                   )
# 3626 "../pars.fsy"
                 : Ast.SynExpr));
# 11670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3628 "../pars.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs parseState) 
                   )
# 3628 "../pars.fsy"
                 : Ast.SynExpr));
# 11680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3630 "../pars.fsy"
                             _1 
                   )
# 3630 "../pars.fsy"
                 : Ast.SynExpr));
# 11691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3632 "../pars.fsy"
                             _1 
                   )
# 3632 "../pars.fsy"
                 : Ast.SynExpr));
# 11702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3634 "../pars.fsy"
                             _1 
                   )
# 3634 "../pars.fsy"
                 : Ast.SynExpr));
# 11713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3638 "../pars.fsy"
                             SynExpr.Paren(_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 3638 "../pars.fsy"
                 : 'beginEndExpr));
# 11724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3641 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 3641 "../pars.fsy"
                 : 'beginEndExpr));
# 11736 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3644 "../pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr",(lhs parseState))  
                   )
# 3644 "../pars.fsy"
                 : 'beginEndExpr));
# 11746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3647 "../pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 3647 "../pars.fsy"
                 : 'beginEndExpr));
# 11756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3651 "../pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
# 3651 "../pars.fsy"
                 : 'quoteExpr));
# 11770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3655 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, _2, false, mExpr))  
                   )
# 3655 "../pars.fsy"
                 : 'quoteExpr));
# 11785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3660 "../pars.fsy"
                             (* silent recovery *) SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr",(rhs parseState 2)), false, lhs parseState)  
                   )
# 3660 "../pars.fsy"
                 : 'quoteExpr));
# 11797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3663 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr2",(rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
# 3663 "../pars.fsy"
                 : 'quoteExpr));
# 11810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3668 "../pars.fsy"
                              _2 (lhs parseState) true 
                   )
# 3668 "../pars.fsy"
                 : 'arrayExpr));
# 11821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3671 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()); 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 3671 "../pars.fsy"
                 : 'arrayExpr));
# 11834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3675 "../pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs parseState) 
                   )
# 3675 "../pars.fsy"
                 : 'arrayExpr));
# 11844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3678 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar());  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList(true,[ ], rhs parseState 1)) 
                   )
# 3678 "../pars.fsy"
                 : 'arrayExpr));
# 11857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3684 "../pars.fsy"
                             SynExpr.Const(SynConst.Unit,(rhs2 parseState 1 2)) 
                   )
# 3684 "../pars.fsy"
                 : 'parenExpr));
# 11868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3687 "../pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren(_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 3687 "../pars.fsy"
                 : 'parenExpr));
# 11881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3691 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 3).Start
                             SynExpr.Paren(exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 3691 "../pars.fsy"
                 : 'parenExpr));
# 11895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3696 "../pars.fsy"
                             // silent recovery
                             SynExpr.Paren(arbExpr("parenExpr1",(rhs parseState 1).EndRange),(rhs parseState 1),Some(rhs parseState 3),(rhs2 parseState 1 3)) 
                   )
# 3696 "../pars.fsy"
                 : 'parenExpr));
# 11907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3700 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 3700 "../pars.fsy"
                 : 'parenExpr));
# 11919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3705 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 3705 "../pars.fsy"
                 : 'parenExpr));
# 11931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3710 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 3710 "../pars.fsy"
                 : 'parenExpr));
# 11943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3715 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2obecs", lhsm) 
                   )
# 3715 "../pars.fsy"
                 : 'parenExpr));
# 11955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3720 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()); 
                             arbExpr("parenExpr2",(lhs parseState))  
                   )
# 3720 "../pars.fsy"
                 : 'parenExpr));
# 11967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3732 "../pars.fsy"
                             (fun m -> SynExpr.TraitCall(_1,_4,_6,m)) 
                   )
# 3732 "../pars.fsy"
                 : 'parenExprBody));
# 11981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3734 "../pars.fsy"
                             (fun _m -> _1) 
                   )
# 3734 "../pars.fsy"
                 : 'parenExprBody));
# 11992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3736 "../pars.fsy"
                             _1 
                   )
# 3736 "../pars.fsy"
                 : 'parenExprBody));
# 12003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3740 "../pars.fsy"
                             [_1] 
                   )
# 3740 "../pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3743 "../pars.fsy"
                             List.rev _2 
                   )
# 3743 "../pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3747 "../pars.fsy"
                            _3 :: _1
                   )
# 3747 "../pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12038 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3750 "../pars.fsy"
                             [_1] 
                   )
# 3750 "../pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3754 "../pars.fsy"
                             let m,r = _2 in r (rhs2 parseState 1 3) 
                   )
# 3754 "../pars.fsy"
                 : 'braceExpr));
# 12061 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3757 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            let m,r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 3757 "../pars.fsy"
                 : 'braceExpr));
# 12076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3763 "../pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr",rhs2 parseState 1 3)  
                   )
# 3763 "../pars.fsy"
                 : 'braceExpr));
# 12088 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3767 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) ; 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record(None,None,[],rhs parseState 1) 
                   )
# 3767 "../pars.fsy"
                 : 'braceExpr));
# 12101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3772 "../pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record(None,None,[],m) 
                   )
# 3772 "../pars.fsy"
                 : 'braceExpr));
# 12113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3777 "../pars.fsy"
                             (lhs parseState), (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 3777 "../pars.fsy"
                 : 'braceExprBody));
# 12124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3780 "../pars.fsy"
                            _1 
                   )
# 3780 "../pars.fsy"
                 : 'braceExprBody));
# 12135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3783 "../pars.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 3783 "../pars.fsy"
                 : 'braceExprBody));
# 12146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3787 "../pars.fsy"
                            let m,r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, r true m, lhsm)) 
                   )
# 3787 "../pars.fsy"
                 : 'listExprElements));
# 12157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3789 "../pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 3789 "../pars.fsy"
                 : 'listExprElements));
# 12167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3793 "../pars.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 3793 "../pars.fsy"
                 : 'monadicExprInitial));
# 12178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3796 "../pars.fsy"
                            _1 
                   )
# 3796 "../pars.fsy"
                 : 'monadicExprInitial));
# 12189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3800 "../pars.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3800 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3808 "../pars.fsy"
                            (unionRanges _1.Range _5.Range),(fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 3808 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3811 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression());
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3).StartRange)
                            (unionRanges _1.Range e.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3811 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12240 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3824 "../pars.fsy"
                            SynExpr.YieldOrReturn((true,false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3824 "../pars.fsy"
                 : 'arrowThenExprR));
# 12251 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3829 "../pars.fsy"
                            (_1, _3, true) 
                   )
# 3829 "../pars.fsy"
                 : 'forLoopBinder));
# 12263 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3832 "../pars.fsy"
                            let m,r = _3 in (_1, r false m, true) 
                   )
# 3832 "../pars.fsy"
                 : 'forLoopBinder));
# 12275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3835 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2)), false) 
                   )
# 3835 "../pars.fsy"
                 : 'forLoopBinder));
# 12288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3839 "../pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1).EndRange), false) 
                   )
# 3839 "../pars.fsy"
                 : 'forLoopBinder));
# 12301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3844 "../pars.fsy"
                             idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 3844 "../pars.fsy"
                 : 'forLoopRange));
# 12315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyReturnTypes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3848 "../pars.fsy"
                             libraryOnlyWarning (lhs parseState);
                             let s,sm = _2,rhs parseState 2
                             (fun m -> SynExpr.LibraryOnlyILAssembly (ParseAssemblyCodeInstructions s sm,_3,List.rev _4,_5,m)) 
                   )
# 3848 "../pars.fsy"
                 : 'inlineAssemblyExpr));
# 12331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3854 "../pars.fsy"
                             _2 :: _1 
                   )
# 3854 "../pars.fsy"
                 : 'opt_curriedArgExprs));
# 12343 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3857 "../pars.fsy"
                             [] 
                   )
# 3857 "../pars.fsy"
                 : 'opt_curriedArgExprs));
# 12353 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3861 "../pars.fsy"
                             None 
                   )
# 3861 "../pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3864 "../pars.fsy"
                             Some(_1) 
                   )
# 3864 "../pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3867 "../pars.fsy"
                            [] 
                   )
# 3867 "../pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3868 "../pars.fsy"
                                                           [_3] 
                   )
# 3868 "../pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3872 "../pars.fsy"
                            [] 
                   )
# 3872 "../pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3875 "../pars.fsy"
                            [_2] 
                   )
# 3875 "../pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3878 "../pars.fsy"
                             [] 
                   )
# 3878 "../pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3882 "../pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2,arg,rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 3882 "../pars.fsy"
                 : 'recdExpr));
# 12450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3891 "../pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_,_) as f),None,m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 3891 "../pars.fsy"
                 : 'recdExpr));
# 12470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3904 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, None, [ f, None, None  ]) 
                   )
# 3904 "../pars.fsy"
                 : 'recdExpr));
# 12484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3911 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, None, [f, None, None]) 
                   )
# 3911 "../pars.fsy"
                 : 'recdExpr));
# 12499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3920 "../pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, None, l) 
                   )
# 3920 "../pars.fsy"
                 : 'recdExpr));
# 12516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3929 "../pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 3929 "../pars.fsy"
                 : 'recdExpr));
# 12532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3934 "../pars.fsy"
                            (None,Some (_1, (rhs parseState 2, None)), []) 
                   )
# 3934 "../pars.fsy"
                 : 'recdExpr));
# 12544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3937 "../pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 3937 "../pars.fsy"
                 : 'recdExpr));
# 12560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3942 "../pars.fsy"
                                     Some _1 
                   )
# 3942 "../pars.fsy"
                 : 'opt_seps_recd));
# 12571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3943 "../pars.fsy"
                           None 
                   )
# 3943 "../pars.fsy"
                 : 'opt_seps_recd));
# 12581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3946 "../pars.fsy"
                                     (rhs parseState 1), None 
                   )
# 3946 "../pars.fsy"
                 : 'seps_recd));
# 12591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3947 "../pars.fsy"
                                      let m = (rhs parseState 1) in (m, Some m.End) 
                   )
# 3947 "../pars.fsy"
                 : 'seps_recd));
# 12601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3948 "../pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
# 3948 "../pars.fsy"
                 : 'seps_recd));
# 12611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3949 "../pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
# 3949 "../pars.fsy"
                 : 'seps_recd));
# 12621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3955 "../pars.fsy"
                                mkRecdField _1 
                   )
# 3955 "../pars.fsy"
                 : 'pathOrUnderscore));
# 12632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3957 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 3957 "../pars.fsy"
                 : 'pathOrUnderscore));
# 12644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3963 "../pars.fsy"
                            (_3, Some _2) :: _1 
                   )
# 3963 "../pars.fsy"
                 : 'recdExprBindings));
# 12657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3964 "../pars.fsy"
                            [] 
                   )
# 3964 "../pars.fsy"
                 : 'recdExprBindings));
# 12667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3968 "../pars.fsy"
                             (_1, Some _3) 
                   )
# 3968 "../pars.fsy"
                 : 'recdBinding));
# 12679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3971 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 3971 "../pars.fsy"
                 : 'recdBinding));
# 12691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3975 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 3975 "../pars.fsy"
                 : 'recdBinding));
# 12704 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3979 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 3979 "../pars.fsy"
                 : 'recdBinding));
# 12716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3983 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 3983 "../pars.fsy"
                 : 'recdBinding));
# 12729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3994 "../pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,_2,_4, mNewExpr, m)) 
                   )
# 3994 "../pars.fsy"
                 : 'objExpr));
# 12745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3999 "../pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,[],_3, mNewExpr, m)) 
                   )
# 3999 "../pars.fsy"
                 : 'objExpr));
# 12760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4004 "../pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a,b) = _2,None in SynExpr.ObjExpr(a,b,[],[], mNewExpr, m)) 
                   )
# 4004 "../pars.fsy"
                 : 'objExpr));
# 12772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4010 "../pars.fsy"
                            (_2, Some(_4,Some(_5))) 
                   )
# 4010 "../pars.fsy"
                 : 'objExprBaseCall));
# 12786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4013 "../pars.fsy"
                            (_2, Some(_4,None)) 
                   )
# 4013 "../pars.fsy"
                 : 'objExprBaseCall));
# 12799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4016 "../pars.fsy"
                            _2,None 
                   )
# 4016 "../pars.fsy"
                 : 'objExprBaseCall));
# 12810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4021 "../pars.fsy"
                                           _1 
                   )
# 4021 "../pars.fsy"
                 : 'opt_objExprBindings));
# 12821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4022 "../pars.fsy"
                                           [] 
                   )
# 4022 "../pars.fsy"
                 : 'opt_objExprBindings));
# 12831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4026 "../pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4026 "../pars.fsy"
                 : 'objExprBindings));
# 12844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4031 "../pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4031 "../pars.fsy"
                 : 'objExprBindings));
# 12857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4036 "../pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b,m) -> Some b
                                               | SynMemberDefn.AutoProperty(_,_,_,_,_,_,_,_,_,_,m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(),m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(),x.Range)); None)) 
                   )
# 4036 "../pars.fsy"
                 : 'objExprBindings));
# 12873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4043 "../pars.fsy"
                                                                  _1 :: _2 
                   )
# 4043 "../pars.fsy"
                 : 'objExprInterfaces));
# 12885 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4047 "../pars.fsy"
                            [] 
                   )
# 4047 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 12895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4050 "../pars.fsy"
                            _1 :: _2 
                   )
# 4050 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 12907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4053 "../pars.fsy"
                            (* silent recovery *) _2 
                   )
# 4053 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 12918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4057 "../pars.fsy"
                           InterfaceImpl(_2, _3, lhs parseState) 
                   )
# 4057 "../pars.fsy"
                 : 'objExprInterface));
# 12933 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4060 "../pars.fsy"
                                  true 
                   )
# 4060 "../pars.fsy"
                 : 'forLoopDirection));
# 12943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4061 "../pars.fsy"
                                  false 
                   )
# 4061 "../pars.fsy"
                 : 'forLoopDirection));
# 12953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4065 "../pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4065 "../pars.fsy"
                 : 'anonLambdaExpr));
# 12966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4069 "../pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 (arbExpr("anonLambdaExpr1",(rhs parseState 4))) 
                   )
# 4069 "../pars.fsy"
                 : 'anonLambdaExpr));
# 12978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4073 "../pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4073 "../pars.fsy"
                 : 'anonLambdaExpr));
# 12991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4077 "../pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4) 
                   )
# 4077 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4082 "../pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2",(rhs parseState 4))) 
                   )
# 4082 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4086 "../pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3",(rhs parseState 4)))) 
                   )
# 4086 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4090 "../pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4",(rhs parseState 3)))) 
                   )
# 4090 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4093 "../pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5",(rhs parseState 2)))) 
                   )
# 4093 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4097 "../pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 4097 "../pars.fsy"
                 : 'anonMatchingExpr));
# 13065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4102 "../pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 4102 "../pars.fsy"
                 : 'anonMatchingExpr));
# 13078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4111 "../pars.fsy"
                            _1 
                   )
# 4111 "../pars.fsy"
                 : 'typeWithTypeConstraints));
# 13089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4114 "../pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3,lhs parseState) 
                   )
# 4114 "../pars.fsy"
                 : 'typeWithTypeConstraints));
# 13101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4118 "../pars.fsy"
                            _1 
                   )
# 4118 "../pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4121 "../pars.fsy"
                            let ty,arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty,List.rev _3,lhs parseState), arity 
                   )
# 4121 "../pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4127 "../pars.fsy"
                            None 
                   )
# 4127 "../pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4130 "../pars.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 4130 "../pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4136 "../pars.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs parseState), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 4136 "../pars.fsy"
                 : 'topType));
# 13163 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4141 "../pars.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 4141 "../pars.fsy"
                 : 'topType));
# 13174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4145 "../pars.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs parseState)),(mdata :: mdatas) 
                   )
# 4145 "../pars.fsy"
                 : 'topTupleType));
# 13186 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4148 "../pars.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 4148 "../pars.fsy"
                 : 'topTupleType));
# 13197 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4152 "../pars.fsy"
                            _1 :: _3 
                   )
# 4152 "../pars.fsy"
                 : 'topTupleTypeElements));
# 13209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4155 "../pars.fsy"
                            [_1] 
                   )
# 4155 "../pars.fsy"
                 : 'topTupleTypeElements));
# 13220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4159 "../pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _4,SynArgInfo(_1,false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4159 "../pars.fsy"
                 : 'topAppType));
# 13235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4164 "../pars.fsy"
                            _5,SynArgInfo(_1,true,Some _3) 
                   )
# 4164 "../pars.fsy"
                 : 'topAppType));
# 13248 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4167 "../pars.fsy"
                            (_2,SynArgInfo(_1,false,None)) 
                   )
# 4167 "../pars.fsy"
                 : 'topAppType));
# 13260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4170 "../pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo([],false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4170 "../pars.fsy"
                 : 'topAppType));
# 13274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4175 "../pars.fsy"
                            _4,SynArgInfo([],true,Some _2) 
                   )
# 4175 "../pars.fsy"
                 : 'topAppType));
# 13286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4178 "../pars.fsy"
                            _1,SynArgInfo([],false,None) 
                   )
# 4178 "../pars.fsy"
                 : 'topAppType));
# 13297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4184 "../pars.fsy"
                            SynType.Fun(_1,_3,lhs parseState) 
                   )
# 4184 "../pars.fsy"
                 : Ast.SynType));
# 13309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4187 "../pars.fsy"
                            _1 
                   )
# 4187 "../pars.fsy"
                 : Ast.SynType));
# 13320 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4192 "../pars.fsy"
                           SynType.Tuple((false,_1) :: _3,lhs parseState) 
                   )
# 4192 "../pars.fsy"
                 : 'tupleType));
# 13332 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4195 "../pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)):: _2, lhs parseState) 
                   )
# 4195 "../pars.fsy"
                 : 'tupleType));
# 13345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4199 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true,_1) :: _3, lhs parseState) 
                   )
# 4199 "../pars.fsy"
                 : 'tupleType));
# 13359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4203 "../pars.fsy"
                           _1 
                   )
# 4203 "../pars.fsy"
                 : 'tupleType));
# 13370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4207 "../pars.fsy"
                           (false,_1) :: _3 
                   )
# 4207 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4210 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           (true,_1) :: _3 
                   )
# 4210 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13396 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4214 "../pars.fsy"
                           [(false,_1)] 
                   )
# 4214 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4218 "../pars.fsy"
                           _1 :: _3 
                   )
# 4218 "../pars.fsy"
                 : 'tupleTypeElements));
# 13419 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4221 "../pars.fsy"
                           [_1] 
                   )
# 4221 "../pars.fsy"
                 : 'tupleTypeElements));
# 13430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4225 "../pars.fsy"
                           SynType.LongIdent(_1) 
                   )
# 4225 "../pars.fsy"
                 : 'appTypeCon));
# 13441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4228 "../pars.fsy"
                           SynType.Var(_1, lhs parseState) 
                   )
# 4228 "../pars.fsy"
                 : 'appTypeCon));
# 13452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4232 "../pars.fsy"
                           if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                           if _2 = "^-" then SynType.MeasurePower(_1, -(fst _3), lhs parseState)
                           else SynType.MeasurePower(_1, fst _3, lhs parseState)  
                   )
# 4232 "../pars.fsy"
                 : 'appTypeConPower));
# 13467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4237 "../pars.fsy"
                           _1 
                   )
# 4237 "../pars.fsy"
                 : 'appTypeConPower));
# 13478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4241 "../pars.fsy"
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 4241 "../pars.fsy"
                 : 'appType));
# 13490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4244 "../pars.fsy"
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 4244 "../pars.fsy"
                 : 'appType));
# 13502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4247 "../pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 4247 "../pars.fsy"
                 : 'appType));
# 13514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4250 "../pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4250 "../pars.fsy"
                 : 'appType));
# 13529 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4255 "../pars.fsy"
                             _1 
                   )
# 4255 "../pars.fsy"
                 : 'appType));
# 13540 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4258 "../pars.fsy"
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 4258 "../pars.fsy"
                 : 'appType));
# 13554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4263 "../pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 4263 "../pars.fsy"
                 : 'appType));
# 13565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4267 "../pars.fsy"
                             1 
                   )
# 4267 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13575 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4270 "../pars.fsy"
                             2 
                   )
# 4270 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4273 "../pars.fsy"
                             3 
                   )
# 4273 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4276 "../pars.fsy"
                             4 
                   )
# 4276 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 13605 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4280 "../pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2)::(List.rev commas) 
                   )
# 4280 "../pars.fsy"
                 : 'appTypePrefixArguments));
# 13618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4284 "../pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 4284 "../pars.fsy"
                 : 'typeArgListElements));
# 13631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4288 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 4288 "../pars.fsy"
                 : 'typeArgListElements));
# 13645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4293 "../pars.fsy"
                             [], [] 
                   )
# 4293 "../pars.fsy"
                 : 'typeArgListElements));
# 13655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4297 "../pars.fsy"
                           _1 
                   )
# 4297 "../pars.fsy"
                 : 'powerType));
# 13666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4300 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 4300 "../pars.fsy"
                 : 'powerType));
# 13681 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4305 "../pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 4305 "../pars.fsy"
                 : 'powerType));
# 13695 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4311 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 4311 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4315 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 4315 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13721 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4319 "../pars.fsy"
                             let mWhole = unionRanges (rhs parseState 1) _2.Range  // note: use "rhs parseState 1" to deal with parens in "(int) list"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) mWhole;
                             SynType.App(_2, None, [_1], [], None, true, mWhole) 
                   )
# 4319 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4324 "../pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4324 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4329 "../pars.fsy"
                             _1 
                   )
# 4329 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4332 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 4332 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4338 "../pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 4338 "../pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 13788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4344 "../pars.fsy"
                           _1 
                   )
# 4344 "../pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4347 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, - (fst _3), lhs parseState)
                            else SynType.MeasurePower(_1, fst _3, lhs parseState) 
                   )
# 4347 "../pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4353 "../pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            SynType.MeasurePower(_1, - (fst _4), lhs parseState) 
                   )
# 4353 "../pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 13830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4362 "../pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
# 4362 "../pars.fsy"
                 : 'atomType));
# 13841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4365 "../pars.fsy"
                            _1 
                   )
# 4365 "../pars.fsy"
                 : 'atomType));
# 13852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4368 "../pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 4368 "../pars.fsy"
                 : 'atomType));
# 13862 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4371 "../pars.fsy"
                             _2 
                   )
# 4371 "../pars.fsy"
                 : 'atomType));
# 13874 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4374 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 4374 "../pars.fsy"
                 : 'atomType));
# 13887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4378 "../pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 4378 "../pars.fsy"
                 : 'atomType));
# 13898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4381 "../pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 4381 "../pars.fsy"
                 : 'atomType));
# 13909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4385 "../pars.fsy"
                             let e,_ = _2
                             SynType.StaticConstantExpr(e, e.Range) 
                   )
# 4385 "../pars.fsy"
                 : 'atomType));
# 13921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4389 "../pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false,lhs parseState) 
                   )
# 4389 "../pars.fsy"
                 : 'atomType));
# 13931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4392 "../pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true,lhs parseState) 
                   )
# 4392 "../pars.fsy"
                 : 'atomType));
# 13941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4395 "../pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 4395 "../pars.fsy"
                 : 'atomType));
# 13952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4398 "../pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 4398 "../pars.fsy"
                 : 'atomType));
# 13964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4401 "../pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 4401 "../pars.fsy"
                 : 'atomType));
# 13976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4404 "../pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
# 4404 "../pars.fsy"
                 : 'atomType));
# 13990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4408 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 4408 "../pars.fsy"
                 : 'atomType));
# 14003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4414 "../pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 4414 "../pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 14017 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4420 "../pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 4420 "../pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 14029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4425 "../pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), lhs parseState 
                   )
# 4425 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4429 "../pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4429 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14067 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4439 "../pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4439 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4445 "../pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 4445 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4448 "../pars.fsy"
                            if not _3 then 
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsMissingGreaterThan())
                            (rhs parseState 1), None, false, [_2], [], (rhs2 parseState 1 2) 
                   )
# 4448 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4455 "../pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 4455 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14125 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4458 "../pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4458 "../pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4468 "../pars.fsy"
                            _1 
                   )
# 4468 "../pars.fsy"
                 : 'typeArgActual));
# 14154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4471 "../pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 4471 "../pars.fsy"
                 : 'typeArgActual));
# 14166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4474 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
# 4474 "../pars.fsy"
                 : 'typeArgActual));
# 14180 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4481 "../pars.fsy"
                            _1 
                   )
# 4481 "../pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4484 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
# 4484 "../pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14203 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4489 "../pars.fsy"
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("",m)],[]))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
# 4489 "../pars.fsy"
                 : 'dummyTypeArg));
# 14217 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4498 "../pars.fsy"
                            _2 
                   )
# 4498 "../pars.fsy"
                 : 'measureTypeArg));
# 14230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4501 "../pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 4501 "../pars.fsy"
                 : 'measureTypeArg));
# 14242 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4505 "../pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 4505 "../pars.fsy"
                 : 'measureTypeAtom));
# 14253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4508 "../pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
# 4508 "../pars.fsy"
                 : 'measureTypeAtom));
# 14264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4511 "../pars.fsy"
                            _2 
                   )
# 4511 "../pars.fsy"
                 : 'measureTypeAtom));
# 14276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4515 "../pars.fsy"
                             _1 
                   )
# 4515 "../pars.fsy"
                 : 'measureTypePower));
# 14287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4518 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, - (fst _3), lhs parseState)
                            else SynMeasure.Power(_1, fst _3, lhs parseState) 
                   )
# 4518 "../pars.fsy"
                 : 'measureTypePower));
# 14302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4523 "../pars.fsy"
                            if _2 <> "^" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Power(_1, - (fst _4), lhs parseState) 
                   )
# 4523 "../pars.fsy"
                 : 'measureTypePower));
# 14316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4527 "../pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 4527 "../pars.fsy"
                 : 'measureTypePower));
# 14328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4532 "../pars.fsy"
                           [_1] 
                   )
# 4532 "../pars.fsy"
                 : 'measureTypeSeq));
# 14339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4535 "../pars.fsy"
                           _1 :: _2 
                   )
# 4535 "../pars.fsy"
                 : 'measureTypeSeq));
# 14351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4539 "../pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 4539 "../pars.fsy"
                 : 'measureTypeExpr));
# 14362 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4542 "../pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 4542 "../pars.fsy"
                 : 'measureTypeExpr));
# 14374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4545 "../pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 4545 "../pars.fsy"
                 : 'measureTypeExpr));
# 14389 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4550 "../pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 4550 "../pars.fsy"
                 : 'measureTypeExpr));
# 14402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4555 "../pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 4555 "../pars.fsy"
                 : Ast.SynTypar));
# 14414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4559 "../pars.fsy"
                            _1 
                   )
# 4559 "../pars.fsy"
                 : Ast.SynTypar));
# 14425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4563 "../pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            Typar(_2,HeadTypeStaticReq,false) 
                   )
# 4563 "../pars.fsy"
                 : 'staticallyKnownHeadTypar));
# 14438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4570 "../pars.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 4570 "../pars.fsy"
                 : Ast.Ident));
# 14449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4576 "../pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName,rhs parseState 1)],[]) 
                   )
# 4576 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4579 "../pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4579 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4582 "../pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 4582 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4585 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 4585 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4592 "../pars.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 4592 "../pars.fsy"
                 : 'opName));
# 14507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4595 "../pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****",rhs parseState 2) 
                   )
# 4595 "../pars.fsy"
                 : 'opName));
# 14518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4598 "../pars.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 4598 "../pars.fsy"
                 : 'opName));
# 14528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4602 "../pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 4602 "../pars.fsy"
                 : 'opName));
# 14541 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4607 "../pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|_|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 4607 "../pars.fsy"
                 : 'opName));
# 14554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4613 "../pars.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 4613 "../pars.fsy"
                 : 'operatorName));
# 14567 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4617 "../pars.fsy"
                                               _1 
                   )
# 4617 "../pars.fsy"
                 : 'operatorName));
# 14578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4619 "../pars.fsy"
                                            _1 
                   )
# 4619 "../pars.fsy"
                 : 'operatorName));
# 14589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4621 "../pars.fsy"
                                            _1 
                   )
# 4621 "../pars.fsy"
                 : 'operatorName));
# 14600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4623 "../pars.fsy"
                                         _1 
                   )
# 4623 "../pars.fsy"
                 : 'operatorName));
# 14611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4625 "../pars.fsy"
                                        _1 
                   )
# 4625 "../pars.fsy"
                 : 'operatorName));
# 14622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4627 "../pars.fsy"
                                          _1 
                   )
# 4627 "../pars.fsy"
                 : 'operatorName));
# 14633 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4629 "../pars.fsy"
                                                 _1 
                   )
# 4629 "../pars.fsy"
                 : 'operatorName));
# 14644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4631 "../pars.fsy"
                                  "$" 
                   )
# 4631 "../pars.fsy"
                 : 'operatorName));
# 14654 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4633 "../pars.fsy"
                                              _1 
                   )
# 4633 "../pars.fsy"
                 : 'operatorName));
# 14665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4635 "../pars.fsy"
                                 "-" 
                   )
# 4635 "../pars.fsy"
                 : 'operatorName));
# 14675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4637 "../pars.fsy"
                                "*" 
                   )
# 4637 "../pars.fsy"
                 : 'operatorName));
# 14685 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4639 "../pars.fsy"
                                  "=" 
                   )
# 4639 "../pars.fsy"
                 : 'operatorName));
# 14695 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4641 "../pars.fsy"
                              "or" 
                   )
# 4641 "../pars.fsy"
                 : 'operatorName));
# 14705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4643 "../pars.fsy"
                                "<" 
                   )
# 4643 "../pars.fsy"
                 : 'operatorName));
# 14716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4645 "../pars.fsy"
                                   ">" 
                   )
# 4645 "../pars.fsy"
                 : 'operatorName));
# 14727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4647 "../pars.fsy"
                                 "?" 
                   )
# 4647 "../pars.fsy"
                 : 'operatorName));
# 14737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4649 "../pars.fsy"
                               "&" 
                   )
# 4649 "../pars.fsy"
                 : 'operatorName));
# 14747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4651 "../pars.fsy"
                                   "&&" 
                   )
# 4651 "../pars.fsy"
                 : 'operatorName));
# 14757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4653 "../pars.fsy"
                                   "||" 
                   )
# 4653 "../pars.fsy"
                 : 'operatorName));
# 14767 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4655 "../pars.fsy"
                                        ":=" 
                   )
# 4655 "../pars.fsy"
                 : 'operatorName));
# 14777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4658 "../pars.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs parseState); 
                             _1 
                   )
# 4658 "../pars.fsy"
                 : 'operatorName));
# 14790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4662 "../pars.fsy"
                                      _1 
                   )
# 4662 "../pars.fsy"
                 : 'operatorName));
# 14801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4664 "../pars.fsy"
                                   ".." 
                   )
# 4664 "../pars.fsy"
                 : 'operatorName));
# 14811 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4666 "../pars.fsy"
                                           ".. .." 
                   )
# 4666 "../pars.fsy"
                 : 'operatorName));
# 14821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4669 "../pars.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 4669 "../pars.fsy"
                 : 'operatorName));
# 14834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4675 "../pars.fsy"
                             if not (String.isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             if (_1.IndexOf('|') <> -1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseContainsPipe());  
                             _1 
                   )
# 4675 "../pars.fsy"
                 : 'activePatternCaseName));
# 14847 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4682 "../pars.fsy"
                             [_2] 
                   )
# 4682 "../pars.fsy"
                 : 'activePatternCaseNames));
# 14858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4685 "../pars.fsy"
                             _3 :: _1 
                   )
# 4685 "../pars.fsy"
                 : 'activePatternCaseNames));
# 14870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4690 "../pars.fsy"
                            _1 
                   )
# 4690 "../pars.fsy"
                 : 'identOrOp));
# 14881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4693 "../pars.fsy"
                            _1 
                   )
# 4693 "../pars.fsy"
                 : 'identOrOp));
# 14892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4699 "../pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4699 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14903 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4702 "../pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4702 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4705 "../pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 4705 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4708 "../pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1],[rhs parseState 2]) 
                   )
# 4708 "../pars.fsy"
                 : Ast.LongIdentWithDots));
# 14937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4713 "../pars.fsy"
                                      _1 
                   )
# 4713 "../pars.fsy"
                 : 'nameop));
# 14948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4716 "../pars.fsy"
                                     
                   )
# 4716 "../pars.fsy"
                 : 'topSeparator));
# 14958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4717 "../pars.fsy"
                                               
                   )
# 4717 "../pars.fsy"
                 : 'topSeparator));
# 14968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4718 "../pars.fsy"
                                     
                   )
# 4718 "../pars.fsy"
                 : 'topSeparator));
# 14978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4721 "../pars.fsy"
                                                            
                   )
# 4721 "../pars.fsy"
                 : 'topSeparators));
# 14989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4722 "../pars.fsy"
                                                      
                   )
# 4722 "../pars.fsy"
                 : 'topSeparators));
# 15001 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4725 "../pars.fsy"
                                                          
                   )
# 4725 "../pars.fsy"
                 : 'opt_topSeparators));
# 15013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4726 "../pars.fsy"
                                                          
                   )
# 4726 "../pars.fsy"
                 : 'opt_topSeparators));
# 15023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4730 "../pars.fsy"
                                     
                   )
# 4730 "../pars.fsy"
                 : 'seps));
# 15033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4731 "../pars.fsy"
                                     
                   )
# 4731 "../pars.fsy"
                 : 'seps));
# 15043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4732 "../pars.fsy"
                                               
                   )
# 4732 "../pars.fsy"
                 : 'seps));
# 15053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4733 "../pars.fsy"
                                               
                   )
# 4733 "../pars.fsy"
                 : 'seps));
# 15063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4738 "../pars.fsy"
                             
                   )
# 4738 "../pars.fsy"
                 : 'declEnd));
# 15073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4740 "../pars.fsy"
                               
                   )
# 4740 "../pars.fsy"
                 : 'declEnd));
# 15083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4742 "../pars.fsy"
                             
                   )
# 4742 "../pars.fsy"
                 : 'declEnd));
# 15093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4747 "../pars.fsy"
                            
                   )
# 4747 "../pars.fsy"
                 : 'opt_declEnd));
# 15103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4749 "../pars.fsy"
                             
                   )
# 4749 "../pars.fsy"
                 : 'opt_declEnd));
# 15113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4751 "../pars.fsy"
                            
                   )
# 4751 "../pars.fsy"
                 : 'opt_declEnd));
# 15123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4753 "../pars.fsy"
                            
                   )
# 4753 "../pars.fsy"
                 : 'opt_declEnd));
# 15133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4756 "../pars.fsy"
                                       
                   )
# 4756 "../pars.fsy"
                 : 'opt_ODECLEND));
# 15143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4757 "../pars.fsy"
                                       
                   )
# 4757 "../pars.fsy"
                 : 'opt_ODECLEND));
# 15153 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4760 "../pars.fsy"
                                       deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 4760 "../pars.fsy"
                 : 'deprecated_opt_equals));
# 15163 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4761 "../pars.fsy"
                                        
                   )
# 4761 "../pars.fsy"
                 : 'deprecated_opt_equals));
# 15173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4764 "../pars.fsy"
                                       
                   )
# 4764 "../pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4765 "../pars.fsy"
                                       
                   )
# 4765 "../pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4768 "../pars.fsy"
                                       
                   )
# 4768 "../pars.fsy"
                 : 'opt_seps));
# 15204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4769 "../pars.fsy"
                                       
                   )
# 4769 "../pars.fsy"
                 : 'opt_seps));
# 15214 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4772 "../pars.fsy"
                                       true 
                   )
# 4772 "../pars.fsy"
                 : 'opt_rec));
# 15224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4773 "../pars.fsy"
                                       false 
                   )
# 4773 "../pars.fsy"
                 : 'opt_rec));
# 15234 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4776 "../pars.fsy"
                                       
                   )
# 4776 "../pars.fsy"
                 : 'opt_bar));
# 15244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4777 "../pars.fsy"
                                       
                   )
# 4777 "../pars.fsy"
                 : 'opt_bar));
# 15254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4780 "../pars.fsy"
                                       true 
                   )
# 4780 "../pars.fsy"
                 : 'opt_inline));
# 15264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4781 "../pars.fsy"
                                       false 
                   )
# 4781 "../pars.fsy"
                 : 'opt_inline));
# 15274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4784 "../pars.fsy"
                                       true 
                   )
# 4784 "../pars.fsy"
                 : 'opt_mutable));
# 15284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4785 "../pars.fsy"
                                       false 
                   )
# 4785 "../pars.fsy"
                 : 'opt_mutable));
# 15294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4789 "../pars.fsy"
                               
                   )
# 4789 "../pars.fsy"
                 : 'doToken));
# 15304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4790 "../pars.fsy"
                               
                   )
# 4790 "../pars.fsy"
                 : 'doToken));
# 15314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4793 "../pars.fsy"
                                
                   )
# 4793 "../pars.fsy"
                 : 'doneDeclEnd));
# 15324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4794 "../pars.fsy"
                                    
                   )
# 4794 "../pars.fsy"
                 : 'doneDeclEnd));
# 15334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4797 "../pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 4797 "../pars.fsy"
                 : 'structOrBegin));
# 15344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4798 "../pars.fsy"
                                 
                   )
# 4798 "../pars.fsy"
                 : 'structOrBegin));
# 15354 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4801 "../pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4801 "../pars.fsy"
                 : 'sigOrBegin));
# 15364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4802 "../pars.fsy"
                                 
                   )
# 4802 "../pars.fsy"
                 : 'sigOrBegin));
# 15374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4805 "../pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4805 "../pars.fsy"
                 : 'colonOrEquals));
# 15384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4806 "../pars.fsy"
                                  
                   )
# 4806 "../pars.fsy"
                 : 'colonOrEquals));
# 15394 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4810 "../pars.fsy"
                                  _1 
                   )
# 4810 "../pars.fsy"
                 : 'stringOrKeywordString));
# 15405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4811 "../pars.fsy"
                                          _1 
                   )
# 4811 "../pars.fsy"
                 : 'stringOrKeywordString));
# 15416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4814 "../pars.fsy"
                                                     
                   )
# 4814 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4815 "../pars.fsy"
                                                     
                   )
# 4815 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15436 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4816 "../pars.fsy"
                                         
                   )
# 4816 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4819 "../pars.fsy"
                                                 
                   )
# 4819 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4820 "../pars.fsy"
                                         
                   )
# 4820 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4824 "../pars.fsy"
                                                        
                   )
# 4824 "../pars.fsy"
                 : 'typeKeyword));
# 15477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4825 "../pars.fsy"
                                        
                   )
# 4825 "../pars.fsy"
                 : 'typeKeyword));
# 15487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4826 "../pars.fsy"
                                
                   )
# 4826 "../pars.fsy"
                 : 'typeKeyword));
# 15497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4830 "../pars.fsy"
                                                            
                   )
# 4830 "../pars.fsy"
                 : 'moduleKeyword));
# 15508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4831 "../pars.fsy"
                                          
                   )
# 4831 "../pars.fsy"
                 : 'moduleKeyword));
# 15518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4832 "../pars.fsy"
                                  
                   )
# 4832 "../pars.fsy"
                 : 'moduleKeyword));
# 15528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4835 "../pars.fsy"
                                                     
                   )
# 4835 "../pars.fsy"
                 : 'rbrace));
# 15539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4836 "../pars.fsy"
                                          
                   )
# 4836 "../pars.fsy"
                 : 'rbrace));
# 15549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4837 "../pars.fsy"
                                  
                   )
# 4837 "../pars.fsy"
                 : 'rbrace));
# 15559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4840 "../pars.fsy"
                                                     
                   )
# 4840 "../pars.fsy"
                 : 'rparen));
# 15570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4841 "../pars.fsy"
                                          
                   )
# 4841 "../pars.fsy"
                 : 'rparen));
# 15580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4842 "../pars.fsy"
                                  
                   )
# 4842 "../pars.fsy"
                 : 'rparen));
# 15590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4845 "../pars.fsy"
                                                           
                   )
# 4845 "../pars.fsy"
                 : 'oblockend));
# 15601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4846 "../pars.fsy"
                                             
                   )
# 4846 "../pars.fsy"
                 : 'oblockend));
# 15611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4847 "../pars.fsy"
                                     
                   )
# 4847 "../pars.fsy"
                 : 'oblockend));
# 15621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4850 "../pars.fsy"
                                            false 
                   )
# 4850 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4851 "../pars.fsy"
                                              false 
                   )
# 4851 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4852 "../pars.fsy"
                                              false 
                   )
# 4852 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4853 "../pars.fsy"
                                                 false 
                   )
# 4853 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15661 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4854 "../pars.fsy"
                                   _1 
                   )
# 4854 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4857 "../pars.fsy"
                                            false 
                   )
# 4857 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4858 "../pars.fsy"
                                              false 
                   )
# 4858 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15692 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4859 "../pars.fsy"
                                              false 
                   )
# 4859 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4860 "../pars.fsy"
                                              false 
                   )
# 4860 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4861 "../pars.fsy"
                                                 false 
                   )
# 4861 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 15722 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4862 "../pars.fsy"
                                   _1 
                   )
# 4862 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 15734 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 195;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : Ast.ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : Ast.ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : Ast.ParsedFsiInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
