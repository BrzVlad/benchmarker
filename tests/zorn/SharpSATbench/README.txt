SharpSATbench (version 1.0)

A clause-based SAT solver written in C# by Lintao Zhang
Collected by Ben Zorn (Microsoft Research, zorn@microsoft.com)

Description:

SharpSATbench is a clause-based satisfiability solver where the logic
formula is written in Conjunctive Normal Form.  SharpSATbench is
compute-intensive, requiring a moderate-sized heap.  There are 
10,900 lines of code in the C# source of the benchmark.

Compiler settings: SharpSATbench is compiled with the CLR 1.0.3705
csc.exe compiler with the /optimize flag.

Developer: Lintao Zhang

Compatibility: CLR 1.0.3705, Rotor 1.0 (others untested) 

Download: visit
http://research.microsoft.com/research/downloads/default.aspx

Source availability: not currently available

Any questions or concerns regarding SharpSATbench should be directed
to Ben Zorn (zorn@microsoft.com).

_______________________________________

To invoke SharpSATbench:

SharpSATBench.exe config_file.cnf

where config_file.cnf is a configuration file describing the formula to solve.

The file Makefile provides a very simple makefile that can be used to
execute either the CLR version of the benchmark (nmake test) or the
Rotor version (nmake test-rotor).
_______________________________________

Inputs:

There are three sample inputs that are included with this benchmark:
input1.cnf, input2.cnf, input3.cnf.

Additional inputs 4pipe_4_ooo.cnf, 5pipe_4_ooo.cnf, 9vliw_bp_mc.cnf
are available from a collection of CNF inputs generated by Miroslav
N. Velev.  Many additional inputs of arbitrary sizes and execution
times are available from Miroslav N. Velev's website at:

http://www.ece.cmu.edu/~mvelev/sat_benchmarks.html

The terms of use governing the use of Velev's benchmarks are documented
at:

http://www.ece.cmu.edu/~mvelev/README-fvp-unsat.2.0-iscas-cgrasp

For purposes of consistency, we recommend using the following examples
for CLI performance studies based on SharpSAT:

4pipe_4_ooo.cnf
5pipe_4_ooo.cnf
9vliw_bp_mc.cnf

Rough execution time on a 2.4 GHz Pentium 4 processor with 1Gb of
memory:

CLI Implementation	Input	  	Num Vars	SAT?	Time (sec)

CLR 1.0			input1.cnf	7559		yes	1.65
CLR 1.0			input2.cnf	4821		yes	5.15
CLR 1.0			input3.cnf	2557		no	19.4
CLR 1.0			4pipe_4_ooo.cnf	5525		no	190.2
CLR 1.0			5pipe_4_ooo.cnf	9764		no	1025.5
CLR 1.0			9vliw_bp_mc.cnf	20093		no	935.6

Rotor 1.0		input1.cnf	7559		yes	6.1
Rotor 1.0		input2.cnf	4821		yes	17.9
Rotor 1.0		input3.cnf	2577		no	72.8
Rotor 1.0		4pipe_4_ooo.cnf	5525		no	702.9	
Rotor 1.0		5pipe_4_ooo.cnf	9764		no	3238.4
Rotor 1.0		9vliw_bp_mc.cnf	20093		no	3209.1

Notes: 
 - Rotor times are measured using the free build (env.bat free)
